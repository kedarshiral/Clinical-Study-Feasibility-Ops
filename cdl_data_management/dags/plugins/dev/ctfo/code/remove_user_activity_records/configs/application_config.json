{
  "ctfo_services": {
    "rds_queries": {
      "create_scenario": {
        "get_smry_details": "select * from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag='Y'",
        "update_time_flag": "update $$schema$$.f_rpt_scenario_stdy_sumry set updated_timestamp = '$$timestamp$$', updated_by='$$user_id$$' where scenario_id ='$$scenario_id$$' And theme_id = '$$theme_id$$' And active_flag = 'Y';",
        "f_rpt_scenario_stdy_sumry_insert_query": "INSERT INTO $$schema$$.f_rpt_scenario_stdy_sumry( theme_id, scenario_id, protocol_id, study_name, scenario_name, therapeutic_area, indication, phase, description, duration, no_of_sites, no_of_patients, created_by, created_timestamp, updated_by, updated_timestamp, scenario_status, housekeeping_status, version, active_flag, save_optimized, optimize_site_id, final_list_id, study_code, trial_universe_start_date, trial_universe_end_date, lock_status, multi_cohort_flag, no_of_cohort_groups, qualtrics_user, pt_cycle_id, manual_mail_subject) VALUES( $$theme_id$$, $$scenario_id$$, $$protocol_id$$, $$study_name$$, $$scenario_name$$, $$therapeutic_area$$, $$indication$$, $$phase$$, $$description$$, $$duration$$, $$no_of_sites$$, $$no_of_patients$$, $$created_by$$, $$created_timestamp$$, $$updated_by$$, $$updated_timestamp$$, $$scenario_status$$, $$housekeeping_status$$, $$version$$, $$active_flag$$, 'N', NULL, NULL, $$study_code$$, $$trial_uni_start_dt$$, $$trial_uni_end_dt$$, false, $$multi_cohort_flag$$, $$no_of_cohort_groups$$, $$qualtrics_user$$, $$pt_cycle_id$$, $$manual_mail_subject$$)",
        "get_version_query": "select version from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag='Y'",
        "update_active_flag": "update $$schema$$.f_rpt_scenario_stdy_sumry set active_flag = 'N', updated_timestamp = '$$timestamp$$', updated_by='$$user_id$$' where scenario_id=$$scenario_id$$ and theme_id = $$theme_id$$",
        "update_stdy_sumry_by_optimization": "update $$schema$$.f_rpt_scenario_stdy_sumry set save_optimized='Y',scenario_status='optimised', optimize_site_id='$$optimize_site_id$$', updated_by='$$user_id$$', updated_timestamp='$$current_timestamp$$' where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag='Y'",
        "display_scenario_status": "SELECT scenario_status, coalesce(lock_status, false) as lock_status, save_optimized from $$schema$$.f_rpt_scenario_stdy_sumry WHERE scenario_id = '$$scenario_id$$' AND theme_id ='$$theme_id$$' AND active_flag = 'Y'",
        "update_scenario_status": "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry set scenario_status ='saved', updated_timestamp = '$$timestamp$$', updated_by = '$$user_id$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id ='$$theme_id$$' AND active_flag = 'Y'",
        "unlock_scenario": "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry set updated_timestamp = '$$timestamp$$', lock_status = $$lock_status$$, scenario_status = '$$scenario_status$$', updated_by = '$$user_id$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id ='$$theme_id$$' AND active_flag = 'Y'",
        "f_rpt_cohort_scenario_stdy_sumry_insert_query": "INSERT INTO $$schema$$.f_rpt_cohort_scenario_stdy_sumry( theme_id ,scenario_id ,version ,cohort_id ,cohort_name ,no_of_patients ,no_of_sites ,last_patient_in ,recruitment_duration ,created_by ,created_timestamp ,updated_by ,updated_timestamp ,active_flag) VALUES $$cohort_condition_values$$",
        "update_cohort_active_flag": "UPDATE $$schema$$.f_rpt_cohort_scenario_stdy_sumry SET active_flag = 'N' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$'",
        "update_edited_screen" : "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry set study_name = $$study_name$$, scenario_name = $$scenario_name$$, description = $$description$$ where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ AND active_flag = 'Y'",
        "study_name_update": "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry set study_name = $$study_name$$ where theme_id = $$theme_id$$ AND active_flag = 'Y' AND housekeeping_status = 'active'",
        "update_cohort_conditions" : "UPDATE $$schema$$.f_rpt_cohort_scenario_stdy_sumry set no_of_patients = $$no_of_patients$$, last_patient_in = $$last_patient_in$$, recruitment_duration = $$recruitment_duration$$ where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag = 'Y'",
        "pt_cycle_id" : "select max(pt_cycle_id) as pt_cycle_id from $$schema_reporting$$.f_rpt_country",
        "update_ta_alias": "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry set manual_mail_subject = $$manual_mail_subject$$ where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ AND active_flag = 'Y'"
      },
      "display_filter": {
        "get_active_filter": "select * from $$schema$$.f_rpt_scenario_stdy_criteria where scenario_id ='$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y';"
      },
      "scenario_housekeeping": {
        "validate_user_query": "select created_by from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = '$$scenario_id$$' and housekeeping_status = 'active' limit 1;",
        "validate_study_user_query": "select distinct created_by from $$schema$$.f_rpt_scenario_stdy_sumry where theme_id = '$$theme_id$$' and housekeeping_status = 'active';",
        "update_status_query": "update $$schema$$.f_rpt_scenario_stdy_sumry set housekeeping_status = '$$action$$', updated_by = '$$user_id$$', updated_timestamp = '$$timestamp$$' where scenario_id ='$$scenario_id$$' And theme_id = '$$theme_id$$' And active_flag = 'Y';",
        "update_theme_status_query": "update $$schema$$.f_rpt_scenario_stdy_sumry set housekeeping_status = '$$action$$', updated_by = '$$user_id$$', updated_timestamp = '$$timestamp$$' where theme_id = '$$theme_id$$' And created_by = '$$user_id$$' And active_flag = 'Y';"
      },
      "search_query": {
        "fetch_study_id": "select distinct protocol_id,study_name from $$schema$$.f_rpt_scenario_stdy_sumry where lower(theme_id) like '%$$search_value$$%';",
        "fetch_records_on_protocol_id": "select reference_value, string_agg(therapeutic_area, '#') as therapeutic_area, string_agg(indication, '#') as indication, string_agg(phase, '#') as phase, study_name from (select distinct nct_id as reference_value, therapeutic_area, disease as indication, trial_phase as phase, study_name from $$schema_reporting$$.f_rpt_filters_setup_all where lower(nct_id) like '%$$search_value$$%') res group by reference_value, study_name order by reference_value limit $$limit$$ offset $$offset$$;",
        "fetch_records_on_theme_id": "select distinct theme_id as reference_value, therapeutic_area, indication, phase, study_name, no_of_sites, no_of_patients, duration from $$schema$$.f_rpt_scenario_stdy_sumry where lower(theme_id) like '%$$search_value$$%' order by theme_id limit $$limit$$ offset $$offset$$;",
        "fetch_records_on_study_name": "select distinct on (study_name) study_name as reference_value, theme_id, therapeutic_area, indication, phase, study_name, no_of_sites, no_of_patients, duration from $$schema$$.f_rpt_scenario_stdy_sumry where lower(study_name) like '%$$search_value$$%' order by study_name limit $$limit$$ offset $$offset$$;",
        "fetch_records_on_study_code": "select distinct study_code from $$schema_reporting$$.f_rpt_study_country_details where lower(study_code) like '%$$search_value$$%' order by study_code limit $$limit$$ offset $$offset$$;",
        "fetch_records_on_api_key": "select username as user_name,user_id as qualtrics_user_id from $$schema$$.f_rpt_api_key_store order by username limit $$limit$$ offset $$offset$$;"
      },
      "scenario_details": {
        "list_scenario_count": "select theme_id,housekeeping_status as list_type, count(scenario_id) from $$schema$$.f_rpt_scenario_stdy_sumry where theme_id in $$themes$$ and active_flag='Y' and housekeeping_status  in ('active','archive') group by theme_id, housekeeping_status;",
        "list_scenario_with_search": "with cte_common as ( SELECT A.theme_id, A.nct_trial_id, A.study_name, A.protocol_id, A.scenario_id, A.scenario_name, A.scenario_status, A.created_by, A.updated_timestamp, A.therapeutic_area, A.indication, A.phase, A.description, A.duration, A.no_of_sites, A.no_of_patients, A.ROLE, A.active_flag, A.save_optimized, A.optimize_site_id, a.final_list_id, A.trial_universe_start_date, A.trial_universe_end_date, A.study_code, A.lock_status, A.qualtrics_user, count(C.scenario_id) AS count FROM ( SELECT a.theme_id, a.nct_trial_id, a.study_name, a.protocol_id, a.scenario_id, a.scenario_name, case when a.scenario_status in ('created', 'saved', 'optimised') then 'created' else a.scenario_status end as scenario_status, a.created_by, a.updated_timestamp, a.therapeutic_area, a.indication, a.phase, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.active_flag, a.save_optimized, a.optimize_site_id, a.final_list_id, 'creator' AS ROLE, a.trial_universe_start_date, a.trial_universe_end_date, a.study_code, a.lock_status, a.qualtrics_user FROM $$schema$$.f_rpt_scenario_stdy_sumry a WHERE a.active_flag = 'Y' AND a.housekeeping_status = '$$status$$' AND (a.theme_id, a.scenario_id) IN ( SELECT x1.theme_id, x1.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x1 WHERE lower(theme_id) LIKE '%$$search_parameter$$%' UNION SELECT x2.theme_id, x2.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x2 WHERE lower(scenario_name) LIKE '%$$search_parameter$$%' UNION SELECT x3.theme_id, x3.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x3 WHERE lower(study_name) LIKE '%$$search_parameter$$%' UNION SELECT x4.theme_id, x4.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x4 WHERE lower(therapeutic_area) LIKE '%$$search_parameter$$%' UNION SELECT x4.theme_id, x4.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x4 WHERE lower(indication) LIKE '%$$search_parameter$$%' ) UNION SELECT a.theme_id, a.nct_trial_id, a.study_name, a.protocol_id, a.scenario_id, a.scenario_name, case when a.scenario_status in ('created', 'saved', 'optimised') then 'created' else a.scenario_status end as scenario_status, a.created_by, a.updated_timestamp, a.therapeutic_area, a.indication, a.phase, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.active_flag, a.save_optimized, a.optimize_site_id, a.final_list_id, b.delegated_role AS ROLE, a.trial_universe_start_date, a.trial_universe_end_date, a.study_code, a.lock_status, a.qualtrics_user FROM $$schema$$.f_rpt_scenario_stdy_sumry a INNER JOIN $$schema$$.f_rpt_scenario_stdy_collab b ON a.theme_id = b.theme_id AND a.scenario_id = b.scenario_id AND a.housekeeping_status = '$$status$$' AND a.active_flag = 'Y' AND b.active_flag = 'Y' ) AS A INNER JOIN $$schema$$.f_rpt_scenario_stdy_sumry C ON A.theme_id = C.theme_id AND A.scenario_id = C.scenario_id AND A.active_flag = 'Y' AND (a.theme_id, a.scenario_id) IN ( SELECT x1.theme_id, x1.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x1 WHERE lower(theme_id) LIKE '%$$search_parameter$$%' UNION SELECT x2.theme_id, x2.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x2 WHERE lower(scenario_name) LIKE '%$$search_parameter$$%' UNION SELECT x3.theme_id, x3.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x3 WHERE lower(study_name) LIKE '%$$search_parameter$$%' UNION SELECT x4.theme_id, x4.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x4 WHERE lower(therapeutic_area) LIKE '%$$search_parameter$$%' UNION SELECT x4.theme_id, x4.scenario_id FROM $$schema$$.f_rpt_scenario_stdy_sumry x4 WHERE lower(indication) LIKE '%$$search_parameter$$%' ) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 ) SELECT *, max(updated_timestamp) OVER (PARTITION BY theme_id) AS last_updated_time FROM ( SELECT d.*, list_id.site_list_id as site_list_id FROM cte_common as d left join ( select theme_id, scenario_id, max(site_list_id) as site_list_id from $$schema$$.f_rpt_scenario_site_ranking_temp where active_flag = 'Y' group by 1, 2 ) list_id on d.theme_id = list_id.theme_id and d.scenario_id = list_id.scenario_id WHERE EXISTS ( SELECT theme_id FROM ( SELECT g.theme_id, max(g.last_updated_time) AS last_updated_time FROM ( SELECT d.theme_id, max(d.updated_timestamp) OVER (PARTITION BY d.theme_id) AS last_updated_time FROM cte_common as d ) g GROUP BY theme_id ORDER BY last_updated_time $$order_by$$ limit $$limit$$ offset $$offset$$ ) k WHERE d.theme_id = k.theme_id ) ) s ORDER BY last_updated_time $$order_by$$;",
        "list_scenario_without_search": "with cte_common as ( SELECT A.theme_id, A.nct_trial_id, A.study_name, A.protocol_id, A.scenario_id, A.scenario_name, A.scenario_status, A.created_by, A.updated_timestamp, A.therapeutic_area, A.indication, A.phase, A.description, A.duration, A.no_of_sites, A.no_of_patients, A.ROLE, A.active_flag, A.save_optimized, A.optimize_site_id, a.final_list_id, A.trial_universe_start_date, A.trial_universe_end_date, A.study_code, A.lock_status, A.qualtrics_user, count(C.scenario_id) AS count FROM ( SELECT a.theme_id, a.nct_trial_id, a.study_name, a.protocol_id, a.scenario_id, a.scenario_name, case when a.scenario_status in ('created', 'saved', 'optimised') then 'created' else a.scenario_status end as scenario_status, a.created_by, a.updated_timestamp, a.therapeutic_area, a.indication, a.phase, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.active_flag, a.save_optimized, a.optimize_site_id, a.final_list_id, 'creator' AS ROLE, a.trial_universe_start_date, a.trial_universe_end_date, a.study_code, a.lock_status, a.qualtrics_user FROM $$schema$$.f_rpt_scenario_stdy_sumry a WHERE a.active_flag = 'Y' AND a.housekeeping_status = '$$status$$' UNION SELECT a.theme_id, a.nct_trial_id, a.study_name, a.protocol_id, a.scenario_id, a.scenario_name, case when a.scenario_status in ('created', 'saved', 'optimised') then 'created' else a.scenario_status end as scenario_status, a.created_by, a.updated_timestamp, a.therapeutic_area, a.indication, a.phase, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.active_flag, a.save_optimized, a.optimize_site_id, a.final_list_id, b.delegated_role AS ROLE, a.trial_universe_start_date, a.trial_universe_end_date, a.study_code, a.lock_status, a.qualtrics_user FROM $$schema$$.f_rpt_scenario_stdy_sumry a INNER JOIN $$schema$$.f_rpt_scenario_stdy_collab b ON a.theme_id = b.theme_id AND a.scenario_id = b.scenario_id AND a.housekeeping_status = '$$status$$' AND a.active_flag = 'Y' AND b.active_flag = 'Y' ) AS A INNER JOIN $$schema$$.f_rpt_scenario_stdy_sumry C ON A.theme_id = C.theme_id AND A.scenario_id = C.scenario_id AND A.active_flag = 'Y' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 ) SELECT *, max(updated_timestamp) OVER (PARTITION BY theme_id) AS last_updated_time FROM ( SELECT d.*, list_id.site_list_id as site_list_id FROM cte_common as d left join ( select theme_id, scenario_id, max(site_list_id) as site_list_id from $$schema$$.f_rpt_scenario_site_ranking_temp where active_flag = 'Y' group by 1, 2 ) list_id on d.theme_id = list_id.theme_id and d.scenario_id = list_id.scenario_id WHERE EXISTS ( SELECT theme_id FROM ( SELECT g.theme_id, max(g.last_updated_time) AS last_updated_time FROM ( SELECT a.theme_id, max(a.updated_timestamp) OVER (PARTITION BY a.theme_id) AS last_updated_time FROM cte_common as a ) g GROUP BY theme_id ORDER BY last_updated_time $$order_by$$ limit $$limit$$ offset $$offset$$ ) k WHERE d.theme_id = k.theme_id ) ) s ORDER BY last_updated_time $$order_by$$;",
        "list_scenario_without_search_without_limit": "SELECT coalesce(sum(case when d.scenario_status in ('created','saved','optimised')  then 1 else 0 end), 0) AS created_counter, coalesce(sum(case when d.scenario_status = 'in progress' then 1 else 0 end), 0) AS in_progress_counter, coalesce(sum(case when d.scenario_status = 'completed' then 1 else 0 end), 0) AS completed_counter, count(distinct d.theme_id) as total_records_counter FROM (SELECT A.theme_id, A.nct_trial_id, A.study_name, A.protocol_id, A.scenario_id, A.scenario_name, A.scenario_status, A.created_by, A.updated_timestamp, A.therapeutic_area, A.indication, A.phase, A.description, A.duration, A.no_of_sites, A.no_of_patients, A.ROLE, A.active_flag, A.trial_universe_start_date,  A.trial_universe_end_date, A.study_code, A.lock_status , max(C.updated_timestamp) AS last_updated_time, count(C.scenario_id) AS count FROM (SELECT a.theme_id, a.nct_trial_id, a.study_name, a.protocol_id, a.scenario_id, a.scenario_name, a.scenario_status, a.created_by, a.updated_timestamp, a.therapeutic_area, a.indication, a.phase, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.active_flag, 'creator' AS ROLE, a.trial_universe_start_date,a.trial_universe_end_date, a.study_code, a.lock_status FROM $$schema$$.f_rpt_scenario_stdy_sumry a WHERE  a.active_flag = 'Y' AND a.housekeeping_status = '$$status$$' UNION SELECT a.theme_id, a.nct_trial_id, a.study_name, a.protocol_id, a.scenario_id, a.scenario_name, a.scenario_status, a.created_by, a.updated_timestamp, a.therapeutic_area, a.indication, a.phase, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.active_flag, b.delegated_role AS ROLE, a.trial_universe_start_date,a.trial_universe_end_date, a.study_code, a.lock_status FROM $$schema$$.f_rpt_scenario_stdy_sumry a INNER JOIN $$schema$$.f_rpt_scenario_stdy_collab b ON a.theme_id = b.theme_id AND a.scenario_id = b.scenario_id  AND a.housekeeping_status = '$$status$$' AND a.active_flag = 'Y' AND b.active_flag = 'Y') AS A INNER JOIN $$schema$$.f_rpt_scenario_stdy_sumry C ON A.theme_id = C.theme_id AND A.scenario_id = C.scenario_id AND A.active_flag = 'Y' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 order by A.updated_timestamp asc) d ;"
      },
      "share_scenario_details": {
        "list_share_scenario_details": " select delegated_role, delegated_to, delegated_by, theme_id, scenario_id, due_date, review_type from $$schema$$.f_rpt_scenario_stdy_collab where theme_id = '$$theme_id$$' and scenario_id ='$$scenario_id$$' and created_by = '$$created_by$$';"
      },

      "create_filter": {
        "f_rpt_scenario_stdy_criteria_insert_query": "insert into $$schema$$.f_rpt_scenario_stdy_criteria( scenario_id ,theme_id,filter_criteria_json ,created_by ,created_timestamp ,updated_by ,updated_timestamp ,version ,active_flag)  values (  $$scenario_id$$, $$theme_id$$ ,$$filter_criteria_json$$ ,$$created_by$$ ,$$created_timestamp$$ ,$$updated_by$$ ,$$updated_timestamp$$ ,$$version$$ ,$$active_flag$$)",
        "update_active_flag_criteria": "update $$schema$$.f_rpt_scenario_stdy_criteria set active_flag = 'N' where scenario_id=$$scenario_id$$ and theme_id = $$theme_id$$",
        "get_filter_version_query": "select version from $$schema$$.f_rpt_scenario_stdy_criteria where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag='Y'"
      },
      "scenario_filter_details": {
        "fetch_filtered_scenarios_query": "SELECT DISTINCT minimum_age, maximum_age, gender, mesh_term, drug_status, cas_num, drug_names, region, country, sponsor, trial_status FROM  $$schema_reporting$$.f_rpt_filters WHERE  $$search_field$$ LIKE '%$$search_value$$%' AND theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' LIMIT  $$limit$$ offset $$offset$$ ORDER BY $$search_field$$;"
      },
      "get_filter": {
        "new_dropdown_global_filter_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id WHERE $$condition$$ $$like_condition$$ group by 1 LIMIT $$limit$$ OFFSET $$offset$$",
        "new_dropdown_drug_local_filters_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_filters_trial where ctfo_trial_id in( select a.ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id WHERE $$condition$$ group by 1) $$like_condition$$ group by 1 LIMIT $$limit$$ OFFSET $$offset$$",
        "new_dropdown_invnm_local_filter_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_investigator_site_study_details where trial_site_inv_id in( select b.trial_site_inv_id from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id WHERE $$condition$$ GROUP BY 1) and $$search_field$$ is not NULL $$like_condition$$ GROUP BY 1 LIMIT $$limit$$ OFFSET $$offset$$",
        "new_dropdown_trial_local_filter_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id WHERE $$condition$$ $$like_condition$$ group by 1 LIMIT $$limit$$ OFFSET $$offset$$",
        "new_dropdown_sitenm_local_filter_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_site_study_details where trial_site_id in( select b.trial_site_id from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id WHERE $$condition$$ group by 1) and $$search_field$$ is not null $$like_condition$$ group by 1 LIMIT $$limit$$ OFFSET $$offset$$",
        "new_dropdown_sitetype_local_filter_query": "select type from (select unnest(string_to_array($$search_field$$, ';')) as type from $$schema_reporting$$.f_rpt_site_study_details si WHERE trial_site_id in( select b.trial_site_id from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id WHERE $$condition$$ group by 1) )g where $$like_condition$$ group by 1 limit $$limit$$ offset $$offset$$",
        "new_dropdown_other_local_filter_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id where $$TA$$ $$DA$$ $$patient_segment$$ $$study_name$$ $$country$$ $$region$$ $$site_nm$$ $$like_condition$$ and a.ctfo_trial_id in(select ctfo_trial_id from $$schema_reporting$$.f_rpt_site_study_details where $$site_nm$$) group by 1 limit 10 offset 0",
        "get_filter_query_site_inv": "select string_agg($$search_field$$,'#') from (select distinct unnest(string_to_array($$$search_field$$$, '| ')) as $$search_field$$ from $$schema$$.$$table$$ where $$condition$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$) a",
        "get_filter_query_patient": "select string_agg($$search_field$$,'#') from (select distinct unnest(string_to_array($$$search_field$$$, '| ')) as $$search_field$$ from $$schema_reporting$$.$$table$$ where $$condition$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$) a",
        "get_filter_by_join_query": "select string_agg($$search_field$$,'#') from (select distinct unnest(string_to_array($$search_field$$, '| ')) as $$search_field$$ from $$schema_reporting$$.$$table1$$ as a inner join $$schema_reporting$$.$$table2$$ as b on a.ctfo_trial_id = b.ctfo_trial_id where $$condition$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$) a",
        "get_filter_query_country_old": "select string_agg($$search_field$$,'#') from (select distinct unnest(string_to_array($$search_field$$, '| ')) as $$search_field$$ from $$schema_reporting$$.$$table1$$ as a inner join $$schema_reporting$$.$$table2$$ as b on a.ctfo_trial_id = b.ctfo_trial_id inner join $$schema_reporting$$.$$table3$$ as c on b.ctfo_trial_id = c.ctfo_trial_id where $$condition$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$) a",
        "get_filter_query_country_landcscape_not_implemented": "select string_agg($$search_filed$$,'#') from(select distinct unnest(string_to_array($$search_field$$, '| ')) as $$search_field$$ from ( (select ctfo_trial_id, therapeutic_area, disease, patient_segment, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$patient_segment$$) a inner join (select ctfo_trial_id, region, country from $$schema_reporting$$.f_rpt_filters_site_inv where $$region$$ $$country$$ ) b on a.ctfo_trial_id = b.ctfo_trial_id inner join (select ctfo_trial_id, sponsor from $$schema_reporting$$.f_rpt_filters_trial $$sponsor$$ ) c on a.ctfo_trial_id = c.ctfo_trial_id $$condition$$ ))d",
        "get_filter_cascade_query": "select $$search_field$$ as value, '$$flag$$' as flag from (select distinct $$search_field$$ from $$schema_reporting$$.$$table$$ where $$condition$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$) a",
        "get_filter_count_query": "select count(*) from (select distinct $$search_field$$ from $$schema_reporting$$.$$table$$ where $$condition$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$) a",
        "get_filter_age_query": "select distinct min(minimum_age::int), max(maximum_age::int) from $$schema_reporting$$.f_rpt_filters_trial where $$condition$$",
        "get_filter_site_name_query": "select distinct ctfo_site_id AS site_id, site_nm AS site_name , site_country from $$schema_reporting$$.f_rpt_site_study_details where $$condition$$ and site_nm NOT IN (select site_nm from  $$schema$$.f_rpt_scenario_site_ranking_optimized where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$') order by $$search_field$$ limit $$limit$$ offset $$offset$$",
        "get_filter_country_query": "SELECT string_agg($$search_field$$, '#') FROM ( SELECT DISTINCT country FROM $$schema_reporting$$.f_rpt_filters_site_inv geo WHERE (ctfo_site_id) IN ( SELECT geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE therapeutic_area IN ( SELECT unnest(string_to_array(therapeutic_area, '#')) AS therapeutic_area FROM $$schema$$.f_rpt_scenario_stdy_sumry WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' ) AND disease IN ( SELECT unnest(string_to_array(indication, '#')) AS disease FROM $$schema$$.f_rpt_scenario_stdy_sumry WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' ) AND trial_phase IN ( SELECT unnest(string_to_array(phase, '#')) AS trial_phase FROM $$schema$$.f_rpt_scenario_stdy_sumry WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' ) AND $$condition$$ GROUP BY geo.ctfo_site_id ) ORDER BY $$search_field$$ limit $$limit$$ offset $$offset$$ ) a"
      },
      "add_site": {

        "get_rc_filter_constraint": "select string_agg($$search_field$$, '#') from(select distinct $$search_field$$ from $$schema_reporting$$.d_rpt_site where $$condition$$ ORDER BY $$search_field$$ limit $$limit$$ offset $$offset$$) a",

        "get_country_filter_constraint": "select string_agg(country, '#') from(select distinct site_country as country from $$schema_reporting$$.d_rpt_site where $$condition$$ ORDER BY $$search_field$$ limit $$limit$$ offset $$offset$$) a",

        "get_site_filter_constraint": "select distinct site.site_name as site_nm, site.site_city, site.ctfo_site_id, site_country as country, site.site_state as state, site.site_zip as site_zip_code, country_code, country.region_code, site.region from $$schema_reporting$$.d_rpt_site site LEFT JOIN(select country, max(iso2_code) as country_code, max(region_code) as region_code from $$schema_reporting$$.f_rpt_country group by 1) country ON site_country = country.country where site.ctfo_site_id not in( select distinct ctfo_site_id from $$schema$$.f_rpt_scenario_site_ranking_temp where theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND active_flag = 'Y' ) and $$condition$$ ORDER BY $$search_field$$ limit $$limit$$ offset $$offset$$ ",

        "add_site_optimize_constraint": "insert into $$schema$$.$$table_name (SELECT '$$site_list_id' AS site_list_id ,'$$site_list_version' AS version ,NULL AS rank ,ctfo_site_id ,site_nm, site_country ,country_code,region ,region_code ,site_address ,site_city ,site_state ,average_startup_time_median ,randomization_rate_median ,lost_opportunity_time_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_year ,current_workload ,NULL AS global_tier ,NULL AS country_tier ,recentness_trials ,NULL AS tier_score ,'$$theme_id' AS theme_id ,'$$scenario_id' AS scenario_id ,'$$created_by' AS created_by ,'$$updated_by' AS updated_by ,'$$active_flag' AS active_flag ,'$$created_timestamp' AS created_timestamp ,'$$updated_timestamp' AS updated_timestamp,'' AS include_exclude,'' AS reason, '' AS comment, '' AS site_inclusion_flag, '$$optimize_site_id$$' AS optimize_site_id, 'true' AS is_constraint FROM (SELECT a.ctfo_site_id ,site_nm ,site_address ,site_city ,site_state ,site_country ,country_code ,region ,region_code ,average_startup_time_median AS average_startup_time_median ,randomization_rate_median AS randomization_rate_median ,lost_opportunity_time_median AS lost_opportunity_time_median ,screen_failure_rate_median AS screen_failure_rate_median ,similar_trials_experience AS similar_trials_experience ,disease_experience_year ,coalesce(current_workload, 0) AS current_workload ,round(((CASE WHEN max_trial_end_dt IS NOT NULL AND max_trial_end_dt < CURRENT_DATE THEN (CURRENT_DATE - max_trial_end_dt) WHEN max_trial_end_dt = CURRENT_DATE OR max_trial_start_dt = CURRENT_DATE THEN 0 WHEN max_trial_start_dt > CURRENT_DATE THEN NULL ELSE (CURRENT_DATE - max_trial_start_dt) END ) / 365.0 ), 3) AS recentness_trials FROM (SELECT ctfo_site_id ,site_nm ,site_address ,site_city ,site_state ,site_country ,country_code ,region ,region_code ,median(average_startup_time) AS average_startup_time_median ,median(randomization_rate) AS randomization_rate_median ,median(lost_opportunity_time) AS lost_opportunity_time_median ,median(screen_fail_rate) AS screen_failure_rate_median FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE ctfo_site_id IN ('$$ctfo_site_id') GROUP BY 1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ) a LEFT JOIN $$schema_reporting$$.site_workload_vw b ON a.ctfo_site_id = b.ctfo_site_id LEFT JOIN (SELECT ctfo_site_id ,count(DISTINCT ctfo_trial_id) AS similar_trials_experience ,CASE WHEN max(last_subject_in_dt) >= min(ready_to_enroll_dt) THEN round(((max(last_subject_in_dt) - min(ready_to_enroll_dt)) / 365.0), 3) ELSE NULL END AS disease_experience_year ,max(completion_date) max_trial_end_dt ,max(trial_start_dt) max_trial_start_dt FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE ctfo_site_id in ('$$ctfo_site_id') and EXISTS (SELECT trial_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo WHERE site.trial_site_id = geo.trial_site_id AND EXISTS (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE geo.ctfo_trial_id = ps.ctfo_trial_id AND $$ta_filters AND $$disease_filters GROUP BY ctfo_trial_id ) GROUP BY trial_site_id ) GROUP BY ctfo_site_id ) c ON a.ctfo_site_id = c.ctfo_site_id GROUP BY 1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12 ,13 ,14 ,15 ,16 ,17 ) ca )",
        "add_site_rank_constraint": "WITH fs1 AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE true $$trial_status$$ and pt_cycle_id = '$$pt_cycle_id$$') INSERT INTO $$schema$$.$$table_name( SELECT '$$site_list_id' AS site_list_id, '$$site_list_version' AS version, '0' AS rank, ctfo_site_id, site_nm, site_address, site_city, site_state, site_country, country_code, region, region_code, NULL as average_startup_time_median, NULL as randomization_rate_median, NULL as lost_opportunity_time_median, NULL as screen_failure_rate_median, NULL as similar_trials_experience, NULL as disease_experience_year, NULL as current_workload, NULL as recentness_trials, NULL AS tier_score, NULL AS global_tier, NULL AS country_tier, '$$theme_id' AS theme_id, '$$scenario_id' AS scenario_id, '$$created_by' AS created_by, '$$updated_by' AS updated_by, '$$active_flag' AS active_flag, '$$created_timestamp' AS created_timestamp, '$$updated_timestamp' AS updated_timestamp, '' AS include_exclude, '' AS reason, '' AS comment, 'false' AS is_constraint, NULL as prev_optimisation_flag, NULL as curr_optimisation_flag, tags, site_nm as site_alias, NULL as current_workload_ta, NULL as completed_trials, NULL as sponsor_experience, NULL as competitor_experience, 'false' as survey_flag FROM( SELECT a.ctfo_site_id, site_nm, site_address, site_city, site_state, site_country, country_code, region, region_code, tags FROM ( SELECT ctfo_site_id, site_name as site_nm, site_address, site_city, site_state, site_country, iso2_code as country_code, c.region, region_code FROM $$schema_reporting$$.d_rpt_site site left join $$schema_reporting$$.f_rpt_country c on site.site_country = c.country WHERE ctfo_site_id IN($$ctfo_site_id) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9 ) a LEFT JOIN $$schema_reporting$$.site_workload_vw b ON a.ctfo_site_id = b.ctfo_site_id LEFT JOIN( SELECT ctfo_site_id, study_code, string_agg(DISTINCT tag_value, ', ') AS tags FROM $$schema_reporting$$.f_rpt_site_tags ni WHERE study_code = '$$study_code$$' GROUP BY ctfo_site_id, study_code ) nt ON nt.ctfo_site_id = a.ctfo_site_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ) ca ) ",
        "delete_site_constraint": "update $$schema$$.$$table_name set active_flag = 'N' where site_list_id='$$site_list_id' and theme_id='$$theme_id' and scenario_id = '$$scenario_id' and created_by ='$$user_id' and ctfo_site_id='$$ctfo_site_id'",
        "add_site_insert": "INSERT INTO $$schema$$.f_rpt_scenario_site_ranking_temp( site_list_id, version, rank, ctfo_site_id, site_nm, site_address, site_city, site_state, site_country, country_code, region, region_code, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, tier_score, global_tier, country_tier, theme_id, scenario_id, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, include_exclude, reason, comment, is_constraint, prev_optimisation_flag, curr_optimisation_flag, tags, site_alias, current_workload_ta, completed_trials, sponsor_experience, competitor_experience, survey_flag,site_alias_primary,site_zip_code) VALUES $$add_site_condition_values$$",
        "insert_inv_na_site": "INSERT INTO $$schema$$.f_rpt_scenario_highest_investigator( SELECT 0 as rank, ctfo_site_id ,site_nm ,max(ctfo_investigator_id) AS ctfo_investigator_id ,max(investigator_full_nm) AS investigator_full_nm ,null as similar_trials_experience ,investigator_email ,investigator_phone ,NULL AS salutation ,NULL AS ctfo_inv_email_secondary ,'$$theme_id$$' AS theme_id ,'$$scenario_id$$' AS scenario_id ,'Y' AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_Details where ctfo_site_id = '$$ctfo_site_id$$' group by 1,2,3,7,8) ",
        "insert_site_profile": "INSERT INTO $$schema$$.f_rpt_site_flyout_non_affiliated_inv_site_profile( SELECT site_attr.site_nm AS site_name, site_attr.ctfo_site_id, site_attr.site_country, site_attr.site_address, site_attr.site_city, matching_trials, total_trials, site_supporting_urls AS supported_url, matching_inv, total_inv, first_trial_start_date, last_trial_start_date, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp, '$$therapeutic_area$$' AS therapeutic_area, site_attr.site_zip_code FROM( SELECT ctfo_site_id, site_address, site_nm, site_country, site_city, site_zip_code, site_supporting_urls FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id) AND pt_cycle_id = '$$pt_cycle_id$$' GROUP BY ctfo_site_id, site_nm, site_country, site_city, site_address, site_zip_code, site_supporting_urls ) site_attr LEFT OUTER JOIN ( SELECT ctfo_site_id, site_nm, site_country, site_city, count(DISTINCT ctfo_trial_id) AS total_trials, min(trial_start_dt) AS first_trial_start_date, max(trial_start_dt) AS last_trial_start_date FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id ) GROUP BY ctfo_site_id, site_nm, site_country, site_city ) site_total ON site_total.ctfo_site_id = site_attr.ctfo_site_id LEFT OUTER JOIN ( SELECT ctfo_site_id, count(DISTINCT ctfo_investigator_id) AS matching_inv, therapeutic_area FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON geo.ctfo_trial_id = ps.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON ps.ctfo_trial_id = trial.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' AND $$filter_conditions$$ GROUP BY 1, 3 ) investigator_count ON investigator_count.ctfo_site_id = site_attr.ctfo_site_id LEFT OUTER JOIN ( SELECT ctfo_site_id, count(DISTINCT ctfo_investigator_id) AS total_inv FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON geo.ctfo_trial_id = ps.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON ps.ctfo_trial_id = trial.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' GROUP BY 1 ) investigator_total ON investigator_total.ctfo_site_id = investigator_count.ctfo_site_id LEFT OUTER JOIN ( SELECT dd.ctfo_site_id, count(DISTINCT dd.ctfo_trial_id) AS matching_trials FROM $$schema_reporting$$.f_rpt_site_study_details dd INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo on geo.ctfo_trial_id = dd.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' AND $$filter_conditions$$ GROUP BY 1 ) match_trial ON match_trial.ctfo_site_id = investigator_total.ctfo_site_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21 ) ",
        "insert_sponsor_exp": "INSERT into $$schema$$.f_rpt_site_flyout_non_affiliated_inv_sponsor_experience( SELECT '$$ctfo_site_id$$' as ctfo_site_id, coalesce(sponsor, 'Other') AS sponsor, max(trial_start_dt) AS sponsor_last_trial_start_date, count(DISTINCT ctfo_trial_id) AS sponsor_total_trials, '$$site_nm$$' AS site_nm, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM( SELECT unnest( string_to_array(sponsor, '|')) AS sponsor, trial_start_dt, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' AND $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id ) ) aa GROUP BY 1,2 )",
        "insert_trial_trend": "INSERT INTO $$schema$$.f_rpt_site_flyout_non_affiliated_investigators_trial_trend( SELECT ctfo_site_id, count(DISTINCT ctfo_trial_id) AS total_trials, date_part('year', trial_start_dt):: INT AS trial_year, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' AND $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id) AND pt_cycle_id = '$$pt_cycle_id$$' AND date_part('year', trial_start_dt) >= '2000' GROUP BY trial_year, ctfo_site_id ) ",
        "insert_trial_info": "INSERT INTO $$schema$$.f_rpt_site_flyout_non_affiliated_inv_trials_information( SELECT ctfo_site_id, ctfo_trial_id, trial_start_dt, trial_status, randomization_rate, total_recruitment_months, trial_end_dt, study_name, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_site_study_details WHERE pt_cycle_id = '$$pt_cycle_id$$' AND (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' AND $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id) ) "
      },
      "site_ranking_details": {
        "summary_criteria_join_query": "select a.theme_id, a.scenario_id, a.therapeutic_area, a.indication as disease, a.phase, a.no_of_sites, b.filter_criteria_json, a.pt_cycle_id from $$schema$$.f_rpt_scenario_stdy_sumry a left outer join $$schema$$.f_rpt_scenario_stdy_criteria b on a.theme_id = b.theme_id and a.scenario_id = b.scenario_id and a.active_flag = b.active_flag where a.theme_id = '$$theme_id$$' and a.scenario_id = '$$scenario_id$$' and a.active_flag = 'Y' ",
        "find_rows_by_site": "select * from $$schema$$.f_rpt_filter_constraints_optimizer_dtl where site_list_id='$$site_list_id$$'",
        "site_rank_query": "WITH fs0 AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and(( trial_start_dt >= '$$trial_universe_start_date$$' AND trial_start_dt <= '$$trial_universe_end_date$$') OR trial_start_dt IS NULL ) GROUP BY 1 ) INSERT INTO $$schema$$.f_rpt_scenario_site_ranking_temp ( with site_rank AS ( WITH site_norm AS ( WITH site_metrics AS ( SELECT a.ctfo_site_id, site_nm, site_nm as site_alias_primary, site_address, site_city, site_state, site_country, a.country_code, region, region_code, site_zip_code, COALESCE( upload.average_startup_time, e.average_startup_time_median ) AS average_startup_time_median, COALESCE( upload.enrollment_rate, t.randomization_rate_median ) AS randomization_rate_median, COALESCE( upload.lost_opportunity_time, i.lost_opportunity_time_median ) AS lost_opportunity_time_median, COALESCE( upload.screen_failure_rate, t.screen_failure_rate_median ) AS screen_failure_rate_median, similar_trials_experience AS similar_trials_experience, za.disease_experience_year, COALESCE(v.current_workload, 0) AS current_workload, COALESCE(b.current_workload, 0) AS current_workload_ta, d.count_recent_trials AS recentness_trials, completed_trials, sponsor_experience, competitor_experience, nt.tags AS tags FROM ( SELECT ctfo_site_id, site_nm, site_nm as site_alias_primary, site_address, site_city, site_state, site_country, country_code, region, region_code, site_zip_code FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE ctfo_trial_id IN ( SELECT * FROM fs0 ) AND site.trial_site_id IN ( SELECT geo.trial_site_id FROM $$schema_reporting$$.$$ta_dependent_view$$ ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON geo.ctfo_trial_id = ps.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id AND $$filter_conditions GROUP BY geo.trial_site_id ) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ) a LEFT JOIN ( SELECT ctfo_site_id, study_code, string_agg(DISTINCT tag_value, ', ') AS tags FROM $$schema_reporting$$.f_rpt_site_tags ni WHERE TRIM(study_code) = '$$study_code$$' GROUP BY ctfo_site_id, study_code ) nt ON nt.ctfo_site_id = a.ctfo_site_id LEFT JOIN ( SELECT ctfo_site_id, count( DISTINCT CASE WHEN lower( trim(trial_status) ) = 'planned' :: text OR lower( trim(trial_status) ) = 'ongoing' :: text THEN ctfo_trial_id ELSE NULL :: text END ) AS current_workload FROM $$schema_reporting$$.f_rpt_site_study_details si where pt_cycle_id = '$$pt_cycle_id$$' and si.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$sponsor$$ GROUP BY 1 ) GROUP BY ctfo_site_id ) v ON v.ctfo_site_id = a.ctfo_site_id LEFT JOIN ( SELECT stn.ctfo_site_id, median(lost_opportunity_time) AS lost_opportunity_time_median FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ) GROUP BY stn.ctfo_site_id ) i ON a.ctfo_site_id = i.ctfo_site_id LEFT JOIN ( SELECT stn.ctfo_site_id, median(randomization_rate) AS randomization_rate_median, median(screen_fail_rate) AS screen_failure_rate_median FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$patient_segment$$ $$gender$$ $$age$$ $$trial_status$$ GROUP BY 1 ) GROUP BY stn.ctfo_site_id ) t ON a.ctfo_site_id = t.ctfo_site_id LEFT JOIN ( SELECT stn.ctfo_site_id, median(average_startup_time) AS average_startup_time_median FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$trial_status$$ GROUP BY 1 ) GROUP BY stn.ctfo_site_id ) e ON a.ctfo_site_id = e.ctfo_site_id LEFT JOIN ( SELECT ctfo_site_id, count(DISTINCT ctfo_trial_id) AS current_workload FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(stn.trial_status) ) in ('planned', 'ongoing') AND stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ GROUP BY 1 ) GROUP BY ctfo_site_id ) b ON a.ctfo_site_id = b.ctfo_site_id LEFT JOIN ( SELECT stn.ctfo_site_id, count(DISTINCT stn.ctfo_trial_id) AS sponsor_experience FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(stn.trial_status) ) in ( 'completed', 'ongoing', 'planned' ) AND lower( trim(stn.sponsor) ) LIKE '%zs%' and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_status$$ GROUP BY 1 ) GROUP BY stn.ctfo_site_id ) y ON a.ctfo_site_id = y.ctfo_site_id LEFT JOIN ( SELECT stn.ctfo_site_id, count(DISTINCT stn.ctfo_trial_id) AS competitor_experience FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(stn.trial_status) ) in ( 'completed', 'ongoing', 'planned' ) AND lower( trim(stn.sponsor) ) NOT LIKE '%zs%' and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_status$$ GROUP BY 1 ) GROUP BY stn.ctfo_site_id ) z ON a.ctfo_site_id = z.ctfo_site_id LEFT JOIN ( SELECT stn.ctfo_site_id, count(DISTINCT stn.ctfo_trial_id) AS completed_trials FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(stn.trial_status) ) IN ('completed') AND stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ) GROUP BY stn.ctfo_site_id ) x ON a.ctfo_site_id = x.ctfo_site_id LEFT JOIN ( SELECT ctfo_site_id, count( DISTINCT CASE WHEN (trial_start_dt) > ( (CURRENT_DATE) - INTERVAL '5 YEAR' ) THEN ctfo_trial_id END ) AS count_recent_trials FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(stn.trial_status) ) in ('completed', 'ongoing') and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_site_id ) d ON a.ctfo_site_id = d.ctfo_site_id LEFT JOIN ( SELECT ctfo_site_id, count(DISTINCT ctfo_trial_id) AS similar_trials_experience, max(completion_date) max_trial_end_dt, max(trial_start_dt) max_trial_start_dt FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ $$gender$$ $$age$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_site_id ) c ON a.ctfo_site_id = c.ctfo_site_id LEFT JOIN ( SELECT ctfo_site_id, CASE WHEN COALESCE( max(last_subject_in_dt), max(completion_date) ) >= COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) THEN round( ( ( COALESCE( max(last_subject_in_dt), max(completion_date) ) - COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE CASE WHEN CURRENT_DATE >= COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) THEN round( ( ( CURRENT_DATE - COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE NULL END END AS disease_experience_year FROM $$schema_reporting$$.f_rpt_site_study_details stn where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(stn.trial_status) ) in ( 'completed', 'ongoing', 'planned' ) and stn.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id Where true $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ $$gender$$ $$age$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_site_id ) za ON a.ctfo_site_id = za.ctfo_site_id LEFT JOIN $$schema$$.user_metrics_uploaded_data upload ON a.ctfo_site_id = upload.site_golden_id AND upload.active_flag = 'Y' AND upload.theme_id = '$$theme_id' AND upload.scenario_id = '$$scenario_id' AND lower(upload.rank_list_type) = 'site' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 ) SELECT ctfo_site_id, site_nm, site_nm as site_alias_primary, site_address, site_city, site_state, site_country, country_code, region, region_code, site_zip_code, randomization_rate_median, average_startup_time_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, current_workload_ta, recentness_trials, completed_trials, sponsor_experience, competitor_experience, tags, CASE WHEN min_competitor_exp_median IS NULL OR max_competitor_exp_median IS NULL OR competitor_experience IS NULL THEN NULL WHEN min_competitor_exp_median = 0 AND max_competitor_exp_median = 0 AND competitor_experience = 0 THEN 0 WHEN min_competitor_exp_median = max_competitor_exp_median AND min_competitor_exp_median = competitor_experience THEN 1 ELSE Cast( ( competitor_experience - min_competitor_exp_median ) AS DOUBLE PRECISION ) / Cast( ( max_competitor_exp_median - min_competitor_exp_median ) AS DOUBLE PRECISION ) END AS normalized_competitor_exp_median, CASE WHEN min_sponsor_exp_median IS NULL OR max_sponsor_exp_median IS NULL OR sponsor_experience IS NULL THEN NULL WHEN min_sponsor_exp_median = 0 AND max_sponsor_exp_median = 0 AND sponsor_experience = 0 THEN 0 WHEN min_sponsor_exp_median = max_sponsor_exp_median AND min_sponsor_exp_median = sponsor_experience THEN 1 ELSE Cast( ( sponsor_experience - min_sponsor_exp_median ) AS DOUBLE PRECISION ) / Cast( ( max_sponsor_exp_median - min_sponsor_exp_median ) AS DOUBLE PRECISION ) END AS normalized_sponsor_exp_median, CASE WHEN min_completed_trials_median IS NULL OR max_completed_trials_median IS NULL OR completed_trials IS NULL THEN NULL WHEN min_completed_trials_median = 0 AND max_completed_trials_median = 0 AND completed_trials = 0 THEN 0 WHEN min_completed_trials_median = max_completed_trials_median AND min_completed_trials_median = completed_trials THEN 1 ELSE Cast( ( completed_trials - min_completed_trials_median ) AS DOUBLE PRECISION ) / Cast( ( max_completed_trials_median - min_completed_trials_median ) AS DOUBLE PRECISION ) END AS normalized_completed_trials_median, CASE WHEN min_randomization_rate_median IS NULL OR max_randomization_rate_median IS NULL OR randomization_rate_median IS NULL THEN NULL WHEN min_randomization_rate_median = 0 AND max_randomization_rate_median = 0 AND randomization_rate_median = 0 THEN 0 WHEN min_randomization_rate_median = max_randomization_rate_median AND min_randomization_rate_median = randomization_rate_median THEN 1 ELSE Cast( ( randomization_rate_median - min_randomization_rate_median ) AS DOUBLE PRECISION ) / Cast( ( max_randomization_rate_median - min_randomization_rate_median ) AS DOUBLE PRECISION ) END AS normalized_randomization_rate_median, CASE WHEN min_average_startup_time_median IS NULL OR max_average_startup_time_median IS NULL OR average_startup_time_median IS NULL THEN NULL WHEN min_average_startup_time_median = 0 AND max_average_startup_time_median = 0 AND average_startup_time_median = 0 THEN 0 WHEN min_average_startup_time_median = max_average_startup_time_median AND min_average_startup_time_median = average_startup_time_median THEN 1 ELSE Cast( ( max_average_startup_time_median - average_startup_time_median ) AS DOUBLE PRECISION ) / Cast( ( max_average_startup_time_median - min_average_startup_time_median ) AS DOUBLE PRECISION ) END AS normalized_average_startup_time_median, CASE WHEN min_lost_opportunity_time_median IS NULL OR max_lost_opportunity_time_median IS NULL OR lost_opportunity_time_median IS NULL THEN NULL WHEN min_lost_opportunity_time_median = 0 AND max_lost_opportunity_time_median = 0 AND lost_opportunity_time_median = 0 THEN 0 WHEN min_lost_opportunity_time_median = max_lost_opportunity_time_median AND min_lost_opportunity_time_median = lost_opportunity_time_median THEN 1 ELSE Cast( ( max_lost_opportunity_time_median - lost_opportunity_time_median ) AS DOUBLE PRECISION ) / Cast( ( max_lost_opportunity_time_median - min_lost_opportunity_time_median ) AS DOUBLE PRECISION ) END AS normalized_lost_opportunity_time_median, CASE WHEN min_screen_failure_rate_median IS NULL OR max_screen_failure_rate_median IS NULL OR screen_failure_rate_median IS NULL THEN NULL WHEN min_screen_failure_rate_median = 0 AND max_screen_failure_rate_median = 0 AND screen_failure_rate_median = 0 THEN 0 WHEN min_screen_failure_rate_median = max_screen_failure_rate_median AND min_screen_failure_rate_median = screen_failure_rate_median THEN 1 ELSE Cast( ( max_screen_failure_rate_median - screen_failure_rate_median ) AS DOUBLE PRECISION ) / Cast( ( max_screen_failure_rate_median - min_screen_failure_rate_median ) AS DOUBLE PRECISION ) END AS normalized_screen_failure_rate_median, CASE WHEN min_similar_trials_experience IS NULL OR max_similar_trials_experience IS NULL OR similar_trials_experience IS NULL THEN NULL WHEN min_similar_trials_experience = 0 AND max_similar_trials_experience = 0 AND similar_trials_experience = 0 THEN 0 WHEN min_similar_trials_experience = max_similar_trials_experience AND min_similar_trials_experience = similar_trials_experience THEN 1 ELSE Cast( ( similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) / Cast( ( max_similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) END AS normalized_similar_trials_experience, CASE WHEN min_disease_experience_year IS NULL OR max_disease_experience_year IS NULL OR disease_experience_year IS NULL THEN NULL WHEN min_disease_experience_year = 0 AND max_disease_experience_year = 0 AND disease_experience_year = 0 THEN 0 WHEN min_disease_experience_year = max_disease_experience_year AND min_disease_experience_year = disease_experience_year THEN 1 ELSE Cast( ( disease_experience_year - min_disease_experience_year ) AS DOUBLE PRECISION ) / Cast( ( max_disease_experience_year - min_disease_experience_year ) AS DOUBLE PRECISION ) END AS normalized_disease_experience_year, CASE WHEN min_current_workload IS NULL OR max_current_workload IS NULL OR current_workload_ta IS NULL THEN NULL WHEN min_current_workload = 0 AND max_current_workload = 0 AND current_workload_ta = 0 THEN 0 WHEN min_current_workload = max_current_workload AND min_current_workload = current_workload_ta THEN 1 ELSE Cast( ( max_current_workload - current_workload_ta ) AS DOUBLE PRECISION ) / Cast( ( max_current_workload - min_current_workload ) AS DOUBLE PRECISION ) END AS normalized_current_workload, CASE WHEN min_recentness_trials IS NULL OR max_recentness_trials IS NULL OR recentness_trials IS NULL THEN NULL WHEN min_recentness_trials = 0 AND max_recentness_trials = 0 AND recentness_trials = 0 THEN 0 WHEN min_recentness_trials = max_recentness_trials AND min_recentness_trials = recentness_trials THEN 1 ELSE Cast( ( max_recentness_trials - recentness_trials ) AS DOUBLE PRECISION ) / Cast( ( max_recentness_trials - min_recentness_trials ) AS DOUBLE PRECISION ) END AS normalized_recentness_trials FROM ( SELECT ctfo_site_id, site_nm, site_nm as site_alias_primary, site_address, site_city, site_state, site_country, country_code, region, region_code, site_zip_code, randomization_rate_median, average_startup_time_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, current_workload_ta, recentness_trials, completed_trials, sponsor_experience, competitor_experience, tags FROM site_metrics ) D CROSS JOIN ( SELECT Min(randomization_rate_median) AS min_randomization_rate_median, Max(randomization_rate_median) AS max_randomization_rate_median, Min(average_startup_time_median) AS min_average_startup_time_median, Max(average_startup_time_median) AS max_average_startup_time_median, Min(lost_opportunity_time_median) AS min_lost_opportunity_time_median, Max(lost_opportunity_time_median) AS max_lost_opportunity_time_median, Min(screen_failure_rate_median) AS min_screen_failure_rate_median, Max(screen_failure_rate_median) AS max_screen_failure_rate_median, Min(similar_trials_experience) AS min_similar_trials_experience, Max(similar_trials_experience) AS max_similar_trials_experience, Min(disease_experience_year) AS min_disease_experience_year, Max(disease_experience_year) AS max_disease_experience_year, Min(current_workload_ta) AS min_current_workload, Max(current_workload_ta) AS max_current_workload, Min(recentness_trials) AS min_recentness_trials, Max(recentness_trials) AS max_recentness_trials, Min(sponsor_experience) AS min_sponsor_exp_median, Max(sponsor_experience) AS max_sponsor_exp_median, Min(completed_trials) AS min_completed_trials_median, Max(completed_trials) AS max_completed_trials_median, Min(competitor_experience) AS min_competitor_exp_median, Max(competitor_experience) AS max_competitor_exp_median FROM site_metrics ) E ) SELECT ctfo_site_id, site_nm, site_nm as site_alias_primary, site_address, site_city, site_state, site_country, country_code, region, region_code, site_zip_code, randomization_rate_median, average_startup_time_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, current_workload_ta, recentness_trials, completed_trials, sponsor_experience, competitor_experience, tags, ( ( COALESCE( normalized_average_startup_time_median, 0 ) * $$wt_average_startup_time ) + ( COALESCE( normalized_randomization_rate_median, 0 ) * $$wt_randomization_rate ) + ( COALESCE( normalized_lost_opportunity_time_median, 0 ) * $$wt_lost_opportunity_time ) + ( COALESCE( normalized_screen_failure_rate_median, 0 ) * $$wt_screen_failure_rate ) + ( COALESCE( normalized_similar_trials_experience, 0 ) * $$wt_similar_trial_exp ) + ( COALESCE( normalized_disease_experience_year, 0 ) * $$wt_disease_exp ) + ( COALESCE(normalized_current_workload, 0) * $$wt_current_workload ) + ( COALESCE(normalized_recentness_trials, 0) * $$wt_recentness_trials ) ) AS tier_score, Dense_rank() OVER ( ORDER BY ( ( COALESCE( normalized_average_startup_time_median, 0 ) * $$wt_average_startup_time ) + ( COALESCE( normalized_randomization_rate_median, 0 ) * $$wt_randomization_rate ) + ( COALESCE( normalized_lost_opportunity_time_median, 0 ) * $$wt_lost_opportunity_time ) + ( COALESCE( normalized_screen_failure_rate_median, 0 ) * $$wt_screen_failure_rate ) + ( COALESCE( normalized_similar_trials_experience, 0 ) * $$wt_similar_trial_exp ) + ( COALESCE( normalized_disease_experience_year, 0 ) * $$wt_disease_exp ) + ( COALESCE(normalized_current_workload, 0) * $$wt_current_workload ) + ( COALESCE(normalized_recentness_trials, 0) * $$wt_recentness_trials ) ) DESC ) site_rank FROM site_norm LIMIT $$limit ), distinct_site_score AS ( SELECT DISTINCT tier_score AS site_score_distinct FROM site_rank ), site_score_tier AS ( SELECT site_score_distinct, ntile(4) OVER ( ORDER BY site_score_distinct DESC ) AS site_tier FROM distinct_site_score ) SELECT '$$site_list_id' AS site_list_id, '$$site_list_version' AS version, site_rank AS rank, a.ctfo_site_id, site_nm, site_address, site_city, site_state, site_country, country_code, region, region_code, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, a.tier_score, COALESCE(tier_5.site_tier, '5') AS global_tier, Ntile(4) OVER ( partition BY site_country ORDER BY site_rank ASC ) country_tier, '$$theme_id' AS theme_id, '$$scenario_id' AS scenario_id, '$$created_by' AS created_by, '$$updated_by' AS updated_by, '$$active_flag' AS active_flag, '$$created_timestamp' AS created_timestamp, '$$updated_timestamp' AS updated_timestamp, '' AS include_exclude, '' AS reason, '' AS comment, 'false' AS is_constraint, NULL AS prev_optimisation_flag, NULL AS curr_optimisation_flag, a.tags, site_nm AS site_alias, current_workload_ta, completed_trials, sponsor_experience, competitor_experience, false AS survey_flag, site_nm as site_alias_primary, site_zip_code, '$$pt_cycle_id$$' as pt_cycle_id FROM ( SELECT * FROM site_rank ORDER BY site_rank ) a LEFT JOIN site_score_tier tier_5 ON a.tier_score = tier_5.site_score_distinct ORDER BY site_rank ) ",
        "site_rank_save_query": "INSERT INTO $$schema$$.f_rpt_scenario_site_ranking (SELECT * FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$')",
        "get_version_query": "select version from $$schema$$.f_rpt_scenario_site_ranking where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag='Y'",
        "update_active_flag": "update $$schema$$.f_rpt_scenario_site_ranking set active_flag = 'N' where scenario_id=$$scenario_id$$ and theme_id = $$theme_id$$",
        "update_version_query": "update $$schema$$.f_rpt_scenario_site_ranking set version = '$$version$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "insert_weightage_query": "INSERT INTO $$schema$$.f_rpt_scenario_metric_weight_dtl_temp( wt_average_startup_time ,wt_randomization_rate ,wt_lost_opportunity_time ,wt_screen_failure_rate ,wt_similar_trial_exp ,wt_disease_exp ,wt_current_workload ,theme_id ,scenario_id ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp ,version, site_list_id, wt_recentness_trials) values ( '$$wt_average_startup_time' ,'$$wt_randomization_rate' ,'$$wt_lost_opportunity_time' ,'$$wt_screen_failure_rate' ,'$$wt_similar_trial_exp' ,'$$wt_disease_exp' ,'$$wt_current_workload' ,'$$theme_id' ,'$$scenario_id' ,'$$created_by' ,'$$updated_by' ,'$$active_flag' ,'$$created_timestamp' ,'$$updated_timestamp' ,'$$version', '$$site_list_id', '$$wt_recentness_trials')",
        "weightage_save_query": "INSERT INTO $$schema$$.f_rpt_scenario_metric_weight_dtl (SELECT * FROM $$schema$$.f_rpt_scenario_metric_weight_dtl_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$')",
        "update_weightage_active_flag": "update $$schema$$.f_rpt_scenario_metric_weight_dtl set active_flag = 'N' where scenario_id=$$scenario_id$$ and theme_id = $$theme_id$$",
        "update_weightage_version_query": "update $$schema$$.f_rpt_scenario_metric_weight_dtl set version = '$$version$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "site_rank_display_query": "SELECT DISTINCT aa.rank, aa.ctfo_site_id, aa.site_nm, COALESCE( NULLIF(aa.site_alias_primary, ''), aa.site_nm) as site_alias_primary, site_address, site_city, country_tier, site_state, aa.site_country, country_code, region, case when lower(site_zip_code) = 'none' then NULL else site_zip_code end as site_zip_code, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, competitor_experience, sponsor_experience, current_workload_ta, completed_trials, tags, tier_score, global_tier, include_exclude, reason, aa.comment, site_list_id, CASE WHEN prev_optimisation_flag = true THEN 'Yes' ELSE 'No' END AS prev_optimisation_flag, CASE WHEN curr_optimisation_flag = true THEN 'Yes' WHEN curr_optimisation_flag = False THEN 'No' ELSE NULL END AS curr_optimisation_flag, COALESCE( NULLIF(aa.site_alias, ''), aa.site_nm ) as site_alias, CASE WHEN survey_flag = true THEN 'Yes' ELSE 'No' END AS survey_flag, created_timestamp, survey_sent_date FROM $$schema$$.f_rpt_scenario_site_ranking aa LEFT JOIN( select ctfo_site_id, survey_sent_date from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl aa where aa.is_active = True and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' ) ss ON ss.ctfo_site_id = aa.ctfo_site_id WHERE $$constraint$$ $$condition$$ GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37 $$order_by$$ $$order_dir$$, created_timestamp desc limit $$limit$$ offset $$offset$$ ",
        "exclude_site_rank_with_exclude_country": "update $$schema$$.f_rpt_scenario_site_ranking set include_exclude='exclude' where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and active_flag='Y' and country_code in ( select country_code from $$schema$$.f_rpt_country_optimizer_dtl where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and include_exclude='exclude' and active_flag='Y');",
        "include_site_rank_with_include_country": "update $$schema$$.f_rpt_scenario_site_ranking set include_exclude='include' where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and active_flag='Y' and country_code in ( select country_code from $$schema$$.f_rpt_country_optimizer_dtl where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and include_exclude='include' and active_flag='Y');",
        "neutral_site_rank_with_neutral_country": "update $$schema$$.f_rpt_scenario_site_ranking set include_exclude='-' where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and active_flag='Y' and country_code in ( select country_code from $$schema$$.f_rpt_country_optimizer_dtl where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and include_exclude in ('-', NULL) and active_flag='Y');",
        "weightage_display_query": "select wt_average_startup_time ,wt_randomization_rate ,wt_lost_opportunity_time ,wt_screen_failure_rate ,wt_similar_trial_exp ,wt_disease_exp ,wt_current_workload, wt_recentness_trials from $$schema$$.f_rpt_scenario_metric_weight_dtl where $$condition$$",
        "get_site_list_id_query": "select distinct max(site_list_id) from $$schema$$.f_rpt_scenario_metric_weight_dtl where $$condition$$",
        "get_color_query": "SELECT COALESCE(VALUES, 0.0) AS VALUES FROM( SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(average_startup_time_median AS DOUBLE PRECISION) ASC) AS VALUES ,'1' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(randomization_rate_median AS DOUBLE PRECISION) ASC ) AS VALUES ,'2' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(lost_opportunity_time_median AS DOUBLE PRECISION) ASC ) AS VALUES ,'3' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(screen_failure_rate_median AS DOUBLE PRECISION) ASC ) AS VALUES ,'4' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(similar_trials_experience AS DOUBLE PRECISION) ASC ) AS VALUES ,'5' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(disease_experience_year AS DOUBLE PRECISION) ASC ) AS VALUES ,'6' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(current_workload_ta AS DOUBLE PRECISION) ASC ) AS VALUES ,'7' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(recentness_trials AS DOUBLE PRECISION) ASC ) AS VALUES ,'8' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(sponsor_experience AS DOUBLE PRECISION) ASC ) AS VALUES ,'9' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(completed_trials AS DOUBLE PRECISION) ASC ) AS VALUES ,'10' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(competitor_experience AS DOUBLE PRECISION) ASC ) AS VALUES ,'11' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(current_workload AS DOUBLE PRECISION) ASC ) AS VALUES ,'12' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' ) a ORDER BY a.row_num::int",
        "update_color_query": "UPDATE $$schema$$.$$table$$ SET color_average_startup_time = '$$color_average_startup_time$$' ,color_randomization_rate = '$$color_randomization_rate$$' ,color_lost_opportunity_time = '$$color_lost_opportunity_time$$' ,color_screen_failure_rate = '$$color_screen_failure_rate$$' ,color_similar_trial_exp = '$$color_similar_trial_exp$$' ,color_disease_exp = '$$color_disease_exp$$' ,color_current_workload = '$$color_current_workload$$' WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y'",
        "color_display_query": "select color_json from $$schema$$.$$table_name$$ where $$condition$$ order by created_timestamp desc limit 1",
        "delete_color_query": "delete from $$schema$$.$$table_name$$ where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and type = 'site_rank' and optimization_flag = '$$optimization_flag$$' and active_flag = 'Y' and table_category = '$$table_category$$'",
        "insert_color_query": "insert into $$schema$$.$$table_name (theme_id, scenario_id, list_id, type, optimization_flag, color_json, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, version, table_category) values ('$$theme_id$$', '$$scenario_id$$', '$$list_id$$', 'site_rank', '$$optimization_flag$$', '$$color_json$$', '$$created_by$$', '$$updated_by$$', 'Y', '$$created_timestamp$$', '$$updated_timestamp$$', '$$version$$', '$$table_category$$');",
        "update_filter_active_flag": "update $$schema$$.f_rpt_filter_constraints_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "update_region_active_flag": "update $$schema$$.f_rpt_region_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "update_country_active_flag": "update $$schema$$.f_rpt_country_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "insert_filter_constraint_query": "INSERT INTO $$schema$$.f_rpt_filter_constraints_optimizer_dtl (theme_id, scenario_id, site_list_id, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) VALUES ('$$theme_id$$', '$$scenario_id$$', '$$site_list_id$$', '1', 'Y', '$$user_id$$', '$$time_stamp$$', '$$user_id$$', '$$time_stamp$$' )",
        "insert_region_constraint_query": "INSERT INTO $$schema$$.f_rpt_region_optimizer_dtl (theme_id, scenario_id, site_list_id,region,region_cd,include_exclude,reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) (SELECT DISTINCT theme_id, scenario_id, site_list_id,region,region_code AS region_cd,include_exclude, reason, comment, '1' AS version, 'Y' as active_flag, 'site_rank' AS created_by, created_timestamp, 'site_rank' AS updated_by, updated_timestamp FROM $$schema$$.f_rpt_scenario_site_ranking a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and a.active_flag ='Y')",
        "insert_country_query": "INSERT INTO $$schema$$.f_rpt_country_optimizer_dtl(sites_count, theme_id, scenario_id, site_list_id,country,region,country_code,include_exclude,reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp, region_code) (select count(distinct ctfo_site_id) as sites_count , theme_id, scenario_id, site_list_id,site_country,region,country_code,include_exclude, reason, comment, '1' AS version, 'Y' as active_flag, 'site_rank' AS created_by, created_timestamp, 'site_rank' AS updated_by, updated_timestamp, region_code FROM $$schema$$.f_rpt_scenario_site_ranking a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and a.active_flag='Y' and country_code is not null and region_code is not null  group by 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17)",
        "get_optimize_sites_status": "SELECT jobstatus,comment from $$schema$$.f_rpt_scenario_site_ranking_optimize_status where type = 'site' and optimize_site_id = '$$optimize_site_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' ORDER BY created_timestamp DESC LIMIT 1",
        "get_temp_optimized_sites": "SELECT * from $$schema$$.f_rpt_scenario_site_ranking_optimized_temp where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "get_optimize_count": "select count(*) from $$schema$$.$$table$$ where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$'",
        "get_ranking_count": "SELECT COUNT(1) FROM( select DISTINCT rank, ctfo_site_id, site_nm, site_city, country_tier, site_state, site_country, country_code, region, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload , recentness_trials , tier_score , global_tier , include_exclude, reason, comment, site_list_id, CASE WHEN prev_optimisation_flag = True THEN 'Yes' ELSE 'No' END AS prev_optimisation_flag, CASE WHEN curr_optimisation_flag = True THEN 'Yes' ELSE 'No' END AS curr_optimisation_flag FROM $$schema$$.$$table$$ where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id='$$site_list_id$$') b",
        "get_actual_optimized_sites": "SELECT * from $$schema$$.f_rpt_scenario_site_ranking_optimized where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "delete_temp_optimized_sites": "UPDATE $$schema$$.f_rpt_scenario_site_ranking_optimized_temp SET active_flag = 'N' where site_list_id = '$$site_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "rollback_deleted_actual_optimized_sites": "UPDATE $$schema$$.f_rpt_scenario_site_ranking_optimized SET active_flag = 'Y' where site_list_id = '$$site_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$'",
        "delete_actual_optimized_sites": "UPDATE $$schema$$.f_rpt_scenario_site_ranking_optimized SET active_flag = 'N' where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "optimize_sites_actual_last_version": "SELECT version from $$schema$$.f_rpt_scenario_site_ranking_optimized where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag='Y'",
        "insert_optimize_sites_actual": "INSERT into $$schema$$.f_rpt_scenario_site_ranking_optimized (SELECT site_list_id,'$$version$$' as version,rank,ctfo_site_id,site_nm,site_country,country_code,region,region_code,site_address,site_city,site_state,average_startup_time_median,randomization_rate_median,lost_opportunity_time_median,screen_failure_rate_median,similar_trials_experience,disease_experience_year,current_workload,global_tier,country_tier,recentness_trials,tier_score,theme_id,scenario_id,created_by,updated_by,active_flag,created_timestamp,updated_timestamp,include_exclude,reason,comment,site_inclusion_flag,optimize_site_id, NULL, tags, site_alias, current_workload_ta, completed_trials, sponsor_experience, competitor_experience from $$schema$$.f_rpt_scenario_site_ranking_optimized_temp where site_list_id = '$$site_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y' and optimize_site_id = '$$optimize_site_id$$')",
        "update_scenario_status": "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry set scenario_status = 'created', updated_by='$$user_id$$', updated_timestamp='$$current_timestamp$$' where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y'",
        "insert_f_rpt_filters_site_ranking": "INSERT INTO $$schema$$.f_rpt_filters_site_ranking ( SELECT DISTINCT geo.ctfo_trial_id ,geo.ctfo_site_id ,geo.ctfo_investigator_id ,study_name ,region ,country ,country_code ,therapeutic_area ,disease ,patient_segment ,trial_phase ,sponsor ,nct_id ,ps.protocol_ids ,trial_status ,mesh_term ,drug_names ,gender ,minimum_age ,maximum_age ,drug_status ,cas_num ,'$$theme_id$$' AS theme_id ,'$$scenario_id$$' AS scenario_id ,'$$site_list_id$$' AS site_list_id ,'Y' AS active_flag FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE ctfo_site_id IN ( SELECT ctfo_site_id FROM $$schema$$.f_rpt_scenario_site_ranking_optimized WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y'  ) AND $$filter_conditions$$ )",
        "insert_f_rpt_site_study_details_site_ranking": "INSERT INTO $$schema$$.f_rpt_site_study_details_site_ranking ( SELECT DISTINCT ctfo_trial_id ,ctfo_site_id ,nct_id ,region ,site_country ,country_code ,investigators ,trial_status ,trial_start_dt ,sponsor ,type ,site_nm ,total_no_sites ,first_subject_in_dt ,last_subject_in_dt ,ready_to_enroll_dt ,lost_opportunity_time ,patients_enrolled ,screen_fail_rate ,average_startup_time ,protocol_ids ,study_name ,completion_date ,site_address ,site_city ,site_state ,randomization_rate ,'$$theme_id$$' AS theme_id ,'$$scenario_id$$' AS scenario_id ,'$$site_list_id$$' AS site_list_id ,'Y' AS active_flag FROM $$schema_reporting$$.f_rpt_site_study_details WHERE ( ctfo_trial_id ,ctfo_site_id ) IN ( SELECT ctfo_trial_id ,ctfo_site_id FROM $$schema$$.f_rpt_filters_site_ranking WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' ) )",
        "update_active_flag_filters": "update $$schema$$.$$table$$ set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "site_rank_export_list": "SELECT * from $$schema$$.f_rpt_scenario_site_ranking where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "site_rank_optimized_export_list": "SELECT * from $$schema$$.f_rpt_scenario_site_ranking_optimized where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' order by rank asc",
        "site_rank_display_query_with_union": "WITH temp AS( SELECT DISTINCT aa.rank, aa.ctfo_site_id, aa.site_nm, COALESCE( NULLIF(aa.site_alias_primary, ''), aa.site_nm) as site_alias_primary, site_address, site_city, country_tier, site_state, aa.site_country, country_code, region, site_zip_code, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, competitor_experience, sponsor_experience, current_workload_ta, completed_trials, tags, tier_score, global_tier, include_exclude, reason, aa.comment, site_list_id, CASE WHEN prev_optimisation_flag = true THEN 'Yes' ELSE 'No' END AS prev_optimisation_flag, CASE WHEN curr_optimisation_flag = true THEN 'Yes' WHEN curr_optimisation_flag = False THEN 'No' ELSE NULL END AS curr_optimisation_flag, COALESCE( NULLIF(aa.site_alias, ''), aa.site_nm ) as site_alias, CASE WHEN survey_flag = true THEN 'Yes' ELSE 'No' END AS survey_flag, created_timestamp, survey_sent_date FROM $$schema$$.f_rpt_scenario_site_ranking aa LEFT JOIN( select ctfo_site_id, survey_sent_date from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl aa where aa.is_active = True and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' ) ss ON ss.ctfo_site_id = aa.ctfo_site_id WHERE $$constraint$$ $$condition$$ AND aa.rank <> 0 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37 $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$ ) SELECT * FROM( SELECT DISTINCT aa.rank, aa.ctfo_site_id, aa.site_nm, COALESCE( NULLIF(aa.site_alias_primary, ''), aa.site_nm ) as site_alias_primary, site_address, site_city, country_tier, site_state, aa.site_country, country_code, region, site_zip_code, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, competitor_experience, sponsor_experience, current_workload_ta, completed_trials, tags, tier_score, global_tier, include_exclude, reason, aa.comment, site_list_id, CASE WHEN prev_optimisation_flag = true THEN 'Yes' ELSE 'No' END AS prev_optimisation_flag, CASE WHEN curr_optimisation_flag = true THEN 'Yes' WHEN curr_optimisation_flag = False THEN 'No' ELSE NULL END AS curr_optimisation_flag, COALESCE( NULLIF(aa.site_alias, ''), aa.site_nm ) as site_alias, CASE WHEN survey_flag = true THEN 'Yes' ELSE 'No' END AS survey_flag, created_timestamp, survey_sent_date FROM $$schema$$.f_rpt_scenario_site_ranking aa LEFT JOIN ( select ctfo_site_id, survey_sent_date from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl aa where aa.is_active = True and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' ) ss ON ss.ctfo_site_id = aa.ctfo_site_id WHERE $$constraint$$ $$conditionns$$ AND aa.rank = 0 UNION ALL select * from temp order by created_timestamp desc limit $$limit$$ offset $$offset$$ ) AS final ",
        "update_site_list_id": "update $$schema$$.f_rpt_scenario_site_ranking_temp set site_list_id = '$$site_list_id$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and rank = 0"
      },
      "country_ranking_details": {
        "get_optimize_count": "select count(*) from $$schema$$.$$table$$ where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$'",
        "get_ranking_count": "select count(*) from $$schema$$.$$table$$ where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and country_list_id='$$country_list_id$$'",
        "summary_criteria_join_query": "select a.theme_id, a.scenario_id, a.therapeutic_area, a.indication as disease, a.phase, a.no_of_sites, b.filter_criteria_json, a.pt_cycle_id from $$schema$$.f_rpt_scenario_stdy_sumry a left outer join $$schema$$.f_rpt_scenario_stdy_criteria b on a.theme_id = b.theme_id and a.scenario_id = b.scenario_id and a.active_flag = b.active_flag where a.theme_id = '$$theme_id$$' and a.scenario_id = '$$scenario_id$$' and a.active_flag = 'Y' ",
        "country_rank_query" : "WITH fs0 AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_Details where pt_cycle_id = '$$pt_cycle_id$$' and(( trial_start_dt >= '$$trial_universe_start_date$$' AND trial_start_dt <= '$$trial_universe_end_date$$') OR trial_start_dt IS NULL ) GROUP BY 1 ), fs1 AS ( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON ps.ctfo_trial_id = b.ctfo_trial_id WHERE ps.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ $$gender$$ $$sponsor$$ $$age$$ $$trial_status$$ GROUP BY 1 ), fs2 AS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$country$$ GROUP BY 1 ), country_met AS ( SELECT country, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY enrollment_rate ) AS enrollment_rate, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY patients_enrolled ) AS patients_enrolled, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY planned_patient_deviation ) AS planned_patient_deviation, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY planned_fpfv_deviation ) AS planned_fpfv_deviation, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY screen_failure_rate ) AS screen_failure_rate, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY number_patients_planned ) AS patient_planned, max(post_trial_flag) AS post_trial_flag, max(post_trial_details) AS post_trial_details FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and cnty.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND cnty.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs1 ) AND cnty.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) GROUP BY country ), iec_time AS ( SELECT country, median(regulatory_iec_time) AS regulatory_iec_time FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$trial_status$$ GROUP BY 1 ) GROUP BY country ), avg_startup AS ( SELECT country, median(country_startup_time) AS average_startup_time_median FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$trial_status$$ GROUP BY 1 ) GROUP BY country ), country_total_trials AS ( SELECT country, COUNT(DISTINCT ctfo_trial_id) AS total_trials FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ) GROUP BY country ), country_patient_retention AS ( SELECT country, median( patient_retention :: DOUBLE PRECISION ) AS patient_retention FROM $$schema_reporting$$.f_rpt_country si where pt_cycle_id = '$$pt_cycle_id$$' and si.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ $$gender$$ $$sponsor$$ $$age$$ GROUP BY 1 ) GROUP BY country ), country_planned_fsiv_deviation AS ( SELECT country, PERCENTILE_CONT(0.5) WITHIN GROUP ( ORDER BY planned_fsiv_deviation ) AS planned_fsiv_deviation FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ) GROUP BY country ), country_completed_closed_trial AS ( SELECT country, count(DISTINCT ctfo_trial_id) AS completed_closed_trial FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(cnty.trial_status) ) IN ('completed') and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ GROUP BY 1 ) GROUP BY country ), country_ongoing_trial AS ( SELECT country, count(DISTINCT ctfo_trial_id) AS ongoing_trials_country FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and ( lower( trim(cnty.trial_status) ) in ('ongoing', 'planned') ) and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$sponsor$$ GROUP BY 1 ) GROUP BY country ), recent_trial_count AS ( SELECT country, count(DISTINCT ctfo_trial_id) AS recent_trials_country FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and ( lower( trim(cnty.trial_status) ) in ('ongoing', 'completed') ) and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_site_study_details stn ON stn.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$trial_status$$ AND (trial_start_dt) > ( (CURRENT_DATE) - INTERVAL '5 YEAR' ) GROUP BY 1 ) GROUP BY country ), sites_tier AS ( SELECT site_country AS country, count(DISTINCT ctfo_site_id) AS no_sites, coalesce( count( DISTINCT CASE WHEN global_tier = '1' THEN ctfo_site_id END ), 0 ) AS top_sites_country FROM $$schema$$.f_rpt_scenario_site_ranking_temp site_rank WHERE theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND active_flag = '$$active_flag' GROUP BY site_country ), investigator_tier AS ( SELECT investigator_country AS country, count(DISTINCT ctfo_investigator_id) AS no_investigators, coalesce( count( DISTINCT CASE WHEN global_tier = '1' THEN ctfo_investigator_id END ), 0 ) AS top_inv_country FROM $$schema$$.f_rpt_scenario_investigator_ranking_temp inv_rank WHERE theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND active_flag = '$$active_flag' GROUP BY investigator_country ), targ_treatment AS ( SELECT country, count(DISTINCT drug_id) AS approved_targeted_treatment FROM $$schema_reporting$$.f_rpt_drug_details drg WHERE disease_status IN ('Registered', 'Launched') $$country_drug_status$$ $$therapeutic_class$$ $$disease_nm$$ $$originator$$ GROUP BY country ), country_market_launch_flag AS ( SELECT standard_country AS country, market_launch_flag FROM $$schema_reporting$$.f_rpt_study_country_details WHERE study_code = '$$study_code$$' GROUP BY 1, 2 ), comp_trial_count AS ( SELECT country AS country, count(DISTINCT ctfo_trial_id) AS completed_trials_country FROM $$schema_reporting$$.f_rpt_country cnty where pt_cycle_id = '$$pt_cycle_id$$' and ( lower( trim(trial_status) ) = 'completed' ) and cnty.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) AND a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs2 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ GROUP BY 1 ) GROUP BY country ) INSERT INTO $$schema$$.f_rpt_scenario_country_ranking_temp ( WITH country_rank AS ( WITH country_norm AS ( WITH country_metrics AS ( SELECT A.country_code, a.site_country AS country_name, a.region, iec.regulatory_iec_time, er.patient_planned, epidem.prevalence AS patient_prevalance, ongoing_trials_country, k.total_trials, s.no_sites AS no_of_sites, recent_trials_country, er.patients_enrolled AS patients_enrolled, ap.approved_targeted_treatment, coalesce( upload.screen_failure_rate, er.screen_failure_rate ) AS median_screen_failure_rate, no_investigators AS no_of_investigators, t.patient_retention, er.planned_patient_deviation, planned_fsiv_deviation, er.planned_fpfv_deviation, er.post_trial_flag, er.post_trial_details, c.completed_closed_trial, m.market_launch_flag, CASE WHEN top_sites_global <> 0 THEN ( ( top_sites_country / top_sites_global ) * 100 ) ELSE 0 END AS high_perf_sites, CASE WHEN top_inv_global <> 0 THEN ( (top_inv_country / top_inv_global) * 100 ) ELSE 0 END AS high_perf_investigators, coalesce( upload.average_startup_time, aeg.average_startup_time_median ) AS median_average_startup_time, coalesce( upload.enrollment_rate, er.enrollment_rate ) AS median_enrollment_rate, CASE WHEN completed_trials_global <> 0 THEN ( ( l.completed_trials_country / completed_trials_global ) * 100 ) ELSE 0 END AS perc_completed_trials FROM ( SELECT DISTINCT site_country, country_code, region FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND active_flag = '$$active_flag' AND true $$site_country$$ GROUP BY 1, 2, 3 ) A LEFT JOIN iec_time iec ON iec.country = A.site_country LEFT JOIN avg_startup aeg ON aeg.country = A.site_country LEFT JOIN country_met er ON er.country = A.site_country LEFT JOIN country_total_trials K ON A.site_country = K.country LEFT JOIN country_planned_fsiv_deviation I ON A.site_country = I.country LEFT JOIN country_ongoing_trial st ON A.site_country = st.country LEFT JOIN recent_trial_count n ON n.country = A.site_country LEFT JOIN sites_tier s ON s.country = A.site_country LEFT JOIN targ_treatment ap ON ap.country = A.site_country LEFT JOIN country_patient_retention t ON t.country = A.site_country LEFT JOIN country_completed_closed_trial c ON c.country = A.site_country LEFT JOIN comp_trial_count l ON l.country = A.site_country LEFT JOIN country_market_launch_flag m ON A.site_country = m.country LEFT JOIN ( SELECT country, sum(prevalence) AS prevalence FROM $$schema_reporting$$.f_rpt_patient_details WHERE true $$country$$ $$disease$$ $$genderprev$$ GROUP BY country ) epidem ON a.site_country = epidem.country LEFT JOIN investigator_tier D ON A.site_country = D.country LEFT JOIN $$schema$$.user_metrics_uploaded_data upload ON a.country_code = upload.country_code AND upload.active_flag = 'Y' AND upload.theme_id = '$$theme_id' AND upload.scenario_id = '$$scenario_id' AND lower(upload.rank_list_type) = 'country' CROSS JOIN ( SELECT COALESCE( sum(top_sites_country), 0 ) AS top_sites_global FROM sites_tier ) E CROSS JOIN ( SELECT COALESCE( sum(top_inv_country), 0 ) AS top_inv_global FROM investigator_tier where country in ( SELECT DISTINCT site_country FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND active_flag = 'Y' AND true ) ) Z CROSS JOIN ( SELECT COALESCE( sum(completed_trials_country), 0 ) AS completed_trials_global FROM comp_trial_count where country in ( SELECT DISTINCT site_country FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND active_flag = 'Y' AND true ) ) G GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 ) SELECT country_code, country_name, region, regulatory_iec_time, patient_planned, patient_retention, planned_patient_deviation, planned_fsiv_deviation, planned_fpfv_deviation, post_trial_flag, post_trial_details, completed_closed_trial, coalesce( cast( ( patient_prevalance - min_patient_prevalance ) AS DOUBLE PRECISION ) / nullif( cast( ( max_patient_prevalance - min_patient_prevalance ) AS DOUBLE PRECISION ), 0 ), 0 ) AS norm_patient_prevalance, patient_prevalance, 1 - ( coalesce( cast( ( ongoing_trials_country - min_ongoing_trials_country ) AS DOUBLE PRECISION ) / nullif( cast( ( max_ongoing_trials_country - min_ongoing_trials_country ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_ongoing_trials_country, ongoing_trials_country, total_trials, market_launch_flag, no_of_sites, median_enrollment_rate, perc_completed_trials, median_average_startup_time, approved_targeted_treatment, high_perf_sites, high_perf_investigators, no_of_investigators, CASE WHEN ( max_high_perf_sites - min_high_perf_sites ) <> 0 THEN coalesce( cast( ( high_perf_sites - min_high_perf_sites ) AS DOUBLE PRECISION ) / nullif( cast( ( max_high_perf_sites - min_high_perf_sites ) AS DOUBLE PRECISION ), 0 ), 0 ) ELSE 0 END AS norm_high_perf_sites, CASE WHEN ( max_high_perf_investigators - min_high_perf_investigators ) <> 0 THEN coalesce( cast( ( high_perf_investigators - min_high_perf_investigators ) AS DOUBLE PRECISION ) / nullif( cast( ( max_high_perf_investigators - min_high_perf_investigators ) AS DOUBLE PRECISION ), 0 ), 0 ) ELSE 0 END AS norm_high_perf_investigators, 1 - ( coalesce( cast( ( median_average_startup_time - min_median_average_startup_time ) AS DOUBLE PRECISION ) / nullif( cast( ( max_median_average_startup_time - min_median_average_startup_time ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_median_average_startup_time, coalesce( cast( ( median_enrollment_rate - min_median_enrollment_rate ) AS DOUBLE PRECISION ) / nullif( cast( ( max_median_enrollment_rate - min_median_enrollment_rate ) AS DOUBLE PRECISION ), 0 ), 0 ) AS norm_median_enrollment_rate, coalesce( cast( ( perc_completed_trials - min_perc_completed_trials ) AS DOUBLE PRECISION ) / nullif( cast( ( max_perc_completed_trials - min_perc_completed_trials ) AS DOUBLE PRECISION ), 0 ), 0 ) AS norm_perc_completed_trials, recent_trials_country, patients_enrolled, median_screen_failure_rate, coalesce( cast( ( approved_targeted_treatment - min_approved_targeted_treatment ) AS DOUBLE PRECISION ) / nullif( cast( ( max_approved_targeted_treatment - min_approved_targeted_treatment ) AS DOUBLE PRECISION ), 0 ), 0 ) AS norm_approved_targeted_treatment, 1 - ( coalesce( cast( ( median_screen_failure_rate - min_median_screen_failure_rate ) AS DOUBLE PRECISION ) / nullif( cast( ( max_median_screen_failure_rate - min_median_screen_failure_rate ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_median_screen_failure_rate FROM ( SELECT country_code, country_name, region, regulatory_iec_time, patient_planned, patient_prevalance, patient_retention, planned_patient_deviation, planned_fsiv_deviation, planned_fpfv_deviation, post_trial_flag, post_trial_details, completed_closed_trial, ongoing_trials_country, total_trials, market_launch_flag, no_of_sites, no_of_investigators, high_perf_sites, high_perf_investigators, median_average_startup_time, median_enrollment_rate, perc_completed_trials, recent_trials_country, patients_enrolled, approved_targeted_treatment, median_screen_failure_rate FROM country_metrics ) D CROSS JOIN ( SELECT min(median_enrollment_rate) AS min_median_enrollment_rate, min(median_average_startup_time) AS min_median_average_startup_time, min(median_screen_failure_rate) AS min_median_screen_failure_rate, min(ongoing_trials_country) AS min_ongoing_trials_country, min(perc_completed_trials) AS min_perc_completed_trials, min(high_perf_sites) AS min_high_perf_sites, min(high_perf_investigators) AS min_high_perf_investigators, min(approved_targeted_treatment) AS min_approved_targeted_treatment, min(patient_prevalance) AS min_patient_prevalance, max(median_enrollment_rate) AS max_median_enrollment_rate, max(median_average_startup_time) AS max_median_average_startup_time, max(median_screen_failure_rate) AS max_median_screen_failure_rate, max(ongoing_trials_country) AS max_ongoing_trials_country, max(perc_completed_trials) AS max_perc_completed_trials, max(high_perf_sites) AS max_high_perf_sites, max(high_perf_investigators) AS max_high_perf_investigators, max(approved_targeted_treatment) AS max_approved_targeted_treatment, max(patient_prevalance) AS max_patient_prevalance FROM country_metrics ) min_max ) SELECT country_code, country_name AS country, region, regulatory_iec_time, patient_planned, patient_retention, planned_patient_deviation, planned_fsiv_deviation, planned_fpfv_deviation, post_trial_flag, post_trial_details, completed_closed_trial, no_of_sites, no_of_investigators, recent_trials_country, patient_prevalance, approved_targeted_treatment, high_perf_sites, high_perf_investigators, ongoing_trials_country, total_trials, market_launch_flag, median_average_startup_time, median_enrollment_rate, perc_completed_trials, patients_enrolled, median_screen_failure_rate, ( ( coalesce(norm_patient_prevalance, 0) * $$wt_patient_prevalence ) + ( norm_ongoing_trials_country * $$wt_ongoing_trials ) + ( coalesce(norm_high_perf_sites, 0) * $$wt_percent_high_performing_sites ) + ( coalesce(norm_high_perf_investigators, 0) * $$wt_percent_high_performing_investigators ) + ( coalesce( norm_median_average_startup_time, 0 ) * $$wt_median_average_startup_time ) + ( coalesce(norm_median_enrollment_rate, 0) * $$wt_enrollment_rate ) + ( coalesce(norm_perc_completed_trials, 0) * $$wt_percent_completed_trials ) + ( coalesce( norm_approved_targeted_treatment, 0 ) * $$wt_approved_targeted_treatment ) + ( coalesce( norm_median_screen_failure_rate, 0 ) * $$wt_median_screen_failure_rate ) ) AS tier_score, dense_rank() OVER ( ORDER BY ( ( coalesce(norm_patient_prevalance, 0) * $$wt_patient_prevalence ) + ( norm_ongoing_trials_country * $$wt_ongoing_trials ) + ( coalesce(norm_high_perf_sites, 0) * $$wt_percent_high_performing_sites ) + ( coalesce(norm_high_perf_investigators, 0) * $$wt_percent_high_performing_investigators ) + ( coalesce( norm_median_average_startup_time, 0 ) * $$wt_median_average_startup_time ) + ( coalesce(norm_median_enrollment_rate, 0) * $$wt_enrollment_rate ) + ( coalesce(norm_perc_completed_trials, 0) * $$wt_percent_completed_trials ) + ( coalesce( norm_approved_targeted_treatment, 0 ) * $$wt_approved_targeted_treatment ) + ( coalesce( norm_median_screen_failure_rate, 0 ) * $$wt_median_screen_failure_rate ) ) DESC ) country_rank FROM country_norm ), distinct_country_score AS ( SELECT DISTINCT tier_score AS country_score_distinct FROM country_rank ), country_score_tier AS ( SELECT country_score_distinct, Ntile(4) OVER ( ORDER BY country_score_distinct DESC ) AS country_tier FROM distinct_country_score ) SELECT '$$country_list_id' AS country_list_id, '1' AS version, country_rank AS rank, coalesce(tier_5.country_tier, '5') AS tier, country_code, country, region, regulatory_iec_time, patient_planned, patient_prevalance, tier_score, ongoing_trials_country, no_of_sites, no_of_investigators, high_perf_sites, high_perf_investigators, median_average_startup_time, median_enrollment_rate, perc_completed_trials, recent_trials_country, patients_enrolled, approved_targeted_treatment, median_screen_failure_rate, '$$theme_id' AS theme_id, '$$scenario_id' AS scenario_id, '$$created_by' AS created_by, '$$updated_by' AS updated_by, '$$active_flag' AS active_flag, '$$created_timestamp' AS created_timestamp, '$$updated_timestamp' AS updated_timestamp, false AS survey_flag, NULL AS prev_optimisation_flag, NULL AS curr_optimisation_flag, total_trials, patient_retention, planned_patient_deviation, planned_fsiv_deviation, planned_fpfv_deviation, post_trial_flag, post_trial_details, completed_closed_trial, market_launch_flag FROM country_rank a LEFT JOIN country_score_tier tier_5 ON a.tier_score = tier_5.country_score_distinct ORDER BY country_rank ) ",
        "country_rank_save_query": "INSERT INTO $$schema$$.$$actual_table_name (SELECT * FROM $$schema$$.$$temp_table_name WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and country_list_id = '$$country_list_id$$');",
        "get_version_query": "select version from $$schema$$.$$actual_table_name where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag='Y';",
        "update_active_flag": "update $$schema$$.$$actual_table_name set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$';",
        "update_version_query": "update $$schema$$.$$actual_table_name set version = '$$version$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and country_list_id = '$$country_list_id$$';",
        "insert_weightage_query": "INSERT INTO $$schema$$.$$table_name(wt_enrollment_rate ,wt_median_average_startup_time, wt_median_screen_failure_rate, wt_ongoing_trials, wt_percent_completed_trials, wt_percent_high_performing_sites, wt_percent_high_performing_investigators, wt_approved_targeted_treatment, wt_patient_prevalence, theme_id ,scenario_id ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp ,version, country_list_id) values ('$$wt_enrollment_rate' ,'$$wt_median_average_startup_time' ,'$$wt_median_screen_failure_rate' ,'$$wt_ongoing_trials' ,'$$wt_percent_completed_trials' ,'$$wt_percent_high_performing_sites' ,'$$wt_percent_high_performing_investigators', '$$wt_approved_targeted_treatment', '$$wt_patient_prevalence', '$$theme_id' ,'$$scenario_id' ,'$$created_by' ,'$$updated_by' ,'$$active_flag' ,'$$created_timestamp' ,'$$updated_timestamp' ,'$$version', '$$country_list_id')",
        "weightage_save_query": "INSERT INTO $$schema$$.$$actual_table_name (SELECT * FROM $$schema$$.$$temp_table_name WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and country_list_id = '$$country_list_id$$');",
        "update_weightage_active_flag": "update $$schema$$.$$weights_actual_table set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$';",
        "update_weightage_version_query": "update $$schema$$.$$weights_actual_table set version = '$$version$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and country_list_id = '$$country_list_id$$';",
        "country_rank_display_query": "SELECT rank ,tier ,country ,country_code ,tier_score ,regulatory_iec_timeline ,patient_planned ,patient_prevalance ,ongoing_trials_country ,no_of_sites ,no_of_investigators ,high_perf_sites ,high_perf_investigators ,median_average_startup_time ,median_enrollment_rate ,perc_completed_trials ,recent_trials_country ,patients_enrolled ,approved_targeted_treatment ,median_screen_failure_rate ,patient_retention ,market_launch_flag AS market_launch_plan ,post_trial_flag AS post_trial_access ,post_trial_details ,completed_closed_trial ,planned_patient_deviation AS pt_planned_vs_pt_enrolled ,planned_fsiv_deviation AS fsiv ,planned_fpfv_deviation AS fsfv ,CASE WHEN prev_optimisation_flag = true THEN 'Yes' ELSE 'No' END AS prev_optimisation_flag ,CASE WHEN curr_optimisation_flag = true THEN 'Yes' WHEN curr_optimisation_flag = False THEN 'No' ELSE NULL END AS curr_optimisation_flag ,theme_id ,scenario_id ,country_list_id ,CASE WHEN survey_flag = true THEN 'Yes' ELSE 'No' END AS survey_flag ,total_trials FROM $$schema$$.$$table_name$$ WHERE $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "weightage_display_query": "select wt_enrollment_rate, wt_median_average_startup_time, wt_median_screen_failure_rate, wt_ongoing_trials, wt_percent_completed_trials, wt_percent_high_performing_sites, wt_percent_high_performing_investigators, wt_approved_targeted_treatment, wt_patient_prevalence from $$schema$$.$$table_name$$ where $$condition$$;",
        "get_country_list_id_query": "select max(country_list_id) from $$schema$$.$$table_name$$ where $$condition$$;",
        "get_color_query": "SELECT COALESCE(VALUES, 0.0) AS VALUES FROM( SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(median_enrollment_rate AS DOUBLE PRECISION) ASC) AS VALUES ,'1' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(median_average_startup_time AS DOUBLE PRECISION) ASC ) AS VALUES ,'2' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(median_screen_failure_rate AS DOUBLE PRECISION) ASC ) AS VALUES ,'3' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(ongoing_trials_country AS DOUBLE PRECISION) ASC ) AS VALUES ,'4' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(perc_completed_trials AS DOUBLE PRECISION) ASC ) AS VALUES ,'5' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(high_perf_sites AS DOUBLE PRECISION) ASC ) AS VALUES ,'6' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(high_perf_investigators AS DOUBLE PRECISION) ASC ) AS VALUES ,'7' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(approved_targeted_treatment AS DOUBLE PRECISION) ASC ) AS VALUES ,'8' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(patient_prevalance AS DOUBLE PRECISION) ASC ) AS VALUES ,'9' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(patient_retention AS DOUBLE PRECISION) ASC ) AS VALUES ,'10' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(completed_closed_trial AS DOUBLE PRECISION) ASC ) AS VALUES ,'11' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(planned_patient_deviation AS DOUBLE PRECISION) ASC ) AS VALUES ,'12' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(planned_fsiv_deviation AS DOUBLE PRECISION) ASC ) AS VALUES ,'13' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(planned_fpfv_deviation AS DOUBLE PRECISION) ASC ) AS VALUES ,'14' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(total_trials AS DOUBLE PRECISION) ASC ) AS VALUES ,'15' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' UNION ALL SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(patient_planned AS DOUBLE PRECISION) ASC ) AS VALUES ,'16' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' ) a ORDER BY a.row_num::int",
        "delete_color_query": "delete from $$schema$$.$$table_name$$ where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and type = 'country' and optimization_flag = '$$optimization_flag$$' and active_flag = 'Y' and table_category = '$$table_category$$';",
        "insert_color_query": "insert into $$schema$$.$$table_name (theme_id, scenario_id, list_id, type, optimization_flag, color_json, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, version, table_category) values ('$$theme_id$$', '$$scenario_id$$', '$$list_id$$', 'country', '$$optimization_flag$$', '$$color_json$$', '$$created_by$$', '$$updated_by$$', 'Y', '$$created_timestamp$$', '$$updated_timestamp$$', '$$version$$', '$$table_category$$');",
        "color_display_query": "select color_json from $$schema$$.$$table_name$$ where $$condition$$ order by created_timestamp desc limit 1;",
        "update_filter_active_flag": "update $$schema$$.f_rpt_filter_constraints_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "update_region_active_flag": "update $$schema$$.f_rpt_region_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "update_country_active_flag": "update $$schema$$.f_rpt_country_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and site_list_id = '$$site_list_id$$'",
        "insert_filter_constraint_query": "INSERT INTO $$schema$$.f_rpt_filter_constraints_optimizer_dtl (theme_id, scenario_id, site_list_id, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) VALUES ('$$theme_id$$', '$$scenario_id$$', '$$site_list_id$$', '1', 'Y', '$$user_id$$', '$$time_stamp$$', '$$user_id$$', '$$time_stamp$$' )",
        "insert_region_constraint_query": "INSERT INTO $$schema$$.f_rpt_region_optimizer_dtl (theme_id, scenario_id, site_list_id,region,include_exclude,reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) (SELECT DISTINCT theme_id, scenario_id, site_list_id,region,include_exclude, reason, comment, '1' AS version, 'Y' as active_flag, 'site_rank' AS created_by, created_timestamp, 'site_rank' AS updated_by, updated_timestamp FROM $$schema$$.f_rpt_scenario_site_ranking a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and a.active_flag ='Y')",
        "insert_country_query": "INSERT INTO $$schema$$.f_rpt_country_optimizer_dtl(sites_count, theme_id, scenario_id, site_list_id,country,region,country_code,include_exclude,reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) (select count(distinct ctfo_site_id) as sites_count , theme_id, scenario_id, site_list_id,site_country,region,country_code,include_exclude, reason, comment, '1' AS version, 'Y' as active_flag, 'site_rank' AS created_by, created_timestamp, 'site_rank' AS updated_by, updated_timestamp FROM $$schema$$.f_rpt_scenario_site_ranking a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and a.active_flag='Y' and country_code is not null and region_code is not null and lost_opportunity_time_median is not null and average_startup_time_median is not null group by 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)",
        "optimize_country_actual_last_version": "SELECT version from $$schema$$.f_rpt_scenario_country_ranking_optimized where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag='Y'",
        "delete_actual_optimized_country": "UPDATE $$schema$$.f_rpt_scenario_country_ranking_optimized SET active_flag = 'N' where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "insert_optimize_country_actual": "INSERT into $$schema$$.f_rpt_scenario_country_ranking_optimized (SELECT country_list_id,'$$version$$' as version,rank ,tier ,country_code ,country, region,regulatory_iec_timeline ,patient_planned ,patient_prevalance ,tier_score ,ongoing_trials_country ,no_of_sites ,no_of_investigators ,high_perf_sites ,high_perf_investigators ,median_average_startup_time ,median_enrollment_rate ,perc_completed_trials ,recent_trials_country ,patients_enrolled ,approved_targeted_treatment ,median_screen_failure_rate ,theme_id ,scenario_id ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp ,optimize_site_id, total_trials, patient_retention, planned_patient_deviation, planned_fsiv_deviation, planned_fpfv_deviation, post_trial_flag, post_trial_details, completed_closed_trial, market_launch_flag  from $$schema$$.f_rpt_scenario_country_ranking_optimized_temp where country_list_id = '$$country_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y' and optimize_site_id = '$$optimize_site_id$$')",
        "delete_temp_optimized_country": "UPDATE $$schema$$.f_rpt_scenario_country_ranking_optimized_temp SET active_flag = 'N' where country_list_id = '$$country_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "rollback_deleted_actual_optimized_country": "UPDATE $$schema$$.f_rpt_scenario_country_ranking_optimized SET active_flag = 'Y' where country_list_id = '$$country_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$'",
        "get_optimize_country_status": "SELECT jobstatus,comment from $$schema$$.f_rpt_scenario_site_ranking_optimize_status where optimize_site_id = '$$optimize_site_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and type = 'country' ORDER BY created_timestamp DESC LIMIT 1",
        "get_actual_optimized_country": "SELECT * from $$schema$$.f_rpt_scenario_country_ranking_optimized where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "get_temp_optimized_country": "SELECT * from $$schema$$.f_rpt_scenario_country_ranking_optimized_temp where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "country_rank_export_list": "SELECT * from $$schema$$.f_rpt_scenario_country_ranking where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and country_list_id = '$$country_list_id$$'",
        "country_rank_optimized_export_list": "SELECT * from $$schema$$.f_rpt_scenario_country_ranking_optimized where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' order by rank asc",
        "save_country_survey_flag_details": "update $$schema$$.f_rpt_scenario_country_ranking_temp set survey_flag= (CASE WHEN lower('$$include_in_country_survey$$') = 'yes' THEN true  ELSE false  END),  curr_optimisation_flag = (CASE WHEN lower('$$include_in_curr_optimization$$') = 'no' THEN false ELSE null END) where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and country_code='$$country_code$$' and active_flag='Y'",
        "save_country_include_exclude_details_details": "update $$schema$$.$$table$$ set curr_optimisation_flag = (CASE WHEN lower('$$include_in_trials$$') = 'no' THEN false END) where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and country='$$country$$' and active_flag='Y'",
        "post_trial_details_query" : "select distinct post_trial_details, country from $$schema_reporting$$.$$table_name$$ where country = '$$country$$' and post_trial_flag = 'Depends';",
        "query_e_color" : "select color_json from $$schema$$.$$table_name$$ where $$condition$$ order by created_timestamp desc limit 1"
      },
      "country_outreach": {
        "get_country_heads_details": "SELECT survey_country_dtl.survey_id AS survey_id, survey_country_dtl.scenario_id AS scenario_id, survey_country_dtl.scenario_version AS scenario_version, survey_country_dtl.country_name AS country_name, survey_country_dtl.country_head_first_name AS country_head_first_name, survey_country_dtl.country_head_name AS country_head_name, survey_country_dtl.country_head_email AS country_head_email, survey_country_dtl.survey_sent_date AS survey_sent_date, survey_country_dtl.recipient_personalized_link AS recipient_personalized_link, survey_eml_dtl.reminder_sent_date AS reminder_sent_date, survey_eml_dtl.recipient_list AS recipient_list, survey_eml_dtl.reminder_count AS reminder_count, survey_country_dtl.theme_id AS theme_id, survey_country_dtl.created_by AS created_by, survey_country_dtl.progress_percentage AS progress_percentage, survey_country_dtl.salutation, smry.study_code AS study_code, regexp_replace( smry.study_name, Chr(39), '' ) as study_name, smry.therapeutic_area as ta_name, survey_country_dtl.is_ecda AS is_ecda, survey_country_dtl.country_head_email_secondary as secondary_email, smry.manual_mail_subject FROM ( SELECT survey_id, scenario_id, scenario_version, country_name, country_head_first_name, country_head_name, country_head_email, survey_sent_date, recipient_personalized_link, theme_id, created_by, progress_percentage, country_head_email_secondary, is_ecda, salutation FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND $$survey_condition$$ GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ) AS survey_country_dtl INNER JOIN( SELECT survey_id, scenario_id, country_name, max(reminder_sent_date) AS reminder_sent_date, recipient_list, Count(reminder_sent_date) AS reminder_count, theme_id FROM $$schema$$.log_scenario_survey_email_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND $$survey_condition$$ GROUP BY 1, 2, 3, 5, 7 ) AS survey_eml_dtl ON survey_country_dtl.scenario_id = survey_eml_dtl.scenario_id AND survey_country_dtl.country_name = survey_eml_dtl.country_name AND survey_country_dtl.survey_id = survey_eml_dtl.survey_id AND survey_country_dtl.theme_id = survey_eml_dtl.theme_id inner join $$schema$$.f_rpt_scenario_stdy_sumry smry on survey_eml_dtl.scenario_id = smry.scenario_id and survey_eml_dtl.theme_id = smry.theme_id WHERE smry.scenario_id = '$$scenario_id$$' and smry.theme_id = '$$theme_id$$' and smry.active_flag = 'Y'",
        "get_individual_country_heads_details": "SELECT survey_country_dtl.survey_id AS survey_id, survey_country_dtl.scenario_id AS scenario_id, survey_country_dtl.scenario_version AS scenario_version, survey_country_dtl.country_name AS country_name, survey_country_dtl.country_head_first_name AS country_head_first_name, survey_country_dtl.country_head_name AS country_head_name, survey_country_dtl.country_head_email AS country_head_email, survey_country_dtl.survey_sent_date AS survey_sent_date, survey_country_dtl.recipient_personalized_link AS recipient_personalized_link, survey_eml_dtl.reminder_sent_date AS reminder_sent_date, survey_eml_dtl.recipient_list AS recipient_list, survey_eml_dtl.reminder_count AS reminder_count, survey_country_dtl.theme_id AS theme_id, survey_country_dtl.created_by AS created_by, survey_country_dtl.progress_percentage AS progress_percentage, survey_country_dtl.salutation, survey_country_dtl.country_head_email_secondary AS secondary_email, smry.study_code AS study_code, regexp_replace( smry.study_name, Chr(39), '' ) as study_name, smry.therapeutic_area as ta_name, smry.manual_mail_subject FROM ( SELECT survey_id, scenario_id, scenario_version, country_name, country_head_first_name, country_head_name, country_head_email, survey_sent_date, recipient_personalized_link, theme_id, created_by, progress_percentage, salutation, country_head_email_secondary FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND survey_id = '$$survey_id$$' AND country_name = '$$country_name$$' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ) AS survey_country_dtl INNER JOIN( SELECT survey_id, scenario_id, max(reminder_sent_date) AS reminder_sent_date, recipient_list, country_name, Count(reminder_sent_date) AS reminder_count, theme_id FROM $$schema$$.log_scenario_survey_email_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND survey_id = '$$survey_id$$' AND country_name = '$$country_name$$' GROUP BY 1, 2, 4, 5, 7) AS survey_eml_dtl ON survey_country_dtl.scenario_id = survey_eml_dtl.scenario_id AND survey_country_dtl.country_name = survey_eml_dtl.country_name AND survey_country_dtl.survey_id = survey_eml_dtl.survey_id AND survey_country_dtl.theme_id = survey_eml_dtl.theme_id inner join $$schema$$.f_rpt_scenario_stdy_sumry smry on survey_eml_dtl.scenario_id = smry.scenario_id and survey_eml_dtl.theme_id = smry.theme_id WHERE smry.scenario_id = '$$scenario_id$$' and smry.theme_id = '$$theme_id$$' and smry.active_flag = 'Y'",
        "insert_reminder_sent_details": "INSERT INTO $$schema$$.log_scenario_survey_email_dtl (scenario_id, survey_id, scenario_version, email_type, sender, recipient_list, cc_recipient_list, bcc_recipient_list, reply_to_list, subject, email_body, reminder_sent_date, created_by, created_time, last_updated_by, last_updated_time, country_name, theme_id) VALUES  ('$$scenario_id$$', '$$survey_id$$', NULL, '$$email_type$$', '$$sender$$', '$$recipient_list$$', NULL, NULL, NULL, '$$subject$$', '$$email_body$$', '$$reminder_sent_date$$', '$$created_by$$', '$$created_time$$', '$$last_updated_by$$', '$$last_updated_time$$', '$$country_name$$', '$$theme_id$$')",
        "update_country_outreach_data": "UPDATE $$schema$$.f_rpt_user_scenario_survey_country_dtl SET include_in_trial = %(include_in_trials)s, survey_country_version = '$$survey_country_version$$', last_updated_by = '$$last_updated_by$$', last_updated_time = '$$last_updated_time$$',reason_for_inclusion_exclusion = %(reason_for_inclusion_exclusion)s WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND country_name = %(country_name)s",
        "common_insert_query": "INSERT INTO $$schema$$.f_rpt_user_scenario_survey_country_dtl ( scenario_id, country_name, country_head_name, country_head_email, country_head_first_name, country_head_last_name, country_head_phone, created_by, created_time, last_updated_by, last_updated_time, is_active, theme_id, survey_country_version, survey_id) VALUES ",
        "get_country_outreach_details": "SELECT sscd.country_name AS country_name, sscd.scenario_id AS scenario_id, sscd.survey_id AS survey_id, sscd.country_head_name AS country_head_name, sscd.country_head_email AS country_head_email, sscd.country_head_phone AS country_head_phone, sscd.country_head_first_name AS country_head_first_name, sscd.country_head_last_name AS country_head_last_name, uss.survey_status AS survey_status, uss.last_updated_time AS survey_last_updated_date, sscd.recipient_personalized_link AS view_survey_link, sscd.survey_version AS survey_version, sscd.survey_sent_date AS survey_sent_date, sscd.progress_percentage AS progress_percentage, sed.reminder_sent_date AS reminder_sent_date, sscd.survey_completed_date AS survey_completed_date, sscd.include_in_trial AS include_in_trial, sscd.feasibility_or_protocol_fit AS feasibility_or_protocol_fit, sscd.cost_per_patient AS cost_per_patient, sscd.degree_of_compliance AS degree_of_compliance, sscd.patients_committed AS patients_committed, sscd.response_id AS response_id, scr.no_of_sites AS sites, sed.reminder_count AS number_of_reminders_sent, sscd.reason_for_inclusion_exclusion AS reason_for_inclusion_exclusion, sscd.is_ecda AS is_ecda, sscd.turn_around_time AS turn_around_time FROM ( SELECT country, scenario_id, country_code, no_of_sites, theme_id FROM $$schema$$.f_rpt_scenario_country_ranking WHERE survey_flag = true AND active_flag = 'Y' AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' GROUP BY 1, 2, 3, 4, 5 ORDER BY 1, 2, 3, 4, 5 ) AS scr INNER JOIN ( SELECT country_name, country_head_name, country_head_email, country_head_phone, country_head_first_name, country_head_last_name, scenario_id, survey_id, survey_version, last_updated_time, recipient_personalized_link, survey_sent_date, progress_percentage, survey_completed_date, include_in_trial, feasibility_or_protocol_fit, z.cost_per_patient, degree_of_compliance, patients_committed, theme_id, response_id, reason_for_inclusion_exclusion, is_ecda, ( ( survey_completed_date :: DATE - survey_sent_date :: DATE )+ 1 ) as turn_around_time FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl ab LEFT JOIN ( Select standard_country AS country, cost_patient_euro AS cost_per_patient FROM $$schema_reporting$$.f_rpt_study_country_details WHERE study_code in (select study_code from $$schema$$.f_rpt_scenario_stdy_sumry WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y') ) z on z.country = ab.country_name WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ORDER BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ) AS sscd ON scr.scenario_id = sscd.scenario_id AND scr.country = sscd.country_name AND scr.theme_id = sscd.theme_id LEFT JOIN ( SELECT DISTINCT Count(reminder_sent_date) AS reminder_count, Max(reminder_sent_date) AS reminder_sent_date, country_name, scenario_id, theme_id, survey_id, recipient_list FROM $$schema$$.log_scenario_survey_email_dtl $$where_clause$$ GROUP BY 3, 4, 5, 6, 7 ) AS sed ON sscd.scenario_id = sed.scenario_id AND sscd.country_name = sed.country_name AND sscd.theme_id = sed.theme_id AND sscd.survey_id = sed.survey_id AND sscd.country_head_email = sed.recipient_list LEFT JOIN ( SELECT survey_status, scenario_id, theme_id, survey_id, last_updated_time FROM $$schema$$.f_rpt_user_scenario_survey_dtl $$where_clause$$ and survey_type = 'country_outreach' AND is_active = true ) AS uss ON sed.scenario_id = uss.scenario_id AND sed.survey_id = uss.survey_id $$order_by_clause$$ $$order_type$$ limit $$limit$$ offset $$offset$$",
        "outreach_data_difference": "SELECT A.country_code AS country_code, A.country AS country, B.country_name AS country_name, B.country_head_name  AS country_head_name, B.country_head_email AS country_head_email, B.country_head_phone AS country_head_phone, B.country_head_first_name AS country_head_first_name, B.country_head_last_name  AS country_head_last_name FROM (SELECT DISTINCT country_code, country, scenario_id FROM $$schema$$.f_rpt_scenario_country_ranking  WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND survey_flag = true) AS A LEFT JOIN (SELECT DISTINCT country_name, country_head_name, country_head_email, country_head_phone, country_head_first_name, country_head_last_name, is_active, scenario_id FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true) B ON A.country = B.country_name WHERE  B.country_name IS NULL",
        "insert_updated_country_outreach_records": "INSERT INTO $$schema$$.f_rpt_user_scenario_survey_country_dtl ( scenario_id, survey_version, country_name, country_head_name, country_head_email, country_head_first_name, country_head_last_name, country_head_phone, created_by, created_time, last_updated_by, last_updated_time, is_active, theme_id, include_in_trial) VALUES ",
        "delete_old_records": "DELETE FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND created_by = '$$user_id$$'",
        "update_old_data_flag": "UPDATE $$schema$$.f_rpt_user_scenario_survey_country_dtl SET is_active = 'N', last_updated_time = '$$last_updated_time$$' WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$'",
        "data_sync_false_flag_query": "SELECT  b.country_name AS country_name, b.scenario_id  AS scenario_id, b.theme_id AS theme_id, b.last_updated_time AS last_updated_time, b.is_active  AS is_active, b.survey_country_version AS survey_country_version, b.survey_id AS survey_id FROM ( SELECT country_code,  country,  scenario_id FROM $$schema$$.f_rpt_scenario_country_ranking WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND survey_flag = true AND active_flag = 'Y' GROUP BY 1,  2,  3) AS a LEFT JOIN ( SELECT * FROM (  SELECT country_name, is_active, scenario_id, theme_id, last_updated_time, survey_id, survey_country_version, Row_number() OVER ( partition BY country_name ORDER BY survey_country_version DESC) AS ra  FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl  WHERE  scenario_id = '$$scenario_id$$'  AND theme_id = '$$theme_id$$') a WHERE  ra = 1) B ON a.country = b.country_name WHERE b.is_active IS false",
        "data_sync_update_false_flag": "UPDATE $$schema$$.f_rpt_user_scenario_survey_country_dtl SET is_active = true, survey_country_version = '$$survey_country_version$$', last_updated_by = '$$last_updated_by$$', last_updated_time = '$$last_updated_time$$' $$survey_condition_flag$$ WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = false AND country_name = %(country_name)s AND survey_country_version = %(survey_country_version)s",
        "data_sync_true_flag_query": "SELECT b.country_name   AS country_name, b.scenario_id    AS scenario_id, b.theme_id AS theme_id, b.last_updated_time AS last_updated_time, b.is_active   AS is_active, b.survey_country_version AS survey_country_version FROM   ( SELECT   country_code,   country,   scenario_id FROM  $$schema$$.f_rpt_scenario_country_ranking WHERE scenario_id = '$$scenario_id$$' AND   theme_id = '$$theme_id$$' AND   survey_flag = false AND   active_flag = 'Y' GROUP BY 1,   2,   3) AS a LEFT JOIN (  SELECT *  FROM   ( SELECT   country_name, is_active, scenario_id, theme_id, last_updated_time,  survey_country_version, Row_number() OVER ( partition BY country_name ORDER BY survey_country_version DESC) AS ra FROM  $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND   theme_id = '$$theme_id$$') a  WHERE  ra = 1) B ON  a.country = b.country_name WHERE  b.is_active IS true",
        "data_sync_update_true_flag_query": "UPDATE $$schema$$.f_rpt_user_scenario_survey_country_dtl SET is_active = false, survey_country_version = '$$survey_country_version$$', last_updated_by = '$$last_updated_by$$',        last_updated_time = '$$last_updated_time$$' WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND country_name = %(country_name)s AND survey_country_version = %(survey_country_version)s",
        "update_curr_optimisation_flag": "UPDATE $$schema$$.f_rpt_scenario_country_ranking_temp SET curr_optimisation_flag = %(curr_optimisation_flag)s,include_exclude = %(include_exclude)s,survey_flag = %(survey_flag)s WHERE scenario_id ='$$scenario_id$$' and theme_id='$$theme_id$$' and country_code= %(country_code)s and active_flag ='Y'",
        "update_curr_optimisation_flag_all": "UPDATE $$schema$$.f_rpt_scenario_country_ranking_temp SET $$set_condition$$ WHERE scenario_id ='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag ='Y'",
        "country_head_info": "with country_head_dtl AS ( select study_code, standard_country, country_head_name, reverse( substr( reverse(country_head_name), 1, strpos( reverse(country_head_name), ' ' ) ) ) as country_head_last_name, country_head_email from $$schema_reporting$$.f_rpt_study_country_details WHERE study_code = '$$study_code$$' GROUP BY 1,2,3,5 ) select study_code, standard_country AS country, country_head_name, replace(country_head_name, country_head_last_name, '') as country_head_first_name, country_head_last_name, country_head_email from country_head_dtl",
        "count_nos_country": "SELECT count(country_name) from $$schema$$.f_rpt_user_scenario_survey_country_dtl $$where_clause$$ AND is_active = true"
      },
      "site_outreach": {
        "check_optimize_site_id_query": "SELECT is_outreach_generated FROM $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y'",
        "get_investigator_details": "SELECT DISTINCT site_inv_dtl.survey_id AS survey_id, site_inv_dtl.scenario_id AS scenario_id, site_inv_dtl.scenario_version AS scenario_version, site_inv_dtl.site_country AS site_country, site_inv_dtl.site_nm AS site_nm, site_inv_dtl.investigator_id AS investigator_id, site_inv_dtl.ctfo_site_id AS ctfo_site_id, site_inv_dtl.investigator_first_name AS investigator_first_name, site_inv_dtl.investigator_name AS investigator_name, site_inv_dtl.investigator_email AS investigator_email, site_inv_dtl.survey_sent_date AS survey_sent_date, site_inv_dtl.recipient_personalized_link AS recipient_personalized_link, survey_email_dtl.reminder_sent_date AS reminder_sent_date, survey_email_dtl.recipient_list AS recipient_list, survey_email_dtl.reminder_count AS reminder_count, site_inv_dtl.created_by AS created_by, site_inv_dtl.theme_id AS theme_id, site_inv_dtl.progress_percentage AS progress_percentage, site_inv_dtl.is_ecda AS is_ecda, site_inv_dtl.ctfo_inv_email_secondary as secondary_email, country_dtl.country_head_email AS cc_mail_id, country_dtl.country_head_email_secondary as country_secondary_email, country_dtl.country_head_name AS country_head_name, smry.study_code AS study_code, regexp_replace( smry.study_name, Chr(39), '') as study_name, smry.therapeutic_area as ta_name, site_inv_dtl.salutation, smry.manual_mail_subject FROM( SELECT survey_id, scenario_id, scenario_version, investigator_id, ctfo_site_id, site_country, site_nm, investigator_first_name, investigator_name, investigator_email, survey_sent_date, recipient_personalized_link, theme_id, created_by, progress_percentage, ctfo_inv_email_secondary, is_ecda, salutation FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND $$survey_condition$$ GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 ) AS site_inv_dtl INNER JOIN( SELECT survey_id, scenario_id, ctfo_site_id, investigator_id, max(reminder_sent_date) AS reminder_sent_date, Count(reminder_sent_date) AS reminder_count, recipient_list, theme_id FROM $$schema$$.log_scenario_survey_email_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND $$survey_condition$$ GROUP BY 1, 2, 3, 4, 7, 8 ) AS survey_email_dtl ON site_inv_dtl.scenario_id = survey_email_dtl.scenario_id AND site_inv_dtl.survey_id = survey_email_dtl.survey_id AND site_inv_dtl.theme_id = survey_email_dtl.theme_id AND site_inv_dtl.ctfo_site_id = survey_email_dtl.ctfo_site_id LEFT JOIN ( SELECT country_head_name, country_head_email, country_head_email_secondary, country_name, scenario_id, theme_id FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS country_dtl ON lower(site_inv_dtl.site_country) = lower(country_dtl.country_name) LEFT join $$schema$$.f_rpt_scenario_stdy_sumry smry on site_inv_dtl.scenario_id = smry.scenario_id and site_inv_dtl.theme_id = smry.theme_id WHERE smry.scenario_id = '$$scenario_id$$' AND smry.theme_id = '$$theme_id$$' AND smry.active_flag = 'Y' order by site_country",
        "get_individual_investigator_details": "SELECT DISTINCT site_inv_dtl.survey_id AS survey_id, site_inv_dtl.scenario_id AS scenario_id, site_inv_dtl.scenario_version AS scenario_version, site_inv_dtl.site_country AS site_country, site_inv_dtl.site_nm AS site_nm, site_inv_dtl.investigator_id AS investigator_id, site_inv_dtl.ctfo_site_id AS ctfo_site_id, site_inv_dtl.investigator_first_name AS investigator_first_name, site_inv_dtl.investigator_name AS investigator_name, site_inv_dtl.investigator_email AS investigator_email, site_inv_dtl.survey_sent_date AS survey_sent_date, site_inv_dtl.recipient_personalized_link AS recipient_personalized_link, survey_email_dtl.reminder_sent_date AS reminder_sent_date, survey_email_dtl.recipient_list AS recipient_list, survey_email_dtl.reminder_count AS reminder_count, site_inv_dtl.created_by AS created_by, site_inv_dtl.theme_id AS theme_id, site_inv_dtl.ctfo_inv_email_secondary as secondary_email, site_inv_dtl.progress_percentage AS progress_percentage, site_inv_dtl.is_ecda AS is_ecda, country_dtl.country_head_email AS cc_mail_id, country_dtl.country_head_email_secondary AS country_secondary_email, country_dtl.country_head_name AS country_head_name, smry.study_code AS study_code, regexp_replace( smry.study_name, Chr(39), '') as study_name, smry.therapeutic_area as ta_name, site_inv_dtl.salutation, smry.manual_mail_subject FROM( SELECT scenario_id, survey_id, scenario_version, investigator_id, site_country, site_nm, ctfo_site_id, investigator_first_name, investigator_name, investigator_email, survey_sent_date, recipient_personalized_link, theme_id, created_by, progress_percentage, ctfo_inv_email_secondary, is_ecda, salutation FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND $$survey_condition$$ AND site_country = '$$site_country$$' AND site_nm = '$$site_nm$$' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 ) AS site_inv_dtl INNER JOIN( SELECT scenario_id, survey_id, investigator_id, ctfo_site_id, country_name, Max(reminder_sent_date) AS reminder_sent_date, Count(reminder_sent_date) AS reminder_count, recipient_list, theme_id FROM $$schema$$.log_scenario_survey_email_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND $$survey_condition$$ AND investigator_id = '$$investigator_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' GROUP BY 1, 2, 3, 4, 5, 8, 9 ) AS survey_email_dtl ON site_inv_dtl.scenario_id = survey_email_dtl.scenario_id AND site_inv_dtl.investigator_id = survey_email_dtl.investigator_id AND site_inv_dtl.survey_id = survey_email_dtl.survey_id AND site_inv_dtl.site_country = survey_email_dtl.country_name AND site_inv_dtl.ctfo_site_id = survey_email_dtl.ctfo_site_id LEFT JOIN ( SELECT country_head_name, country_head_email, country_head_email_secondary, country_name, scenario_id, theme_id FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS country_dtl ON lower(site_inv_dtl.site_country) = lower(country_dtl.country_name) LEFT join $$schema$$.f_rpt_scenario_stdy_sumry smry on site_inv_dtl.scenario_id = smry.scenario_id and site_inv_dtl.theme_id = smry.theme_id WHERE smry.scenario_id = '$$scenario_id$$' AND smry.theme_id = '$$theme_id$$' AND smry.active_flag = 'Y' order by site_country",
        "insert_reminder_sent_details": "INSERT INTO $$schema$$.log_scenario_survey_email_dtl (scenario_id, survey_id, email_type, sender, recipient_list, cc_recipient_list, bcc_recipient_list, reply_to_list, subject, email_body, reminder_sent_date, created_by, created_time, last_updated_by, last_updated_time, country_name, ctfo_site_id, investigator_id, theme_id) VALUES  ('$$scenario_id$$', '$$survey_id$$', '$$email_type$$', '$$sender$$', '$$recipient_list$$', NULL, NULL, NULL, '$$subject$$', '$$email_body$$', '$$reminder_sent_date$$', '$$created_by$$', '$$created_time$$', '$$last_updated_by$$', '$$last_updated_time$$', '$$country_name$$', '$$ctfo_site_id$$', '$$investigator_id$$', '$$theme_id$$') ",
        "check_already_existing_data": "SELECT * FROM  $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true",
        "difference_data_query": "SELECT TEMP.rank AS rank, TEMP.scenario_id AS scenario_id, TEMP.ctfo_site_id AS ctfo_site_id, TEMP.site_nm AS site_nm, TEMP.site_country AS site_country, TEMP.investigator_id AS investigator_id, TEMP.investigator_first_name AS investigator_first_name, TEMP.investigator_last_name AS investigator_last_name, TEMP.investigator_full_nm AS investigator_full_nm, TEMP.investigator_email AS investigator_email, TEMP.investigator_phone AS investigator_phone, TEMP.similar_trials_experience AS similar_trials_experience, TEMP.theme_id AS theme_id, TEMP.site_alias AS site_alias, TEMP.site_alias_primary AS site_alias_primary FROM ( SELECT * FROM ( SELECT site_rank_filters.rank AS rank, site_rank_filters.scenario_id AS scenario_id, site_rank_filters.ctfo_site_id AS ctfo_site_id, site_rank_filters.site_nm AS site_nm, site_rank_filters.site_country AS site_country, site_rank_filters.site_alias AS site_alias, site_rank_filters.site_alias_primary AS site_alias_primary, inv_rank.ctfo_investigator_id AS investigator_id, inv_rank.investigator_first_name AS investigator_first_name, inv_rank.investigator_last_name AS investigator_last_name, inv_rank.investigator_full_nm AS investigator_full_nm, inv_rank.investigator_email AS investigator_email, inv_rank.investigator_phone AS investigator_phone, inv_rank.similar_trials_experience AS similar_trials_experience, site_rank_filters.theme_id AS theme_id, Row_number() OVER ( PARTITION BY site_rank_filters.ctfo_site_id ORDER BY inv_rank.similar_trials_experience DESC NULLS LAST ) AS INV_RANK FROM ( SELECT site_rank.scenario_id AS scenario_id, site_rank.theme_id AS theme_id, site_rank.rank AS rank, site_rank.ctfo_site_id AS ctfo_site_id, site_rank.site_nm AS site_nm, site_rank.site_country AS site_country, site_rank.site_alias AS site_alias, site_rank.site_alias_primary AS site_alias_primary FROM ( SELECT rank, site_nm, site_alias, site_alias_primary, site_country, ctfo_site_id, scenario_id, theme_id FROM $$schema$$.f_rpt_scenario_site_ranking WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND survey_flag = true GROUP BY 1, 2, 3, 4, 5, 6, 7, 8 ORDER BY site_country ) AS site_rank ) AS site_rank_filters LEFT JOIN ( SELECT ctfo_investigator_id, Substring( investigator_full_nm, '[^ ]+' :: TEXT ) AS investigator_first_name, Reverse( Split_part( Reverse(investigator_full_nm), ' ', 1 ) ) AS investigator_last_name, investigator_full_nm, investigator_phone, investigator_email, ctfo_site_id, similar_trials_experience, theme_id, scenario_id FROM $$schema$$.f_rpt_scenario_highest_investigator WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY 1, 4, 5, 6, 7, 8, 9, 10 ) AS inv_rank ON site_rank_filters.ctfo_site_id = inv_rank.ctfo_site_id ) AS tmp WHERE inv_rank = 1 ) TEMP LEFT JOIN ( SELECT rank, scenario_id, scenario_version, survey_id, survey_version, survey_site_investigator_version, ctfo_site_id, site_nm, site_country, investigator_id, investigator_first_name, investigator_last_name, investigator_name, investigator_email, investigator_phone FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = TRUE GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ) AS site_survey_dtl ON TEMP.ctfo_site_id = site_survey_dtl.ctfo_site_id AND TEMP.rank = site_survey_dtl.rank WHERE site_survey_dtl.ctfo_site_id IS NULL",
        "common_insert_query": "INSERT INTO $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl( rank ,scenario_id ,survey_site_investigator_version ,ctfo_site_id ,site_nm ,site_country ,investigator_id ,investigator_first_name ,investigator_last_name ,investigator_name ,investigator_email ,investigator_phone ,theme_id ,is_active ,created_by ,created_time ,last_updated_by ,last_updated_time ,survey_id ,site_alias ,site_alias_primary) VALUES",
        "display_site_survey_outreach_data": "SELECT survey_site_inv_details.rank AS site_rank, survey_site_inv_details.scenario_id AS scenario_id, survey_site_inv_details.survey_id AS survey_id, survey_site_inv_details.survey_version AS survey_version, survey_site_inv_details.ctfo_site_id AS ctfo_site_id, survey_site_inv_details.site_nm AS site_nm, survey_site_inv_details.site_country AS site_country, survey_site_inv_details.investigator_id AS investigator_id, survey_site_inv_details.investigator_name AS investigator_name, survey_site_inv_details.investigator_email AS investigator_email, survey_site_inv_details.investigator_phone AS investigator_phone, survey_site_inv_details.progress_percentage AS progress_percentage, survey_site_inv_details.survey_sent_date AS survey_sent_date, survey_site_inv_details.survey_completed_date AS survey_completed_date, survey_site_inv_details.include_in_trial AS include_in_trial, survey_site_inv_details.recipient_personalized_link AS recipient_personalized_link, survey_site_inv_details.feasibility_or_protocol_fit AS feasibility_or_protocol_fit, survey_site_inv_details.degree_of_compliance AS degree_of_compliance, survey_site_inv_details.patients_committed AS patients_committed, survey_site_inv_details.enrollment_duration_committed AS enrollment_duration_committed, survey_site_inv_details.theme_id AS theme_id, log_scenario_survey_dtl.reminder_count AS number_of_reminders_sent, log_scenario_survey_dtl.reminder_sent_date AS reminder_sent_date, user_survey_dtl.survey_status AS survey_status, survey_site_inv_details.optimize_site_id AS optimize_site_id, survey_site_inv_details.response_id AS response_id, survey_site_inv_details.is_ecda AS is_ecda, survey_site_inv_details.reason_for_inclusion_exclusion AS reason_for_inclusion_exclusion, survey_site_inv_details.turn_around_time AS turn_around_time, survey_site_inv_details.site_alias AS site_alias, survey_site_inv_details.site_alias_primary AS site_alias_primary FROM ( SELECT rank, scenario_id, survey_id, survey_version, ctfo_site_id, site_nm, site_country, investigator_id, investigator_name, investigator_email, investigator_phone, progress_percentage, survey_sent_date, survey_completed_date, include_in_trial, recipient_personalized_link, feasibility_or_protocol_fit, degree_of_compliance, patients_committed, enrollment_duration_committed, theme_id, optimize_site_id, response_id, is_ecda, reason_for_inclusion_exclusion, ( ( survey_completed_date :: DATE - survey_sent_date :: DATE ) + 1 ) AS turn_around_time, COALESCE(NULLIF(site_alias, ''), site_nm) AS site_alias, COALESCE(NULLIF(site_alias_primary, ''), site_nm) AS site_alias_primary FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 ) AS survey_site_inv_details LEFT JOIN ( SELECT Count(reminder_sent_date) AS reminder_count, Max(reminder_sent_date) AS reminder_sent_date, country_name, ctfo_site_id, investigator_id, scenario_id, theme_id, survey_id, recipient_list FROM $$schema$$.log_scenario_survey_email_dtl $$where_clause$$ GROUP BY 3, 4, 5, 6, 7, 8, 9 ) AS log_scenario_survey_dtl ON survey_site_inv_details.scenario_id = log_scenario_survey_dtl.scenario_id AND survey_site_inv_details.theme_id = log_scenario_survey_dtl.theme_id AND survey_site_inv_details.ctfo_site_id = log_scenario_survey_dtl.ctfo_site_id AND survey_site_inv_details.investigator_id = log_scenario_survey_dtl.investigator_id AND survey_site_inv_details.investigator_email = log_scenario_survey_dtl.recipient_list LEFT JOIN ( SELECT survey_status, scenario_id, theme_id, survey_id FROM $$schema$$.f_rpt_user_scenario_survey_dtl $$where_clause$$ AND is_active = true AND survey_type = 'site_outreach' GROUP BY 1, 2, 3, 4 ) AS user_survey_dtl ON log_scenario_survey_dtl.scenario_id = user_survey_dtl.scenario_id AND log_scenario_survey_dtl.survey_id = user_survey_dtl.survey_id $$order_by_clause$$ $$order_type$$ $$limit_clause$$ $$offset_clause$$",
        "get_site_survey_outreach_data": "SELECT * FROM ( SELECT site_rank_filters.scenario_id AS scenario_id, site_rank_filters.theme_id AS theme_id, site_rank_filters.rank AS rank, site_rank_filters.ctfo_site_id AS ctfo_site_id, site_rank_filters.site_nm AS site_nm, site_rank_filters.site_country AS site_country, site_rank_filters.site_alias AS site_alias, site_rank_filters.site_alias_primary AS site_alias_primary, inves_ranking.ctfo_investigator_id AS ctfo_investigator_id, inves_ranking.investigator_first_name AS investigator_first_name, inves_ranking.investigator_last_name AS investigator_last_name, inves_ranking.investigator_full_nm AS investigator_full_nm, inves_ranking.investigator_phone AS investigator_phone, inves_ranking.investigator_email AS investigator_email, inves_ranking.similar_trials_experience AS similar_trials_experience, Row_number() OVER ( PARTITION BY site_rank_filters.ctfo_site_id ORDER BY inves_ranking.similar_trials_experience DESC NULLS LAST ) AS INV_RANK FROM ( SELECT site_rank.scenario_id AS scenario_id, site_rank.theme_id AS theme_id, site_rank.rank AS rank, site_rank.ctfo_site_id AS ctfo_site_id, site_rank.site_nm AS site_nm, site_rank.site_country AS site_country, site_rank.site_alias AS site_alias, site_rank.site_alias_primary AS site_alias_primary FROM ( SELECT scenario_id, theme_id, rank, ctfo_site_id, site_nm, site_country, site_alias, site_alias_primary FROM $$schema$$.f_rpt_scenario_site_ranking WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND survey_flag = true GROUP BY 1, 2, 3, 4, 5, 6, 7, 8 ) AS site_rank ) AS site_rank_filters LEFT JOIN ( SELECT ctfo_investigator_id, Substring( investigator_full_nm, '[^ ]+' :: TEXT ) AS investigator_first_name, Reverse( Split_part( Reverse(investigator_full_nm), ' ', 1 ) ) AS investigator_last_name, investigator_full_nm, investigator_phone, investigator_email, ctfo_site_id, similar_trials_experience FROM $$schema$$.f_rpt_scenario_highest_investigator WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY 1, 4, 5, 6, 7, 8 ) AS inves_ranking ON site_rank_filters.ctfo_site_id = inves_ranking.ctfo_site_id ) B WHERE inv_rank = 1",
        "check_old_site_outreach_data": "SELECT scenario_id, ctfo_site_id, site_nm, site_country, investigator_id, theme_id, is_active, max(last_updated_time) AS last_updated_time FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$'  AND theme_id = '$$theme_id$$'  AND is_active = 'false'  GROUP BY 1,2,3,4,5,6,7",
        "update_old_site_outreach_data": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET    is_active = true, survey_site_investigator_version = '$$survey_site_investigator_version$$', last_updated_by = '$$last_updated_by$$', last_updated_time = '$$last_updated_time$$' WHERE  scenario_id = '$$scenario_id$$' AND    theme_id = '$$theme_id$$' AND    is_active = false AND    site_country = %(site_country)s AND    site_nm = %(site_nm)s AND    ctfo_site_id = %(ctfo_site_id)s AND    investigator_id = %(investigator_id)s",
        "update_site_inv_outreach_data": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET include_in_trial = %(include_in_trials)s, patients_committed = %(patients_committed)s, enrollment_duration_committed = %(enrollment_duration_committed)s, reason_for_inclusion_exclusion = %(reason_for_inclusion_exclusion)s, survey_site_investigator_version = '$$survey_site_investigator_version$$', last_updated_by = '$$last_updated_by$$', last_updated_time = '$$last_updated_time$$', is_ecda = %(is_ecda)s, survey_id = %(survey_id)s WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND ctfo_site_id = %(ctfo_site_id)s AND investigator_id = %(ctfo_inv_id)s",
        "count_nos_sites": "SELECT count(site_nm) from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl $$where_clause$$ AND is_active = true",
        "update_curr_optimisation_flag": "UPDATE $$schema$$.f_rpt_scenario_site_ranking_temp SET curr_optimisation_flag = %(curr_optimisation_flag)s,include_exclude = %(include_exclude)s,survey_flag = %(survey_flag)s,site_alias = %(site_alias_name)s, site_alias_primary = %(site_alias_primary)s,updated_by ='$$user_id$$',updated_timestamp='$$updated_timestamp$$' WHERE scenario_id ='$$scenario_id$$' and theme_id='$$theme_id$$' and ctfo_site_id =%(ctfo_site_id)s and active_flag ='Y'",
        "get_site_inv_details": "select ctfo_investigator_id, ctfo_site_id, investigator_full_nm, rank, site_nm from( select rank, ctfo_site_id, site_nm, ctfo_investigator_id, investigator_full_nm, similar_trials_experience, theme_id, scenario_id, active_flag, row_number() OVER ( PARTITION BY ctfo_site_id ORDER BY similar_trials_experience DESC NULLS LAST, investigator_full_nm asc) AS inv_rank from $$schema$$.f_rpt_scenario_highest_investigator Where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y' $$search_condition$$ ) b where inv_rank = 1 order by rank asc ",
        "get_scenario_filter_query": "SELECT therapeutic_area,indication,phase from $$schema$$.f_rpt_scenario_stdy_sumry WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y'",
        "site_data_sync_false_flag_query": "SELECT site_survey_dtl.rank AS rank, site_survey_dtl.survey_id AS survey_id, site_survey_dtl.scenario_id AS scenario_id, site_survey_dtl.ctfo_site_id AS ctfo_site_id, site_survey_dtl.site_nm AS site_nm, site_survey_dtl.site_country AS site_country, site_survey_dtl.investigator_id AS investigator_id, site_survey_dtl.investigator_first_name AS investigator_first_name, site_survey_dtl.investigator_last_name AS investigator_last_name, site_survey_dtl.investigator_name AS investigator_name, site_survey_dtl.investigator_email AS investigator_email, site_survey_dtl.investigator_phone AS investigator_phone, TEMP.similar_trials_experience AS similar_trials_experience, site_survey_dtl.theme_id AS theme_id, site_survey_dtl.is_active AS is_active, site_survey_dtl.last_updated_time AS last_updated_time, site_survey_dtl.survey_site_investigator_version AS survey_site_investigator_version FROM ( SELECT * FROM ( SELECT site_rank_filters.rank AS rank, site_rank_filters.scenario_id AS scenario_id, site_rank_filters.ctfo_site_id AS ctfo_site_id, site_rank_filters.site_nm AS site_nm, site_rank_filters.site_country AS site_country, inv_rank.ctfo_investigator_id AS investigator_id, inv_rank.investigator_first_name AS investigator_first_name, inv_rank.investigator_last_name AS investigator_last_name, inv_rank.investigator_full_nm AS investigator_full_nm, inv_rank.investigator_email AS investigator_email, inv_rank.investigator_phone AS investigator_phone, inv_rank.similar_trials_experience AS similar_trials_experience, site_rank_filters.theme_id AS theme_id, Row_number() OVER ( PARTITION BY site_rank_filters.ctfo_site_id ORDER BY inv_rank.similar_trials_experience DESC NULLS LAST ) AS inv_rank FROM ( SELECT site_rank.scenario_id AS scenario_id, site_rank.theme_id AS theme_id, site_rank.rank AS rank, site_rank.ctfo_site_id AS ctfo_site_id, site_rank.site_nm AS site_nm, site_rank.site_country AS site_country FROM ( SELECT rank, site_nm, site_country, ctfo_site_id, scenario_id, theme_id FROM $$schema$$.f_rpt_scenario_site_ranking WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND survey_flag = true GROUP BY 1, 2, 3, 4, 5, 6 ORDER BY site_country ) AS site_rank ) AS site_rank_filters LEFT JOIN ( SELECT ctfo_investigator_id, substring( investigator_full_nm, '[^ ]+' :: TEXT ) AS investigator_first_name, reverse( split_part( reverse(investigator_full_nm), ' ', 1 ) ) AS investigator_last_name, investigator_full_nm, investigator_phone, investigator_email, similar_trials_experience, ctfo_site_id, theme_id, scenario_id FROM $$schema$$.f_rpt_scenario_highest_investigator WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY 1, 4, 5, 6, 7, 8, 9, 10 ) AS inv_rank ON site_rank_filters.ctfo_site_id = inv_rank.ctfo_site_id ) AS tmp WHERE inv_rank = 1 ) TEMP INNER JOIN ( SELECT * FROM ( SELECT rank, scenario_id, scenario_version, survey_id, survey_version, survey_site_investigator_version, ctfo_site_id, site_nm, site_country, investigator_id, investigator_first_name, investigator_last_name, investigator_name, investigator_email, investigator_phone, is_active, theme_id, last_updated_time, row_number() OVER ( PARTITION BY ctfo_site_id, site_nm ORDER BY survey_site_investigator_version DESC ) AS ra FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' ) a WHERE ra = 1 ) AS site_survey_dtl ON TEMP.ctfo_site_id = site_survey_dtl.ctfo_site_id AND TEMP.rank = site_survey_dtl.rank WHERE site_survey_dtl.is_active IS false",
        "site_data_sync_true_flag_query": "SELECT site_survey_dtl.rank AS rank, site_survey_dtl.scenario_id AS scenario_id, site_survey_dtl.ctfo_site_id AS ctfo_site_id, site_survey_dtl.site_nm AS site_nm, site_survey_dtl.site_country AS site_country, site_survey_dtl.investigator_id AS investigator_id, site_survey_dtl.investigator_first_name AS investigator_first_name, site_survey_dtl.investigator_last_name AS investigator_last_name, site_survey_dtl.investigator_name AS investigator_name, site_survey_dtl.investigator_email AS investigator_email, site_survey_dtl.investigator_phone AS investigator_phone, TEMP.similar_trials_experience AS similar_trials_experience, site_survey_dtl.theme_id AS theme_id, site_survey_dtl.is_active AS is_active, site_survey_dtl.last_updated_time AS last_updated_time, site_survey_dtl.survey_site_investigator_version AS survey_site_investigator_version FROM ( SELECT * FROM ( SELECT site_rank_filters.rank AS rank, site_rank_filters.scenario_id AS scenario_id, site_rank_filters.ctfo_site_id AS ctfo_site_id, site_rank_filters.site_nm AS site_nm, site_rank_filters.site_country AS site_country, inv_rank.ctfo_investigator_id AS investigator_id, inv_rank.investigator_first_name AS investigator_first_name, inv_rank.investigator_last_name AS investigator_last_name, inv_rank.investigator_full_nm AS investigator_full_nm, inv_rank.investigator_email AS investigator_email, inv_rank.investigator_phone AS investigator_phone, inv_rank.similar_trials_experience AS similar_trials_experience, site_rank_filters.theme_id AS theme_id, Row_number() OVER ( PARTITION BY site_rank_filters.ctfo_site_id ORDER BY inv_rank.similar_trials_experience DESC ) AS inv_rank FROM ( SELECT site_rank.scenario_id AS scenario_id, site_rank.theme_id AS theme_id, site_rank.rank AS rank, site_rank.ctfo_site_id AS ctfo_site_id, site_rank.site_nm AS site_nm, site_rank.site_country AS site_country FROM ( SELECT rank, site_nm, site_country, ctfo_site_id, scenario_id, theme_id FROM $$schema$$.f_rpt_scenario_site_ranking WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND survey_flag = false GROUP BY 1, 2, 3, 4, 5, 6 ORDER BY site_country ) AS site_rank ) AS site_rank_filters LEFT JOIN ( SELECT ctfo_investigator_id, substring( investigator_full_nm, '[^ ]+' :: TEXT ) AS investigator_first_name, reverse( split_part( reverse(investigator_full_nm), ' ', 1 ) ) AS investigator_last_name, investigator_full_nm, investigator_phone, investigator_email, ctfo_site_id, similar_trials_experience, theme_id, scenario_id FROM $$schema$$.f_rpt_scenario_highest_investigator WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY 1, 4, 5, 6, 7, 8, 9, 10 ) AS inv_rank ON site_rank_filters.ctfo_site_id = inv_rank.ctfo_site_id ) AS tmp WHERE inv_rank = 1 ) TEMP INNER JOIN ( SELECT * FROM ( SELECT rank, scenario_id, scenario_version, survey_id, survey_version, survey_site_investigator_version, ctfo_site_id, site_nm, site_country, investigator_id, investigator_first_name, investigator_last_name, investigator_name, investigator_email, investigator_phone, is_active, theme_id, last_updated_time, row_number() OVER ( PARTITION BY ctfo_site_id, site_nm ORDER BY survey_site_investigator_version DESC ) AS ra FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' ) a WHERE ra = 1 ) AS site_survey_dtl ON TEMP.ctfo_site_id = site_survey_dtl.ctfo_site_id AND TEMP.rank = site_survey_dtl.rank WHERE site_survey_dtl.is_active IS true",
        "site_data_sync_update_false_flag_query": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET is_active = true, last_updated_by = '$$last_updated_by$$', last_updated_time = '$$last_updated_time$$', survey_site_investigator_version = '$$survey_site_investigator_version$$' $$survey_condition$$ WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = false AND ctfo_site_id = '$$ctfo_site_id$$' AND $$inv_placeholder$$ AND survey_site_investigator_version = '$$survey_site_investigator_version_old$$'",
        "site_data_sync_update_true_flag_query": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET is_active = false, last_updated_by = '$$last_updated_by$$', last_updated_time = '$$last_updated_time$$', survey_site_investigator_version = '$$survey_site_investigator_version$$' WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND ctfo_site_id = '$$ctfo_site_id$$' AND $$inv_placeholder$$ AND survey_site_investigator_version = (SELECT max(survey_site_investigator_version) FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND ctfo_site_id = '$$ctfo_site_id$$' AND $$inv_placeholder$$)",
        "update_curr_optimisation_flag_all": "UPDATE $$schema$$.f_rpt_scenario_site_ranking_temp SET $$set_condition$$ ,updated_by ='$$user_id$$',updated_timestamp='$$updated_timestamp$$' WHERE scenario_id ='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag ='Y'",
        "site_inv_check": "SELECT ctfo_investigator_id,investigator_full_nm,investigator_country,similar_trials_experience FROM  $$schema$$.f_rpt_scenario_investigator_ranking_optimized WHERE scenario_id = '$$scenario_id$$' AND theme_id ='$$theme_id$$' AND active_flag = 'Y'",
        "update_site_flag": "UPDATE $$schema$$.$$table$$ SET curr_optimisation_flag = %(include_in_trials)s,include_exclude = %(include_exclude)s,updated_by ='$$user_id$$',updated_timestamp='$$updated_timestamp$$' WHERE scenario_id ='$$scenario_id$$' and theme_id='$$theme_id$$' and ctfo_site_id =%(ctfo_site_id)s and active_flag ='Y'",
        "get_country_head_mail_data": "SELECT country_head_name, country_head_email, standard_country FROM $$schema_reporting$$.f_rpt_study_country_details WHERE study_code = '$$study_code$$' AND standard_country $$country_condition$$ GROUP BY 1,2,3 ORDER BY standard_country",
        "updating_smry_is_generated" : "update $$schema$$.f_rpt_scenario_stdy_sumry set is_outreach_generated=$$flag$$, updated_by='$$user$$', updated_timestamp='$$timestamp$$' where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y'",
        "update_site_outreach_alias": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET site_alias = %(site_alias_name)s, site_alias_primary = %(site_alias_primary)s ,last_updated_by ='$$user_id$$',last_updated_time='$$updated_timestamp$$' WHERE scenario_id ='$$scenario_id$$' and theme_id='$$theme_id$$' and ctfo_site_id =%(ctfo_site_id)s and is_active=true",
        "max_inv_list_id": "select max(inv_list_id) as inv_list_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$'",
        "max_site_list_id": "select max(site_list_id) as site_list_id from $$schema$$.f_rpt_scenario_site_ranking_temp WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$'",
        "get_site_highest_inv_details": "WITH setup_filter AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ GROUP BY 1), filter_trial AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$age$$ $$gender$$ $$drug_status$$ $$drug_names$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ), site_study_detail AS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_Details WHERE ( trial_start_dt >= '$$trial_universe_start_date$$' AND trial_start_dt <= '$$trial_universe_end_date$$' ) OR trial_start_dt IS NULL GROUP BY 1 ), filter_site_inv AS ( SELECT ctfo_site_id, ctfo_trial_id, ctfo_investigator_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE ctfo_investigator_id IS NOT NULL ), name_ct AS ( SELECT * FROM filter_site_inv inv INNER JOIN setup_filter a ON a.ctfo_trial_id = inv.ctfo_trial_id INNER JOIN filter_trial b ON b.ctfo_trial_id = inv.ctfo_trial_id INNER JOIN site_study_detail sd ON sd.ctfo_trial_id = inv.ctfo_trial_id ) INSERT into $$schema$$.f_rpt_scenario_highest_investigator ( SELECT rank, ctfo_site_id, site_nm, max(ctfo_investigator_id) AS ctfo_investigator_id, max(investigator_full_nm) AS investigator_full_nm, similar_trials_experience, investigator_email, investigator_phone, NULL as salutation, NULL as ctfo_inv_email_secondary, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, '$$active_flag$$' AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT site_filter_inv_all.rank AS rank, site_filter_inv_all.ctfo_site_id AS ctfo_site_id, site_nm, site_filter_inv_all.site_country AS site_country, site_filter_inv_all.ctfo_investigator_id AS ctfo_investigator_id, site_filter_inv_all.investigator_full_nm AS investigator_full_nm, site_filter_inv_all.similar_trials_experience AS similar_trials_experience, site_filter_inv_all.investigator_email, site_filter_inv_all.investigator_phone, row_number() OVER ( PARTITION BY site_filter_inv_all.ctfo_site_id, ctfo_investigator_id IS NOT NULL ORDER BY site_filter_inv_all.similar_trials_experience DESC ) AS inv_rank FROM ( SELECT site_optimized_filters.rank AS rank, site_optimized_filters.ctfo_site_id AS ctfo_site_id, site_nm, site_optimized_filters.site_country AS site_country, inves_ranking_optimized.ctfo_investigator_id AS ctfo_investigator_id, inves_ranking_optimized.investigator_full_nm AS investigator_full_nm, inves_ranking_optimized.similar_trials_experience AS similar_trials_experience, email.investigator_email, email.investigator_phone FROM ( SELECT site_optimized.rank AS rank, site_optimized.ctfo_site_id AS ctfo_site_id, site_nm, site_optimized.site_country AS site_country, name_ct.ctfo_investigator_id AS ctfo_investigator_id FROM ( SELECT rank, ctfo_site_id, site_nm, site_country FROM $$schema$$.$$sitetable$$ WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' $$site_id_condition$$ GROUP BY 1, 2, 3, 4 ) AS site_optimized LEFT JOIN name_ct ON site_optimized.ctfo_site_id = name_ct.ctfo_site_id GROUP BY 1, 2, 3, 4, 5 ) AS site_optimized_filters LEFT JOIN ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_country, similar_trials_experience FROM $$schema$$.$$invtable$$ WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' $$inv_id_condition$$ GROUP BY 1, 2, 3, 4 ) AS inves_ranking_optimized ON site_optimized_filters.ctfo_investigator_id = inves_ranking_optimized.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_trial_id, ctfo_site_id, ctfo_investigator_id, investigator_email,investigator_phone FROM $$schema_reporting$$.f_rpt_investigator_site_study_Details WHERE ( trial_start_dt >= '$$trial_universe_start_date$$' AND trial_start_dt <= '$$trial_universe_end_date$$' ) OR trial_start_dt IS NULL GROUP BY 1, 2, 3, 4,5 ) AS email ON site_optimized_filters.ctfo_investigator_id = email.ctfo_investigator_id ) site_filter_inv_all ) B WHERE true GROUP BY 1, 2, 3, 6, 7,8,9,10 ORDER BY rank ) "
      },
      "fetch_filters": "select distinct case when $$column$$ is NULL then '' else $$column$$ end from $$schema_reporting$$.f_rpt_filters  $$where_clause$$ order by $$column$$",
      "fetch_scenario_filters": "SELECT a.scenario_id, a.theme_id, a.protocol_id, a.nct_trial_id, a.study_name, a.scenario_name, a.therapeutic_area, a.indication, a.phase, a.qualtrics_user, a.description, a.duration, a.no_of_sites, a.no_of_patients, a.study_code, a.trial_universe_start_date, a.trial_universe_end_date, a.multi_cohort_flag, a.no_of_cohort_groups, a.qualtrics_user, b.filter_criteria_json, a.manual_mail_subject FROM $$schema$$.f_rpt_scenario_stdy_sumry a LEFT OUTER JOIN $$schema$$.f_rpt_scenario_stdy_criteria b ON a.theme_id = b.theme_id AND a.scenario_id = b.scenario_id AND a.active_flag = b.active_flag WHERE a.theme_id = '$$theme_id$$' AND a.scenario_id = '$$scenario_id$$' AND a.active_flag = 'Y' ",
      "fetch_cohort_scenario": "SELECT cohort_id as cohort_no ,cohort_name ,no_of_patients ,no_of_sites ,last_patient_in ,recruitment_duration FROM $$schema$$.f_rpt_cohort_scenario_stdy_sumry WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND active_flag = 'Y'",
      "save_scenario_filters": "insert into $$schema$$.f_rpt_scenario_stdy_criteria (select '$$new_scenario_id$$' as scenario_id, theme_id, filter_criteria_json, created_by, created_timestamp, updated_by, updated_timestamp, version, active_flag from $$schema$$.f_rpt_scenario_stdy_criteria where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag='Y')",
      "narrow_results": {
        "narrow_results_site": "select distinct $$search_field$$ from $$schema$$.$$table_name where $$cascading$$ site_list_id = '$$listid$$' and  theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y' and $$search_field$$ is not null limit $$limit$$ offset $$offset$$  ",
        "narrow_results_country": "select distinct $$search_field$$ from $$schema$$.$$table_name where $$cascading$$ country_list_id = '$$listid$$' and theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y' and $$search_field$$ is not null limit $$limit$$ offset $$offset$$",
        "narrow_results_inv": "select distinct $$search_field$$  from $$schema$$.$$table_name where $$cascading$$ inv_list_id = '$$listid$$' and theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y' and $$search_field$$ is not null limit $$limit$$ offset $$offset$$",
        "tags_query": "select distinct tags from $$schema$$.$$table_name where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y'",
        "narrow_result_country_outreach_query": "select distinct $$search_field$$ from $$schema$$.$$table_name where $$cascading$$ theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y' and $$search_field$$ is not null and active_flag = 'Y' and country in ( select distinct country_name from $$schema$$.f_rpt_user_scenario_survey_country_dtl where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_active) limit $$limit$$ offset $$offset$$",
        "narrow_result_site_outreach_query": "select distinct $$search_field$$ from $$schema$$.$$table_name where $$cascading$$ theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y' and $$search_field$$ is not null and active_flag = 'Y' and rank in ( select distinct rank from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_active ) limit $$limit$$ offset $$offset$$",
        "outreach_tag_query": "select distinct tags from $$schema$$.$$table_name where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_saved = 'Y' and active_flag = 'Y' and rank in ( select distinct rank from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and is_active )"
      },
      "site_detail_queries": {
        "get_investigator_list_id_query": "select max(inv_list_id) from $$schema$$.$$table_name where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
        "fetch_affiliated_investigators_details": "With fs0 as( select ctfo_investigator_id from $$schema$$.f_rpt_scenario_highest_investigator where ctfo_site_id = '$$ctfo_site_id$$' AND scenario_id = '$$scenario_id$$' AND active_flag = 'Y' ) SELECT inv_list_id, version, row_number() OVER( ORDER BY rank ) AS investigator_rank, ctfo_investigator_id, investigator_full_nm AS investigator_name, investigator_specialty, investigator_address, split_part(investigator_phone, '|', '1') AS investigator_contact, investigator_city, investigator_state, investigator_country, country_code, region, total_trials_all_ta, enrollment_rate_median AS enroll_rate, screen_failure_rate_median AS screen_failure_rate, similar_trials_experience, disease_experience_years AS disease_experience, recentness_of_activity AS recent_trials, years_of_experience, ta_experience_years, current_workload, completed_trials, sponsor_experience, phase_experience, similar_drug_experience, tier_score AS investigator_tier_score, global_tier AS investigator_tier, local_tier AS country_tier, theme_id, scenario_id, created_by, updated_by, active_flag, created_timestamp, updated_timestamp FROM $$schema$$.$$table_name WHERE ctfo_investigator_id IN ( SELECT fs0.ctfo_investigator_id FROM fs0 GROUP BY 1 ) AND theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$investigator_list_id$$' AND version = ( SELECT max(version) FROM $$schema$$.$$table_name WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$investigator_list_id$$' AND active_flag = 'Y' ) AND active_flag = 'Y' ORDER BY investigator_rank limit $$limit$$ offset $$offset$$",
        "fetch_scenario_details": "select distinct scenario_id, theme_id from $$schema$$.f_rpt_scenario_site_ranking where active_flag = 'Y' and ctfo_site_id = '$$ctfo_site_id$$' and site_nm = '$$site_nm$$'",
        "site_profile_query": "SELECT first_trial_start_date, last_trial_start_date, matching_inv, matching_trials, aa.site_address, aa.site_city, aa.site_country, aa.site_name, supported_url, therapeutic_area, total_inv, total_trials, coalesce(aa.site_zip_code, bb.site_zip_code) as site_zip_code from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_site_profile aa LEFT JOIN $$schema$$.f_rpt_scenario_site_ranking_temp bb ON bb.ctfo_site_id = aa.ctfo_site_id where aa.theme_id = '$$theme_id$$' and aa.scenario_id = '$$scenario_id$$' and aa.active_flag = True and aa.ctfo_site_id = '$$ctfo_site_id$$' and aa.site_name = '$$site_name$$' order by bb.site_zip_code desc nulls last limit 1 ",
        "sponsor_query": "select sponsor, sponsor_last_trial_start_date, sponsor_total_trials from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_sponsor_experience where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_site_id = '$$ctfo_site_id$$' and site_nm = '$$site_name$$' ",
        "trial_trends_query": "select total_trials, trial_year from $$schema$$.f_rpt_site_flyout_non_affiliated_investigators_trial_trend where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_site_id = '$$ctfo_site_id$$'",
        "trial_info_query": "select ctfo_trial_id, randomization_rate, study_name, total_recruitment_months, trial_end_dt, trial_start_dt, trial_status from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_trials_information where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_site_id = '$$ctfo_site_id$$' ORDER BY trial_start_dt DESC NULLS LAST ",
        "insert_sponsor_query": "with fs1 as( select distinct site_nm, ctfo_site_id from $$schema$$.f_rpt_scenario_site_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y') INSERT into $$schema$$.f_rpt_site_flyout_non_affiliated_inv_sponsor_experience( SELECT fs.ctfo_site_id, coalesce(sponsor, 'Other') AS sponsor, max(trial_start_dt) AS sponsor_last_trial_start_date, count(DISTINCT ctfo_trial_id) AS sponsor_total_trials, fs.site_nm, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, '$$active_flag$$' AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT unnest( string_to_array(sponsor, '|') ) AS sponsor, trial_start_dt, ctfo_trial_id, ctfo_site_id, site_nm FROM $$schema_reporting$$.f_rpt_site_study_details stn WHERE (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id ) AND pt_cycle_id = '$$pt_cycle_id$$' ) aa LEFT JOIN fs1 fs ON fs.ctfo_site_id = aa.ctfo_site_id GROUP BY 1, 2, fs.site_nm ) ",
        "insert_site_profile_query": "with fs1 as( select distinct site_nm, ctfo_site_id from $$schema$$.f_rpt_scenario_site_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_site_flyout_non_affiliated_inv_site_profile( SELECT site_attr.site_nm AS site_name, site_attr.ctfo_site_id, site_attr.site_country, site_attr.site_address, site_attr.site_city, matching_trials, total_trials, site_supporting_urls AS supported_url, matching_inv, total_inv, first_trial_start_date, last_trial_start_date, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, '$$active_flag$$' AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp, ARRAY_TO_STRING( array_agg(DISTINCT therapeutic_area), ',' ) AS therapeutic_area FROM( SELECT ctfo_site_id, site_address, site_nm, site_country, site_city, count(DISTINCT ctfo_trial_id) AS matching_trials, site_supporting_urls FROM $$schema_reporting$$.f_rpt_site_study_details Where ctfo_site_id IN ( SELECT ctfo_site_id FROM fs1 ) AND (ctfo_trial_id, ctfo_site_id) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id ) AND pt_cycle_id = '$$pt_cycle_id$$' GROUP BY ctfo_site_id, site_nm, site_country, site_city, site_address, site_supporting_urls ) site_attr LEFT OUTER JOIN ( SELECT ctfo_site_id, site_nm, site_country, site_city, count(DISTINCT ctfo_trial_id) AS total_trials, min(trial_start_dt) AS first_trial_start_date, max(trial_start_dt) AS last_trial_start_date FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_trial_id) IN ( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial trial INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE True GROUP BY ps.ctfo_trial_id ) GROUP BY ctfo_site_id, site_nm, site_country, site_city ) site_total ON site_total.ctfo_site_id = site_attr.ctfo_site_id LEFT OUTER JOIN ( SELECT ctfo_site_id, count(DISTINCT ctfo_investigator_id) AS matching_inv, therapeutic_area FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON geo.ctfo_trial_id = ps.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON ps.ctfo_trial_id = trial.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ GROUP BY 1, 3 ) investigator_count ON investigator_count.ctfo_site_id = site_attr.ctfo_site_id LEFT OUTER JOIN ( SELECT ctfo_site_id, count(DISTINCT ctfo_investigator_id) AS total_inv FROM $$schema_reporting$$.f_rpt_filters_site_inv geo WHERE True GROUP BY 1 ) investigator_total ON investigator_total.ctfo_site_id = investigator_count.ctfo_site_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ) ",
        "insert_trial_trends_query": "with fs1 as( select distinct site_nm, ctfo_site_id from $$schema$$.f_rpt_scenario_site_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag ='Y') INSERT INTO $$schema$$.f_rpt_site_flyout_non_affiliated_investigators_trial_trend ( SELECT ctfo_site_id, count(DISTINCT ctfo_trial_id) AS total_trials ,date_part('year', trial_start_dt)::INT AS trial_year, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, '$$active_flag$$' AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_site_study_details WHERE ( ctfo_trial_id ,ctfo_site_id ) IN ( SELECT ps.ctfo_trial_id ,geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE True and $$filter_conditions$$ AND geo.ctfo_site_id IN ( SELECT ctfo_site_id FROM fs1 ) GROUP BY ps.ctfo_trial_id ,geo.ctfo_site_id ) AND pt_cycle_id = '$$pt_cycle_id$$' AND date_part('year', trial_start_dt) >= '2000' GROUP BY trial_year, ctfo_site_id ) ",
        "insert_trial_info_query": "WITH fs1 AS( SELECT DISTINCT site_nm ,ctfo_site_id FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_site_flyout_non_affiliated_inv_trials_information ( SELECT ctfo_site_id ,ctfo_trial_id ,trial_start_dt ,trial_status ,randomization_rate ,total_recruitment_months ,trial_end_dt ,study_name ,'$$theme_id$$' AS theme_id ,'$$scenario_id$$' AS scenario_id ,True AS active_flag ,'$$created_by$$' AS created_by ,'$$created_timestamp$$' AS created_timestamp ,'$$updated_by$$' AS updated_by ,'$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_site_study_details WHERE pt_cycle_id = '$$pt_cycle_id$$' AND ( ctfo_trial_id ,ctfo_site_id ) IN ( SELECT ps.ctfo_trial_id ,geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE True AND $$filter_conditions$$ GROUP BY ps.ctfo_trial_id ,geo.ctfo_site_id ) and ctfo_site_id in ( select ctfo_site_id from fs1 ) )",
        "delete_site_profile": "Delete from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_site_profile where theme_id = '$$theme_id$$'",
        "delete_trial_trends": "Delete from $$schema$$.f_rpt_site_flyout_non_affiliated_investigators_trial_trend where theme_id = '$$theme_id$$'",
        "delete_trial_info": "Delete from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_trials_information where theme_id = '$$theme_id$$'",
        "delete_sponsor": "Delete from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_sponsor_experience where theme_id = '$$theme_id$$'",
        "count_site_profile_query" : "select count(ctfo_site_id) from $$schema$$.f_rpt_site_flyout_non_affiliated_inv_site_profile where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True"
      },
      "site_ranking_map_view_details": {
        "site_ranking_map_count_query": "SELECT site_country, country_code, count(distinct ctfo_site_id) as site_count from $$schema$$.$$table$$ where site_list_id = '$$site_list_id$$' and theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by theme_id, scenario_id, site_country, country_code;",
        "site_ranking_investigator_count_query": "SELECT foo.country as country, foo.country_code as country_code, foo.site_name as site_name, foo.investigator_count as investigator_count FROM (SELECT A.site_country as country, A.country_code as country_code, A.site_nm as site_name, A.theme_id as theme_id, A.scenario_id as scenario_id, count(distinct B.ctfo_investigator_id) as investigator_count from $$schema$$.$$table$$ A inner join $$schema_reporting$$.f_rpt_investigator_site_study_details B on A.ctfo_site_id = B.ctfo_site_id where A.site_list_id = '$$site_list_id$$' and A.theme_id = '$$theme_id$$' and A.scenario_id = '$$scenario_id$$' group by A.theme_id, A.scenario_id, A.site_country, A.site_nm, A.country_code) foo order by country limit $$limit$$ offset $$offset$$;"
      },
      "country_ranking_map_view_details": {
        "country_ranking_fetch_query": "SELECT country as country_name, country_code from $$schema$$.$$table_name where country_list_id = '$$country_list_id$$' and theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$';",
        "country_ranking_map_count_query": "select country_code, site_country as country_name, count(distinct ctfo_trial_id) as number_of_trials from $$schema_reporting$$.$$study_details_table_name where (ctfo_site_id, ctfo_trial_id) in (select ctfo_site_id, ctfo_trial_id from $$schema_reporting$$.$$filter_table_name where $$filter_conditions group by ctfo_site_id, ctfo_trial_id) and (site_country, country_code) in (select country, country_code from $$schema$$.$$country_ranking_table_name where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and country_list_id = '$$country_list_id$$') group by country_code, site_country;",
        "summary_criteria_join_query": "select a.theme_id, a.scenario_id, a.therapeutic_area, a.indication as disease, a.phase, a.no_of_sites, b.filter_criteria_json from $$schema$$.f_rpt_scenario_stdy_sumry a left outer join $$schema$$.f_rpt_scenario_stdy_criteria b on a.theme_id = b.theme_id and a.scenario_id = b.scenario_id and a.active_flag = b.active_flag where a.theme_id = '$$theme_id$$' and a.scenario_id='$$scenario_id$$' and a.active_flag = 'Y'"
      },
      "save_constraints_details": {
        "save_constraints_and_configs_query": "insert into $$schema$$.f_rpt_optimizer_dtl(theme_id, scenario_id, site_list_id, filter_constraints_json, region_config_json, country_config_json, version, active_flag) values('$$theme_id$$', '$$scenario_id$$', '$$site_list_id$$', '$$filter_constraints_json$$', '$$region_config_json$$', '$$country_config_json$$', '$$version$$', '$$active_flag$$');",
        "filter_constraints_fetch_query": "select * from $$schema$$.f_rpt_filter_constraints_optimizer_dtl where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$';",
        "filter_constraints_insert_query": "insert into $$schema$$.f_rpt_filter_constraints_optimizer_dtl(theme_id, scenario_id, site_list_id, cta_date, max_lsr_date, target_enrl_subject, min_site_country, max_lsi_date, max_site_required, min_threshold_enrolled_subjects, max_site_country, version, active_flag) values('$$theme_id$$', '$$scenario_id$$', '$$site_list_id$$', '$$cta_date$$', '$$max_lsr_date$$', $$target_enrl_subject$$, $$min_site_country$$, '$$max_lsi_date$$', $$max_site_required$$, $$min_threshold_enrolled_subjects$$, $$max_site_country$$, '$$version$$', '$$active_flag$$')",
        "region_update_records_query": "UPDATE $$schema$$.f_rpt_region_optimizer_dtl SET region = '$$region$$', region_cd = '$$region_cd$$', min_subject_pct = $$min_subject_pct$$, max_subject_pct = $$max_subject_pct$$, include_exclude = '$$include_exclude$$', reason = '$$reason$$', comment = '$$comment$$', version = '$$version$$', active_flag = 'Y', created_by = '$$created_by$$', updated_by = '$$updated_by$$', created_timestamp = '$$created_timestamp$$', updated_timestamp = '$$updated_timestamp$$' where theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' and region = '$$region$$' and region_cd = '$$region_cd$$'",
        "region_update_all_active_flag_to_n_query": "UPDATE $$schema$$.f_rpt_region_optimizer_dtl SET active_flag = 'N' WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$'",
        "filter_constraints_update_query": "update $$schema$$.f_rpt_filter_constraints_optimizer_dtl set active_flag = 'N' where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$';",
        "region_configs_fetch_query": "select * from $$schema$$.f_rpt_region_optimizer_dtl where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and region = '$$region_name$$';",
        "region_configs_insert_query": "insert into $$schema$$.f_rpt_region_optimizer_dtl(theme_id, scenario_id, site_list_id, region, region_cd, min_subject_pct, max_subject_pct, include_exclude, reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) values('$$theme_id$$', '$$scenario_id$$', '$$site_list_id$$', '$$region$$', '$$region_cd$$', $$min_subject_pct$$, $$max_subject_pct$$, '$$include_exclude$$', '$$reason$$', '$$comment$$', '$$version$$', '$$active_flag$$', '$$created_by$$', '$$created_timestamp$$', '$$updated_by$$', '$$updated_timestamp$$');",
        "region_configs_update_query": "update $$schema$$.f_rpt_region_optimizer_dtl set active_flag = 'N' where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and region = '$$region_name$$';",
        "country_update_all_active_flag_to_n_query": "UPDATE $$schema$$.f_rpt_country_optimizer_dtl SET active_flag = 'N' WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$'",
        "country_update_records_query": "UPDATE $$schema$$.f_rpt_country_optimizer_dtl SET country = '$$country$$', country_code = '$$country_cd$$', enroll_rate_adj_fctr = $$enroll_rate_adj_fctr$$, min_act_site_duration = $$min_act_site_duration$$, min_subject_pct = $$min_subject_pct$$, max_subject_pct = $$max_subject_pct$$, expctd_pct_subject_range = $$expctd_pct_subject_range$$, min_site_count = $$min_site_count$$, max_site_count = $$max_site_count$$, include_exclude = '$$include_exclude$$', reason = '$$reason$$', comment = '$$comment$$', version = '$$version$$', active_flag = 'Y', created_by = '$$created_by$$', updated_by = '$$updated_by$$', created_timestamp = '$$created_timestamp$$', updated_timestamp = '$$updated_timestamp$$' where theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' and country = '$$country$$' and country_code = '$$country_cd$$'",
        "site_configs_update_query": "update $$schema$$.f_rpt_scenario_site_ranking set reason = '$$reason$$', comment = '$$comment$$', include_exclude = '$$include_exclude$$' where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and ctfo_site_id = '$$ctfo_site_id$$';"
      },
      "add_delete_site_post_optimization_details": {
        "fetch_site_post_optimization_query_add": "select * from $$schema$$.$$table_name$$ where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$';",
        "update_site_post_optimization_query_add": "update $$schema$$.$$table_name$$ set active_flag = 'N' where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$';",
        "fetch_site_post_optimization_query": "select * from $$schema$$.$$table_name$$ where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and ctfo_site_id = '$$ctfo_site_id$$' and site_nm = '$$site_nm$$' and site_country = '$$site_country$$';",
        "insert_site_post_optimization_query_add": "insert into $$schema$$.$$table_name$$ (site_list_id, version, rank, ctfo_site_id, site_nm, site_address, site_city , site_state, site_country, country_code, region, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, tier_score, global_tier, country_tier, theme_id, scenario_id, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, include_exclude, reason , comment, site_inclusion_flag) values('$$site_list_id$$', '$$version$$', NULL, '$$ctfo_site_id$$', '$$site_nm$$', NULL, NULL, NULL, '$$site_country$$', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '$$theme_id$$', '$$scenario_id$$', NULL, NULL, 'Y', NULL, NULL, NULL, NULL, NULL, 'Y');",
        "insert_site_post_optimization_query": "insert into $$schema$$.$$table_name$$ (site_list_id, version, rank, ctfo_site_id, site_nm, site_address, site_city , site_state, site_country, country_code, region, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, tier_score, global_tier, country_tier, theme_id, scenario_id, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, include_exclude, reason , comment, site_inclusion_flag) values('$$site_list_id$$', '$$version$$', NULL, '$$ctfo_site_id$$', '$$site_nm$$', NULL, NULL, NULL, '$$site_country$$', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '$$theme_id$$', '$$scenario_id$$', NULL, NULL, 'Y', NULL, NULL, NULL, NULL, NULL, 'N');",
        "update_site_post_optimization_query": "update $$schema$$.$$table_name$$ set active_flag = 'N' where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and ctfo_site_id = '$$ctfo_site_id$$' and site_nm = '$$site_nm$$' and site_country = '$$site_country$$';"
      },
      "summary_queries": {
        "site_country_query": "select site_country,country_code,count(distinct(case when Global_tier ='1' then ctfo_site_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_site_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_site_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_site_id  end)) as Tier_4,count(distinct(ctfo_site_id)) as total_sites from $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by site_country, country_code LIMIT  $$limit$$ offset $$offset$$;",
        "site_region_query": "select region,count(distinct(case when Global_tier ='1' then ctfo_site_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_site_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_site_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_site_id  end)) as Tier_4,count(distinct(ctfo_site_id)) as total_sites from $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and region is NOT NULL group by region LIMIT  $$limit$$ offset $$offset$$;",
        "inv_country_query": "select investigator_country,country_code,count(distinct(case when Global_tier ='1' then a.ctfo_investigator_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then a.ctfo_investigator_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then a.ctfo_investigator_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then a.ctfo_investigator_id  end)) as Tier_4,count(distinct(a.ctfo_investigator_id)) as total_pi from $$schema$$.f_rpt_scenario_investigator_ranking_temp  a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by investigator_country, country_code LIMIT  $$limit$$ offset $$offset$$;",
        "inv_region_query": "select region,count(distinct(case when Global_tier ='1' then ctfo_investigator_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_investigator_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_investigator_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_investigator_id  end)) as Tier_4,count(distinct(ctfo_investigator_id)) as total_pi from $$schema$$.f_rpt_scenario_investigator_ranking_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and region is NOT NULL group by region LIMIT  $$limit$$ offset $$offset$$;",
        "site_country_query_optimized": "select site_country,country_code,count(distinct(case when Global_tier ='1' then ctfo_site_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_site_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_site_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_site_id  end)) as Tier_4,count(distinct(ctfo_site_id)) as total_sites from $$schema$$.f_rpt_scenario_site_ranking_optimized_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by site_country, country_code LIMIT  $$limit$$ offset $$offset$$;",
        "site_region_query_optimized": "select region,count(distinct(case when Global_tier ='1' then ctfo_site_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_site_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_site_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_site_id  end)) as Tier_4,count(distinct(ctfo_site_id)) as total_sites from $$schema$$.f_rpt_scenario_site_ranking_optimized_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by region LIMIT  $$limit$$ offset $$offset$$;",
        "inv_country_query_optimized": "select investigator_country, country_code,count(distinct(case when Global_tier ='1' then a.ctfo_investigator_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then a.ctfo_investigator_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then a.ctfo_investigator_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then a.ctfo_investigator_id  end)) as Tier_4,count(distinct(a.ctfo_investigator_id)) as total_pi from $$schema$$.f_rpt_scenario_investigator_ranking_optimized_temp  a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by investigator_country, country_code LIMIT  $$limit$$ offset $$offset$$;",
        "inv_region_query_optimized": "select region,count(distinct(case when Global_tier ='1' then ctfo_investigator_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_investigator_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_investigator_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_investigator_id  end)) as Tier_4,count(distinct(ctfo_investigator_id)) as total_pi from $$schema$$.f_rpt_scenario_investigator_ranking_optimized_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by region LIMIT  $$limit$$ offset $$offset$$;",
        "site_country_query_final": "select site_country,country_code,count(distinct(case when Global_tier ='1' then ctfo_site_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_site_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_site_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_site_id  end)) as Tier_4,count(distinct(ctfo_site_id)) as total_sites from $$schema$$.f_rpt_scenario_site_ranking_final WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by site_country, country_code LIMIT  $$limit$$ offset $$offset$$;",
        "site_region_query_final": "select region,count(distinct(case when Global_tier ='1' then ctfo_site_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_site_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_site_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_site_id  end)) as Tier_4,count(distinct(ctfo_site_id)) as total_sites from $$schema$$.f_rpt_scenario_site_ranking_final WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by region LIMIT  $$limit$$ offset $$offset$$;",
        "inv_country_query_final": "select investigator_country, country_code,count(distinct(case when Global_tier ='1' then a.ctfo_investigator_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then a.ctfo_investigator_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then a.ctfo_investigator_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then a.ctfo_investigator_id  end)) as Tier_4,count(distinct(a.ctfo_investigator_id)) as total_pi from $$schema$$.f_rpt_scenario_investigator_ranking_final  a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by investigator_country, country_code LIMIT  $$limit$$ offset $$offset$$;",
        "inv_region_query_final": "select region,count(distinct(case when Global_tier ='1' then ctfo_investigator_id  end)) as Tier_1,count(distinct(case when Global_tier ='2' then ctfo_investigator_id  end)) as Tier_2,count(distinct(case when Global_tier ='3' then ctfo_investigator_id  end)) as Tier_3,count(distinct(case when Global_tier ='4' then ctfo_investigator_id  end)) as Tier_4,count(distinct(ctfo_investigator_id)) as total_pi from $$schema$$.f_rpt_scenario_investigator_ranking_final WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by region LIMIT  $$limit$$ offset $$offset$$;",
        "site_comparison_rank_list_query": "SELECT site_country as country_name, country_code, count(DISTINCT(ctfo_site_id)) AS count_of_sites FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' GROUP BY site_country, country_code ORDER BY site_country",
        "site_comparison_optimized_list_query": "SELECT site_country as country_name, country_code, count(DISTINCT(ctfo_site_id)) AS count_of_sites FROM $$schema$$.f_rpt_scenario_site_ranking_optimized_temp WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' GROUP BY site_country, country_code ORDER BY site_country",
        "site_comparison_final_list_query": "SELECT site_country as country_name, country_code, count(DISTINCT(ctfo_site_id)) AS count_of_sites FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' GROUP BY site_country, country_code ORDER BY site_country"
      },
      "pi_ranking_map_view_details": {
        "pi_ranking_map_count_query": "SELECT investigator_country, country_code, count(distinct ctfo_investigator_id) as investigator_count from $$schema$$.$$investigator_ranking_table where inv_list_id = '$$inv_list_id$$' and theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' group by theme_id, scenario_id, investigator_country, country_code;",
        "pi_ranking_site_count_query": "SELECT d.country as country, d.country_code as country_code, d.site_count as site_count FROM (SELECT A.investigator_country as country, A.country_code as country_code,  A.theme_id as theme_id, A.scenario_id as scenario_id, count(distinct B.ctfo_site_id) as site_count from $$schema$$.$$investigator_ranking_table A inner join $$schema_reporting$$.$$investigator_site_study_details_table B on A.ctfo_investigator_id = B.ctfo_investigator_id where A.inv_list_id = '$$inv_list_id$$' and A.theme_id = '$$theme_id$$' and A.scenario_id = '$$scenario_id$$' group by A.theme_id, A.scenario_id, A.investigator_country, A.country_code) d order by country limit $$limit$$ offset $$offset$$;"
      },
      "country_detail": {
        "year-trials": "select year, trials from $$schema$$.f_rpt_country_flyout_trials where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and country_code = '$$country_code$$' and country = '$$country$$' ",
        "site-tier-count": "select sum(tier_1) as tier_1, sum(tier_2) as tier_2, sum(tier_3) as tier_3, sum(tier_4) as tier_4 from  (select coalesce(case when global_tier ='1' then sum(count) end,0) as tier_1, coalesce(case when global_tier ='2' then sum(count) end,0) as tier_2, coalesce(case when global_tier ='3' then sum(count) end,0) as tier_3, coalesce(case when global_tier ='4' then sum(count) end,0) as tier_4, coalesce(case when global_tier ='5' then sum(count) end,0) as tier_5 from   (select global_tier ,count(distinct ctfo_site_id) as count  FROM ( SELECT DISTINCT ON (ctfo_site_id) ctfo_site_id ,global_tier from $$schema$$.f_rpt_scenario_site_ranking_temp where country_code = '$$countrycode$$' and scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and site_list_id='$$site_list_id$$') as srt GROUP BY global_tier)b1 group by global_tier) tier ",
        "investigator-tier-count": "select sum(tier_1) as tier_1, sum(tier_2) as tier_2, sum(tier_3) as tier_3, sum(tier_4) as tier_4 from  (select coalesce(case when global_tier ='1' then sum(count) end,0) as tier_1, coalesce(case when global_tier ='2' then sum(count) end,0) as tier_2, coalesce(case when global_tier ='3' then sum(count) end,0) as tier_3, coalesce(case when global_tier ='4' then sum(count) end,0) as tier_4, coalesce(case when global_tier ='5' then sum(count) end,0) as tier_5 from   (select global_tier ,count(distinct ctfo_investigator_id) as count  FROM ( SELECT DISTINCT ON (ctfo_investigator_id) ctfo_investigator_id ,global_tier from $$schema$$.f_rpt_scenario_investigator_ranking_temp where country_code = '$$countrycode$$' and scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and inv_list_id='$$inv_list_id$$') as srt GROUP BY global_tier)b1 group by global_tier) tier",
        "drug-detail": "select drug_name as drug_nm, disease_nm, country_status, originator from $$schema$$.f_rpt_country_flyout_drug_profile where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and country_code = '$$country_code$$' and country = '$$country$$' order by drug_name LIMIT $$limit$$ OFFSET $$page$$ ",
        "closed-sponsor": "select closed_count, open_count, planned_count, sponsor from $$schema$$.f_rpt_country_flyout_clinical_trials where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and country_code = '$$country_code$$' and country = '$$country$$' ",
        "insert-closed-sponsor": "with fs1 as( select distinct country, country_code from $$schema$$.f_rpt_scenario_country_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_country_flyout_clinical_trials( SELECT DISTINCT sponsor, count( DISTINCT CASE WHEN lower( trim(trial_status) ) IN('completed') THEN ctfo_trial_id END ) AS closed_count, count( DISTINCT CASE WHEN lower( trim(trial_status) ) IN('planned') THEN ctfo_trial_id END ) AS planned_count, count( DISTINCT CASE WHEN lower( trim(trial_status) ) IN('ongoing') THEN ctfo_trial_id END ) AS open_count, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, fs.country_code, fs.country, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT unnest( string_to_array(sponsor, '|') ) AS sponsor, trial_status, ctfo_trial_id, site_country as country, country_code FROM $$schema_reporting$$.f_rpt_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and sponsor IN ( SELECT sponsor FROM ( SELECT DISTINCT ON (ctfo_trial_id) ctfo_trial_id, sponsor FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_trial_id) IN ( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ AND geo.ctfo_site_id IN ( SELECT ctfo_site_id FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE active_flag = 'Y' AND theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' ) GROUP BY ps.ctfo_trial_id ) ) AS ssd GROUP BY sponsor ORDER BY count(*) DESC Limit 5 ) AND (ctfo_trial_id) IN ( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ AND geo.ctfo_site_id IN ( SELECT ctfo_site_id FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE active_flag = 'Y' AND theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' ) GROUP BY ps.ctfo_trial_id ) GROUP BY sponsor, trial_status, ctfo_trial_id, country, country_code ) aa left JOIN fs1 fs ON fs.country = aa.country GROUP BY sponsor, fs.country_code, fs.country ORDER BY sponsor ) ",
        "insert-year-trials": "with fs1 as( select distinct country, country_code from $$schema$$.f_rpt_scenario_country_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_country_flyout_trials ( SELECT '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp, fs.country_code, fs.country, ( extract( YEAR FROM trial_start_dt ) ):: INT AS year, COUNT( extract( YEAR FROM trial_start_dt ) ):: INT AS trials FROM ( SELECT DISTINCT(ctfo_trial_id) as ctfo_trial_id, site_country as country, country_code, trial_start_dt FROM $$schema_reporting$$.f_rpt_site_study_details WHERE pt_cycle_id = '$$pt_cycle_id$$' and (ctfo_trial_id) IN ( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ GROUP BY ps.ctfo_trial_id ) GROUP BY 1, 2, 3, 4 ) AS std_det left JOIN fs1 fs ON fs.country = std_det.country WHERE ( extract( YEAR FROM trial_start_dt ) ) >= '2000' GROUP BY fs.country_code,fs.country,year HAVING COUNT( extract( YEAR FROM trial_start_dt ) ) > 0 order by year asc ) ",
        "insert-drug-detail": "with fs1 as( select distinct country, country_code from $$schema$$.f_rpt_scenario_country_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_country_flyout_drug_profile( SELECT drug_nm, disease_nm, country_status, originator, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$theme_id$$' AS theme_id, fs.country_code, fs.country, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_drug_details f left JOIN fs1 fs ON fs.country = f.country WHERE TRUE and lower(therapeutic_class_nm) in $$TA$$ and lower(disease_nm) in $$DA$$ AND pt_cycle_id = '$$pt_cycle_id$$' ORDER BY drug_nm ) ",
        "delete_closed_sponsor": "Delete from $$schema$$.f_rpt_country_flyout_clinical_trials where theme_id = '$$theme_id$$'",
        "delete_trials": "Delete from $$schema$$.f_rpt_country_flyout_trials where theme_id = '$$theme_id$$'",
        "delete_drug_profile": "Delete from $$schema$$.f_rpt_country_flyout_drug_profile where theme_id = '$$theme_id$$'",
        "count_country_drug_profile_query" : "select count(country) from $$schema$$.f_rpt_country_flyout_drug_profile where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True",
        "list_id": "SELECT c.country_list_id ,c.site_list_id FROM( ( SELECT max(country_list_id) as country_list_id ,'1' AS id_1 FROM $$schema$$.f_rpt_scenario_country_ranking_temp where theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND active_flag = 'Y') a INNER JOIN ( SELECT max(site_list_id) as site_list_id ,'1' AS id_1 FROM $$schema$$.f_rpt_scenario_site_ranking_temp where theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND active_flag = 'Y' ) b ON a.id_1 = b.id_1 ) c"
      },
      "investigator_ranking_details": {
        "get_optimize_count": "select count(*) from $$schema$$.$$table$$ where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$'",
        "get_ranking_count": "with fs0 as( SELECT rank ,ctfo_investigator_id ,inv_list_id ,investigator_full_nm ,investigator_specialty ,investigator_address ,investigator_city ,investigator_state ,investigator_country ,country_code ,null as region ,total_trials_all_ta ,enrollment_rate_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_years ,current_workload ,recentness_of_activity ,years_of_experience ,ta_experience_years ,completed_trials ,sponsor_experience ,phase_experience ,similar_drug_experience ,tier_score ,global_tier ,local_tier FROM $$schema$$.$$table$$ WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY rank ,ctfo_investigator_id ,inv_list_id ,investigator_full_nm ,investigator_specialty ,investigator_address ,investigator_city ,investigator_state ,investigator_country ,country_code ,region ,total_trials_all_ta ,enrollment_rate_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_years ,current_workload ,recentness_of_activity ,years_of_experience ,ta_experience_years ,completed_trials ,sponsor_experience ,phase_experience ,similar_drug_experience ,tier_score ,global_tier ,local_tier) select count(distinct(ctfo_investigator_id)) from fs0 ",
        "summary_criteria_join_query": "select a.theme_id, a.scenario_id, a.therapeutic_area, a.indication as disease, a.phase, a.no_of_sites, b.filter_criteria_json, a.pt_cycle_id from $$schema$$.f_rpt_scenario_stdy_sumry a left outer join $$schema$$.f_rpt_scenario_stdy_criteria b on a.theme_id = b.theme_id and a.scenario_id = b.scenario_id and a.active_flag = b.active_flag where a.theme_id = '$$theme_id$$' and a.scenario_id = '$$scenario_id$$' and a.active_flag = 'Y' ",
        "investigator_rank_query": "WITH fs0 AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and(( trial_start_dt >= '$$trial_universe_start_date$$' AND trial_start_dt <= '$$trial_universe_end_date$$') OR trial_start_dt IS NULL ) GROUP BY 1 ) INSERT INTO $$schema$$.f_rpt_scenario_investigator_ranking_temp ( with inv_rank AS ( WITH inv_norm AS ( WITH inv_metrics AS ( SELECT a.ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_city, investigator_state, investigator_country, country_code, region, region_code, j.total_trials_all_ta, rd.enrollment_rate_median, h.screen_failure_rate_median, similar_trials_experience, za.disease_experience_years, ze.count_recent_trials AS recentness_of_activity, zn.years_of_experience, ta_experience_years, kd.current_workload, x.completed_trials, sponsor_experience, phase_experience, similar_drug_experience ,pd.most_recent_started_trial ,cd.latest_completed_trial FROM ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_city, investigator_state, investigator_country, country_code, region, region_code FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE inv.trial_site_inv_id IN ( SELECT geo.trial_site_inv_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON ps.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id INNER JOIN ( SELECT ctfo_site_id FROM $$schema$$.f_rpt_scenario_site_ranking_temp tmp WHERE theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND site_list_id = '$$site_list_id' AND active_flag = '$$active_flag' ) tmp ON tmp.ctfo_site_id = geo.ctfo_site_id WHERE $$filter_conditions GROUP BY geo.trial_site_inv_id ) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ) a LEFT JOIN ( SELECT ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS similar_trials_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ $$gender$$ $$age$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) c ON a.ctfo_investigator_id = c.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count( DISTINCT CASE WHEN (trial_start_dt) > ( (CURRENT_DATE) - INTERVAL '5 YEAR' ) THEN ctfo_trial_id END ) AS count_recent_trials FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(trial_status) ) in ('completed', 'ongoing') and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) ze ON a.ctfo_investigator_id = ze.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, CASE WHEN CURRENT_DATE >= min(trial_start_dt) THEN round( ( ( CURRENT_DATE - min(trial_start_dt) ) / 365.0 ), 3 ) ELSE NULL END AS years_of_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details si where pt_cycle_id = '$$pt_cycle_id$$' and si.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id GROUP BY 1 ) GROUP BY ctfo_investigator_id ) zn ON a.ctfo_investigator_id = zn.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, CASE WHEN COALESCE( max(last_subject_in_dt), max(trial_end_dt) ) >= COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) THEN round( ( ( COALESCE( max(last_subject_in_dt), max(trial_end_dt) ) - COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE CASE WHEN CURRENT_DATE >= COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) THEN round( ( ( CURRENT_DATE - COALESCE( min(ready_to_enroll_dt), min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE NULL END END AS disease_experience_years FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(trial_status) ) in ( 'completed', 'ongoing', 'planned' ) and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE true $$therapeutic_area$$ $$disease$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) za ON a.ctfo_investigator_id = za.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, CASE WHEN max(last_subject_in_dt) >= min(ready_to_enroll_dt) THEN round( ( ( max(last_subject_in_dt) - min(ready_to_enroll_dt) ) / 365.0 ), 3 ) ELSE NULL END AS ta_experience_years FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) d ON a.ctfo_investigator_id = d.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS sponsor_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(trial_status) ) in ( 'completed', 'ongoing', 'planned' ) and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_status$$ AND lower( trim(sponsor) ) LIKE '%zs%' GROUP BY 1 ) GROUP BY ctfo_investigator_id ) e ON a.ctfo_investigator_id = e.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS phase_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(trial_status) ) in ( 'completed', 'ongoing', 'planned' ) and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) f ON a.ctfo_investigator_id = f.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS similar_drug_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$patient_segment$$ $$gender$$ $$age$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) g ON a.ctfo_investigator_id = g.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, median(screen_failure_rate) AS screen_failure_rate_median FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$patient_segment$$ $$gender$$ $$age$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) h ON a.ctfo_investigator_id = h.ctfo_investigator_id LEFT JOIN ( SELECT si.ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS total_trials_all_ta FROM $$schema_reporting$$.f_rpt_investigator_site_study_details si where pt_cycle_id = '$$pt_cycle_id$$' and si.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ GROUP BY 1 ) GROUP BY si.ctfo_investigator_id ) j ON a.ctfo_investigator_id = j.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count( DISTINCT CASE WHEN lower( trim(trial_status) ) = 'planned' :: text OR lower( trim(trial_status) ) = 'ongoing' :: text THEN ctfo_trial_id ELSE NULL :: text END ) AS current_workload FROM $$schema_reporting$$.f_rpt_investigator_site_study_details si where pt_cycle_id = '$$pt_cycle_id$$' and si.ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$sponsor$$ GROUP BY 1 ) GROUP BY si.ctfo_investigator_id ) kd ON a.ctfo_investigator_id = kd.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS completed_trials FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and lower( trim(trial_status) ) = 'completed' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) x ON a.ctfo_investigator_id = x.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, median(enrollment_rate) AS enrollment_rate_median FROM $$schema_reporting$$.f_rpt_investigator_site_study_details where pt_cycle_id = '$$pt_cycle_id$$' and ctfo_trial_id IN ( SELECT a.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_trial b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE a.ctfo_trial_id IN ( SELECT ctfo_trial_id FROM fs0 ) $$therapeutic_area$$ $$disease$$ $$trial_phase$$ $$sponsor$$ $$patient_segment$$ $$gender$$ $$age$$ $$trial_status$$ GROUP BY 1 ) GROUP BY ctfo_investigator_id ) rd ON a.ctfo_investigator_id = rd.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, max(trial_start_dt) AS most_recent_started_trial FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE pt_cycle_id = '$$pt_cycle_id$$' GROUP BY ctfo_investigator_id ) pd ON rd.ctfo_investigator_id = pd.ctfo_investigator_id LEFT JOIN ( select ctfo_investigator_id,latest_completed_trial from (SELECT ctfo_investigator_id, trial_start_dt, DENSE_RANK() over(partition by ctfo_investigator_id order by trial_start_dt desc nulls last) ,coalesce(nct_id, ctfo_trial_id) AS latest_completed_trial FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE pt_cycle_id = '$$pt_cycle_id$$' AND trial_status = 'Completed') aa WHERE dense_rank = 1 and trial_start_dt is not null group by 1,2 ) cd ON cd.ctfo_investigator_id = pd.ctfo_investigator_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,25,26 ) SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_city, investigator_state, investigator_country, country_code, region, region_code, total_trials_all_ta, enrollment_rate_median, screen_failure_rate_median, similar_trials_experience, disease_experience_years, recentness_of_activity, years_of_experience, ta_experience_years, current_workload, completed_trials, sponsor_experience, phase_experience, similar_drug_experience ,most_recent_started_trial ,latest_completed_trial, CASE WHEN min_enrollment_rate_median IS NULL OR max_enrollment_rate_median IS NULL OR enrollment_rate_median IS NULL THEN NULL WHEN min_enrollment_rate_median = 0 AND max_enrollment_rate_median = 0 AND enrollment_rate_median = 0 THEN 0 WHEN min_enrollment_rate_median = max_enrollment_rate_median AND min_enrollment_rate_median = enrollment_rate_median THEN 1 ELSE Cast( ( enrollment_rate_median - min_enrollment_rate_median ) AS DOUBLE PRECISION ) / Cast( ( max_enrollment_rate_median - min_enrollment_rate_median ) AS DOUBLE PRECISION ) END AS norm_enrollment_rate_median, CASE WHEN min_screen_failure_rate_median IS NULL OR max_screen_failure_rate_median IS NULL OR screen_failure_rate_median IS NULL THEN NULL WHEN min_screen_failure_rate_median = 0 AND max_screen_failure_rate_median = 0 AND screen_failure_rate_median = 0 THEN 0 WHEN min_screen_failure_rate_median = max_screen_failure_rate_median AND min_screen_failure_rate_median = screen_failure_rate_median THEN 1 ELSE Cast( ( max_screen_failure_rate_median - screen_failure_rate_median ) AS DOUBLE PRECISION ) / Cast( ( max_screen_failure_rate_median - min_screen_failure_rate_median ) AS DOUBLE PRECISION ) END AS norm_screen_failure_rate_median, CASE WHEN min_similar_trials_experience IS NULL OR max_similar_trials_experience IS NULL OR similar_trials_experience IS NULL THEN NULL WHEN min_similar_trials_experience = 0 AND max_similar_trials_experience = 0 AND similar_trials_experience = 0 THEN 0 WHEN min_similar_trials_experience = max_similar_trials_experience AND min_similar_trials_experience = similar_trials_experience THEN 1 ELSE Cast( ( similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) / Cast( ( max_similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) END AS norm_similar_trials_experience, CASE WHEN min_disease_experience_years IS NULL OR max_disease_experience_years IS NULL OR disease_experience_years IS NULL THEN NULL WHEN min_disease_experience_years = 0 AND max_disease_experience_years = 0 AND disease_experience_years = 0 THEN 0 WHEN min_disease_experience_years = max_disease_experience_years AND min_disease_experience_years = disease_experience_years THEN 1 ELSE Cast( ( disease_experience_years - min_disease_experience_years ) AS DOUBLE PRECISION ) / Cast( ( max_disease_experience_years - min_disease_experience_years ) AS DOUBLE PRECISION ) END AS norm_disease_experience_years, CASE WHEN min_current_workload IS NULL OR max_current_workload IS NULL OR current_workload IS NULL THEN NULL WHEN min_current_workload = 0 AND max_current_workload = 0 AND current_workload = 0 THEN 0 WHEN min_current_workload = max_current_workload AND min_current_workload = current_workload THEN 1 ELSE Cast( ( max_current_workload - current_workload ) AS DOUBLE PRECISION ) / Cast( ( max_current_workload - min_current_workload ) AS DOUBLE PRECISION ) END AS norm_current_workload, CASE WHEN min_recentness_of_activity IS NULL OR max_recentness_of_activity IS NULL OR recentness_of_activity IS NULL THEN NULL WHEN min_recentness_of_activity = 0 AND max_recentness_of_activity = 0 AND recentness_of_activity = 0 THEN 0 WHEN min_recentness_of_activity = max_recentness_of_activity AND min_recentness_of_activity = recentness_of_activity THEN 1 ELSE Cast( ( max_recentness_of_activity - recentness_of_activity ) AS DOUBLE PRECISION ) / Cast( ( max_recentness_of_activity - min_recentness_of_activity ) AS DOUBLE PRECISION ) END AS norm_recentness_of_activity FROM ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_city, investigator_state, investigator_country, country_code, region, region_code, total_trials_all_ta, enrollment_rate_median, screen_failure_rate_median, similar_trials_experience, disease_experience_years, recentness_of_activity, years_of_experience, ta_experience_years, current_workload, completed_trials, sponsor_experience, phase_experience, similar_drug_experience ,most_recent_started_trial ,latest_completed_trial FROM inv_metrics ) A CROSS JOIN ( SELECT Min(enrollment_rate_median) AS min_enrollment_rate_median, Max(enrollment_rate_median) AS max_enrollment_rate_median, Min(screen_failure_rate_median) AS min_screen_failure_rate_median, Max(screen_failure_rate_median) AS max_screen_failure_rate_median, Min(similar_trials_experience) AS min_similar_trials_experience, Max(similar_trials_experience) AS max_similar_trials_experience, Min(disease_experience_years) AS min_disease_experience_years, Max(disease_experience_years) AS max_disease_experience_years, Min(recentness_of_activity) AS min_recentness_of_activity, Max(recentness_of_activity) AS max_recentness_of_activity, Min(current_workload) AS min_current_workload, Max(current_workload) AS max_current_workload FROM inv_metrics ) B ) SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_city, investigator_state, investigator_country, country_code, region, region_code, total_trials_all_ta, enrollment_rate_median, screen_failure_rate_median, similar_trials_experience, disease_experience_years, recentness_of_activity, years_of_experience, ta_experience_years, current_workload, completed_trials, sponsor_experience, phase_experience, similar_drug_experience ,most_recent_started_trial ,latest_completed_trial, ( ( COALESCE(norm_enrollment_rate_median, 0) * $$wt_enrollment_rate ) + ( COALESCE( norm_screen_failure_rate_median, 0 ) * $$wt_median_screen_failure_rate ) + ( COALESCE( norm_similar_trials_experience, 0 ) * $$wt_similar_trials_exp ) + ( COALESCE( norm_disease_experience_years, 0 ) * $$wt_disease_exp ) + ( COALESCE(norm_recentness_of_activity, 0) * $$wt_recent_trials ) + ( COALESCE(norm_current_workload, 0) * $$wt_current_workload ) ) AS tier_score, Dense_rank() OVER ( ORDER BY ( ( COALESCE(norm_enrollment_rate_median, 0) * $$wt_enrollment_rate ) + ( COALESCE( norm_screen_failure_rate_median, 0 ) * $$wt_median_screen_failure_rate ) + ( COALESCE( norm_similar_trials_experience, 0 ) * $$wt_similar_trials_exp ) + ( COALESCE( norm_disease_experience_years, 0 ) * $$wt_disease_exp ) + ( COALESCE(norm_recentness_of_activity, 0) * $$wt_recent_trials ) + ( COALESCE(norm_current_workload, 0) * $$wt_current_workload ) ) DESC ) inv_rank FROM inv_norm ), distinct_inv_score AS ( SELECT DISTINCT tier_score AS inv_score_distinct FROM inv_rank ), inv_score_tier AS ( SELECT inv_score_distinct, ntile(4) OVER ( ORDER BY inv_score_distinct DESC ) AS inv_tier FROM distinct_inv_score ) SELECT '$$inv_list_id' AS inv_list_id, '$$inv_list_version' AS version, inv_rank AS rank, a.ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_city, investigator_state, investigator_country, country_code, region, region_code, total_trials_all_ta, enrollment_rate_median, screen_failure_rate_median, similar_trials_experience, disease_experience_years, recentness_of_activity, years_of_experience, ta_experience_years, current_workload, completed_trials, sponsor_experience, phase_experience, similar_drug_experience, a.tier_score, COALESCE(tier_5.inv_tier, '5') AS global_tier, Ntile(4) OVER ( partition BY investigator_country ORDER BY inv_rank ) local_tier, '$$theme_id' AS theme_id, '$$scenario_id' AS scenario_id, '$$created_by_user' AS created_by, '$$updated_by_user' AS updated_by, '$$active_flag' AS active_flag, '$$created_timestamp' AS created_timestamp, '$$updated_timestamp' AS updated_timestamp ,most_recent_started_trial ,latest_completed_trial FROM inv_rank a LEFT JOIN inv_score_tier tier_5 ON a.tier_score = tier_5.inv_score_distinct ORDER BY inv_rank ) ",
        "investigator_rank_save_query": "INSERT INTO $$schema$$.f_rpt_scenario_investigator_ranking (SELECT * FROM $$schema$$.f_rpt_scenario_investigator_ranking_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and inv_list_id = '$$inv_list_id$$')",
        "get_version_query": "select version from $$schema$$.f_rpt_scenario_investigator_ranking where scenario_id = $$scenario_id$$ and theme_id = $$theme_id$$ and active_flag='Y'",
        "update_active_flag": "update $$schema$$.f_rpt_scenario_investigator_ranking set active_flag = 'N' where scenario_id=$$scenario_id$$ and theme_id = $$theme_id$$",
        "update_version_query": "update $$schema$$.f_rpt_scenario_investigator_ranking set version = '$$version$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and inv_list_id = '$$inv_list_id$$'",
        "insert_weightage_query": "INSERT INTO $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl_temp( wt_enrollment_rate ,wt_median_screen_failure_rate ,wt_disease_exp ,wt_similar_trials_exp ,wt_current_workload ,wt_recent_trials  ,theme_id ,scenario_id ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp ,version, inv_list_id) values ( '$$wt_enrollment_rate' ,'$$wt_median_screen_failure_rate' ,'$$wt_disease_exp' ,'$$wt_similar_trials_exp' ,'$$wt_current_workload' ,'$$wt_recent_trials' ,'$$theme_id' ,'$$scenario_id' ,'$$created_by' ,'$$updated_by' ,'$$active_flag' ,'$$created_timestamp' ,'$$updated_timestamp' ,'$$version', '$$inv_list_id')",
        "weightage_save_query": "INSERT INTO $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl (SELECT * FROM $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl_temp WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and inv_list_id = '$$inv_list_id$$')",
        "update_weightage_active_flag": "update $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl set active_flag = 'N' where scenario_id= $$scenario_id$$ and theme_id = $$theme_id$$",
        "update_weightage_version_query": "update $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl set version = '$$version$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and inv_list_id = '$$inv_list_id$$'",
        "investigator_rank_display_query": "With fs0 as( SELECT rank ,ctfo_investigator_id ,inv_list_id ,investigator_full_nm ,investigator_specialty ,investigator_address ,investigator_city ,investigator_state ,investigator_country ,country_code ,Null as region ,total_trials_all_ta ,enrollment_rate_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_years ,current_workload ,recentness_of_activity ,years_of_experience ,ta_experience_years ,completed_trials ,sponsor_experience ,phase_experience ,similar_drug_experience ,tier_score ,global_tier ,local_tier FROM $$schema$$.f_rpt_scenario_investigator_ranking where $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$) select distinct rank ,ctfo_investigator_id ,inv_list_id ,investigator_full_nm ,investigator_specialty ,investigator_address ,investigator_city ,investigator_state ,investigator_country ,country_code ,Null as region ,total_trials_all_ta ,enrollment_rate_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_years ,current_workload ,recentness_of_activity ,years_of_experience ,ta_experience_years ,completed_trials ,sponsor_experience ,phase_experience ,similar_drug_experience ,tier_score ,global_tier ,local_tier from fs0 $$order_by$$ $$order_dir$$",
        "weightage_display_query": "select wt_enrollment_rate ,wt_median_screen_failure_rate ,wt_disease_exp ,wt_similar_trials_exp ,wt_current_workload ,wt_recent_trials from $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl where $$condition$$",
        "get_investigator_list_id_query": "select distinct max(inv_list_id) from $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl_temp where $$condition$$",
        "get_color_query": "SELECT COALESCE(VALUES, 0.0) AS VALUES FROM ( SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(enrollment_rate_median AS DOUBLE PRECISION) ASC ) AS VALUES, '1' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'  UNION ALL  SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(screen_failure_rate_median AS DOUBLE PRECISION) ASC ) AS VALUES, '2' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'  UNION ALL  SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(similar_trials_experience AS DOUBLE PRECISION) ASC ) AS VALUES, '3' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'  UNION ALL  SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(disease_experience_years AS DOUBLE PRECISION) ASC ) AS VALUES, '4' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'  UNION ALL  SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(current_workload AS DOUBLE PRECISION) ASC )AS VALUES, '5' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'  UNION ALL  SELECT percentile_cont($$percentile$$) within GROUP ( ORDER BY cast(recentness_of_activity AS DOUBLE PRECISION) ASC )AS VALUES, '6' AS row_num FROM $$schema$$.$$table$$ WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y' ) a order by a.row_num::int",
        "update_color_query": "UPDATE $$schema$$.$$table$$ SET color_average_startup_time = '$$color_average_startup_time$$' ,color_randomization_rate = '$$color_randomization_rate$$' ,color_lost_opportunity_time = '$$color_lost_opportunity_time$$' ,color_screen_failure_rate = '$$color_screen_failure_rate$$' ,color_similar_trial_exp = '$$color_similar_trial_exp$$' ,color_disease_exp = '$$color_disease_exp$$' ,color_current_workload = '$$color_current_workload$$' WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'",
        "color_display_query": "select color_json from $$schema$$.$$table_name$$ where $$condition$$ order by created_timestamp desc limit 1",
        "delete_color_query": "delete from $$schema$$.$$table_name$$ where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and type = 'investigator_rank' and optimization_flag = '$$optimization_flag$$' and active_flag = 'Y' and table_category = '$$table_category$$'",
        "insert_color_query": "insert into $$schema$$.$$table_name (theme_id, scenario_id, list_id, type, optimization_flag, color_json, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, version, table_category) values ('$$theme_id$$', '$$scenario_id$$', '$$list_id$$', 'investigator_rank', '$$optimization_flag$$', '$$color_json$$', '$$created_by$$', '$$updated_by$$', 'Y', '$$created_timestamp$$', '$$updated_timestamp$$', '$$version$$', '$$table_category$$');",
        "update_filter_active_flag": "update $$schema$$.f_rpt_filter_constraints_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and inv_list_id = '$$inv_list_id$$'",
        "update_region_active_flag": "update $$schema$$.f_rpt_region_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and inv_list_id = '$$inv_list_id$$'",
        "update_country_active_flag": "update $$schema$$.f_rpt_country_optimizer_dtl set active_flag = 'N' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and inv_list_id = '$$inv_list_id$$'",
        "insert_filter_constraint_query": "INSERT INTO $$schema$$.f_rpt_filter_constraints_optimizer_dtl (theme_id, scenario_id, inv_list_id, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) VALUES ('$$theme_id$$', '$$scenario_id$$', '$$inv_list_id$$', '1', 'Y', '$$user_id$$', '$$time_stamp$$', '$$user_id$$', '$$time_stamp$$' )",
        "insert_region_constraint_query": "INSERT INTO $$schema$$.f_rpt_region_optimizer_dtl (theme_id, scenario_id, site_list_id,region,include_exclude,reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) (SELECT DISTINCT theme_id, scenario_id, inv_list_id,region,include_exclude, reason, comment, '1' AS version, 'Y' as active_flag, 'site_rank' AS created_by, created_timestamp, 'site_rank' AS updated_by, updated_timestamp FROM $$schema$$.f_rpt_scenario_investigator_ranking a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and a.active_flag ='Y')",
        "insert_country_query": "INSERT INTO $$schema$$.f_rpt_country_optimizer_dtl(sites_count, theme_id, scenario_id, site_list_id,country,region,country_code,include_exclude,reason, comment, version, active_flag, created_by, created_timestamp, updated_by, updated_timestamp) (select count(distinct ctfo_site_id) as sites_count , theme_id, scenario_id, site_list_id,site_country,region,country_code,include_exclude, reason, comment, '1' AS version, 'Y' as active_flag, 'site_rank' AS created_by, created_timestamp, 'site_rank' AS updated_by, updated_timestamp FROM $$schema$$.f_rpt_scenario_site_ranking a WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and a.active_flag='Y' and country_code is not null and region_code is not null and lost_opportunity_time_median is not null and average_startup_time_median is not null group by 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)",
        "optimize_inv_actual_last_version": "SELECT version from $$schema$$.f_rpt_scenario_investigator_ranking_optimized where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag='Y'",
        "delete_actual_optimized_inv": "UPDATE $$schema$$.f_rpt_scenario_investigator_ranking_optimized SET active_flag = 'N' where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "insert_optimize_inv_actual": "INSERT into $$schema$$.f_rpt_scenario_investigator_ranking_optimized (SELECT inv_list_id,'$$version$$' as version,rank ,ctfo_investigator_id ,investigator_full_nm ,investigator_specialty ,investigator_address ,investigator_phone ,investigator_city ,investigator_state,investigator_country ,country_code , region, region_code,total_trials_all_ta ,enrollment_rate_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_years ,recentness_of_activity ,years_of_experience ,ta_experience_years ,current_workload ,completed_trials ,sponsor_experience ,phase_experience ,similar_drug_experience ,tier_score ,global_tier ,local_tier ,theme_id ,scenario_id ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp ,optimize_site_id from $$schema$$.f_rpt_scenario_investigator_ranking_optimized_temp where inv_list_id = '$$inv_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and active_flag = 'Y' and optimize_site_id = '$$optimize_site_id$$')",
        "delete_temp_optimized_inv": "UPDATE $$schema$$.f_rpt_scenario_investigator_ranking_optimized_temp SET active_flag = 'N' where inv_list_id = '$$inv_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "rollback_deleted_actual_optimized_inv": "UPDATE $$schema$$.f_rpt_scenario_investigator_ranking_optimized SET active_flag = 'Y' where inv_list_id = '$$inv_list_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$'",
        "get_optimize_inv_status": "SELECT jobstatus,comment from $$schema$$.f_rpt_scenario_site_ranking_optimize_status where optimize_site_id = '$$optimize_site_id$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and type = 'investigator' ORDER BY created_timestamp DESC LIMIT 1",
        "get_actual_optimized_inv": "SELECT distinct rank ,ctfo_investigator_id ,investigator_full_nm, investigator_specialty, investigator_address ,investigator_city,investigator_country ,country_code ,total_trials_all_ta, enrollment_rate_median, screen_failure_rate_median, similar_trials_experience , disease_experience_years ,current_workload ,recentness_of_activity, years_of_experience, ta_experience_years, completed_trials,sponsor_experience, phase_experience, similar_drug_experience, tier_score ,global_tier ,local_tier, inv_list_id from $$schema$$.f_rpt_scenario_investigator_ranking_optimized where $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "get_temp_optimized_inv": "SELECT distinct rank ,ctfo_investigator_id ,investigator_full_nm, investigator_specialty, investigator_address ,investigator_city,investigator_country ,country_code ,total_trials_all_ta, enrollment_rate_median, screen_failure_rate_median, similar_trials_experience , disease_experience_years ,current_workload ,recentness_of_activity, years_of_experience, ta_experience_years, completed_trials, sponsor_experience, phase_experience, similar_drug_experience, tier_score ,global_tier ,local_tier, inv_list_id from $$schema$$.f_rpt_scenario_investigator_ranking_optimized_temp where $$condition$$ $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "investigator_rank_export_list": "SELECT * from $$schema$$.f_rpt_scenario_investigator_ranking where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and inv_list_id = '$$inv_list_id$$'",
        "investigator_rank_optimized_export_list": "SELECT * from $$schema$$.f_rpt_scenario_investigator_ranking_optimized where active_flag = 'Y' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and optimize_site_id = '$$optimize_site_id$$' order by rank asc"
      },
      "investigator_details": {
        "investigator_details_query": "select ctfo_investigator_id, first_trial_date, investigator_address, investigator_city, investigator_country, investigator_email, investigator_full_nm, investigator_phone, latest_completed_trial, recent_started_trial, region, therapeutic_area, total_sites, total_trials_all_ta from $$schema$$.f_rpt_pi_flyout_investigator_details where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$'",
        "primary_organization_query": "select 'dummy_value' as name ,'dummy_value' as address ,'dummy_value' as region ,'dummy_value' as country ,'dummy_value' as site ,'dummy_value' as sponsor ,'dummy_value' as pills ,'dummy_value' as hats",
        "affiliated_sites_details_query": "SELECT row_number() OVER ( ORDER BY rank ) AS rank ,site_nm AS site_name ,global_tier AS site_tier ,country_tier ,tier_score ,site_address ,site_city ,site_state ,site_country ,'' AS site_contact ,screen_failure_rate_median AS screen_failure_rate ,disease_experience_year AS disease_experience ,average_startup_time_median AS average_startup_time ,randomization_rate_median AS enrollment_rate ,similar_trials_experience ,lost_opportunity_time_median AS lost_opportunity_time ,current_workload ,recentness_trials AS recent_trials FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE ctfo_site_id IN ( SELECT ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON geo.ctfo_trial_id = ps.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON ps.ctfo_trial_id = trial.ctfo_trial_id WHERE geo.ctfo_investigator_id = '$$ctfo_investigator_id$$' AND $$filter_conditions$$ GROUP BY 1 ) AND theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND version = ( SELECT max(version) FROM $$schema$$.f_rpt_scenario_site_ranking_temp WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' ) AND active_flag = 'Y' ORDER BY rank limit $$limit$$ offset $$offset$$",
        "scores_and_influence_query": "select 'dummy_value' as trials ,'dummy_value' as presentations ,'dummy_value' as publications ,'dummy_value' as global_network_influence ,'dummy_value' as local_network_influence ,'dummy_value' as influence_over_time",
        "investigator_profile_query": "select latest_completed_trial, 'dummy' as most_recent_publication, most_recent_started_trial from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y' and ctfo_investigator_id = '$$ctfo_investigator_id$$' order by most_recent_started_trial DESC NULLS LAST, latest_completed_trial NULLS LAST LIMIT 1 ",
        "experience_analysis_phase_completed_query": "select phase, trial_count_completed, category from $$schema$$.f_rpt_pi_flyout_experience_analysis_completed_trials where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' ",
        "experience_analysis_phase_ongoing_query": "select category, phase, trial_count_ongoing from $$schema$$.f_rpt_pi_flyout_experience_analysis_ongoing_trials where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' ",
        "experience_analysis_sponsor_query": "select sponsor_name, sponsor_total_trials from $$schema$$.f_rpt_pi_flyout_experience_analysis_sponsor_details where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' ",
        "summary_criteria_join_query": "select a.theme_id, a.scenario_id, a.therapeutic_area, a.indication as disease, a.phase, a.no_of_sites, b.filter_criteria_json, a.pt_cycle_id from $$schema$$.f_rpt_scenario_stdy_sumry a left outer join $$schema$$.f_rpt_scenario_stdy_criteria b on a.theme_id = b.theme_id and a.scenario_id = b.scenario_id and a.active_flag = b.active_flag where a.theme_id = '$$theme_id$$' and a.scenario_id='$$scenario_id$$' and a.active_flag = 'Y'",
        "get_site_list_id_query": "select max(site_list_id) from $$schema$$.$$table_name where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y'",
        "sponsor_experience_query": "select sponsor, sponsor_last_trial_start_date, sponsor_total_trials from $$schema$$.f_rpt_pi_sponsor_experience where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' ORDER BY sponsor_last_trial_start_date DESC NULLS LAST",
        "drug_details_query": "select disease, drug_names, therapeutic_area from $$schema$$.f_rpt_pi_flyout_drug_details where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' ",
        "investigator_score_query": "select tier_score as overall_performance, disease_experience_years, recentness_of_activity, current_workload as ongoing_trials, years_of_experience from $$schema$$.f_rpt_scenario_investigator_ranking_temp where ctfo_investigator_id='$$investigator_id$$' and scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' limit 1",
        "trial_information_query": "select ctfo_trial_id, enrollment_rate, study_name, total_recruitment_months, trial_end_dt, trial_start_dt, trial_status from $$schema$$.f_rpt_pi_flyout_trial_information where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' order by trial_start_dt DESC NULLS LAST ",
        "trial_trend_query": "select total_trials, trial_year from $$schema$$.f_rpt_pi_flyout_trial_trend where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True and ctfo_investigator_id = '$$ctfo_investigator_id$$' ",
        "update_active_flag_drug_details": "update $$schema$$.f_rpt_pi_flyout_drug_details set active_flag = False where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_experience_analysis_completed_trials": "update $$schema$$.f_rpt_pi_flyout_experience_analysis_completed_trials set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_experience_analysis_ongoing_trials": "update $$schema$$.f_rpt_pi_flyout_experience_analysis_ongoing_trials set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_experience_analysis_sponsor_details": "update $$schema$$.f_rpt_pi_flyout_experience_analysis_sponsor_details set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_investigator_details": "update $$schema$$.f_rpt_pi_flyout_investigator_details set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_investigator_profile": "update $$schema$$.f_rpt_pi_flyout_investigator_profile set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_trial_trend": "update $$schema$$.f_rpt_pi_flyout_trial_trend set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_trial_information": "update $$schema$$.f_rpt_pi_flyout_trial_information set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "update_active_flag_sponsor_experience": "update $$schema$$.f_rpt_pi_sponsor_experience set active_flag = False where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "insert_investigator_details_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' AND active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_flyout_investigator_details( SELECT b.*, c.nct_id AS recent_started_trial, d.nct_id AS latest_completed_trial, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM( SELECT DISTINCT ctfo_investigator_id, investigator_full_nm AS investigator_full_nm, investigator_email AS investigator_email, investigator_phone AS investigator_phone, investigator_country AS investigator_country, region_ctfo as region, investigator_city AS investigator_city, investigator_address AS investigator_address, array_to_string( array_agg(DISTINCT therapeutic_Area), ',' ) AS therapeutic_area, count(DISTINCT ctfo_trial_id) AS total_trials_all_ta, count(DISTINCT ctfo_site_id) AS total_sites, cast( date_part( 'year', min(trial_start_dt) ) AS BIGINT ) AS first_trial_date FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE pt_cycle_id = '$$pt_cycle_id$$' AND ctfo_investigator_id in ( select ctfo_investigator_id from fs1 ) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8 ) b LEFT JOIN ( SELECT coalesce(nct_id, ctfo_trial_id) AS nct_id, ctfo_investigator_id, trial_start_dt FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE trial_start_dt = ( SELECT max(trial_start_dt) FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE True ) ) c ON b.ctfo_investigator_id = c.ctfo_investigator_id LEFT JOIN ( SELECT nct_id, ctfo_investigator_id, trial_end_dt FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE trial_end_dt = ( SELECT max(trial_end_dt) FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE True ) ) d ON b.ctfo_investigator_id = d.ctfo_investigator_id WHERE b.ctfo_investigator_id IS NOT NULL ) ",
        "insert_experience_analysis_phase_completed_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' AND active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_flyout_experience_analysis_completed_trials( SELECT trial_phase AS phase, ctfo_investigator_id, count(DISTINCT ctfo_trial_id) AS trial_count_completed, 'dummy_value' AS category, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE trial_status = 'Completed' AND(ctfo_trial_id) IN ( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial trial INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE GROUP BY ps.ctfo_trial_id ) AND ctfo_investigator_id in ( select ctfo_investigator_id from fs1 ) AND trial_phase IS NOT NULL AND pt_cycle_id = '$$pt_cycle_id$$' GROUP BY 1, 2 ORDER BY trial_count_completed DESC ) ",
        "insert_drug_details_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_flyout_drug_details( SELECT DISTINCT dd.ctfo_investigator_id, drug_names, dd.disease, therapeutic_area, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details AS dd INNER JOIN $$schema_reporting$$.f_rpt_filters_trial AS trial ON trial.ctfo_trial_id = dd.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_country geo ON geo.ctfo_trial_id = dd.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON ps.ctfo_trial_id = dd.ctfo_trial_id WHERE TRUE AND dd.ctfo_investigator_id in( select ctfo_investigator_id from fs1 ) AND dd.pt_cycle_id = '$$pt_cycle_id$$' and $$filter_conditions$$ ) ",
        "insert_experience_analysis_sponsor_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_flyout_experience_analysis_sponsor_details( SELECT unnest( string_to_array(sponsor, '|') ) AS sponsor_name, count(DISTINCT ctfo_trial_id) AS sponsor_total_trials, ctfo_investigator_id, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE TRUE AND( ctfo_trial_id ) IN( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial trial INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE GROUP BY ps.ctfo_trial_id ) AND ctfo_investigator_id in ( select ctfo_investigator_id from fs1 ) and sponsor is not null AND pt_cycle_id = '$$pt_cycle_id$$' GROUP BY 1, 3 ORDER BY sponsor_total_trials DESC ) ",
        "insert_trial_trend_query": "WITH fs0 AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE trial_start_dt > '1999-12-31' GROUP BY 1), fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y' ) INSERT INTO $$schema$$.f_rpt_pi_flyout_trial_trend( SELECT Count(DISTINCT ctfo_trial_id) AS total_trials, Date_part('year', trial_start_dt) :: int AS trial_year, ctfo_investigator_id, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details nad WHERE TRUE AND pt_cycle_id = '$$pt_cycle_id$$' AND nad.ctfo_investigator_id in( select ctfo_investigator_id from fs1 ) AND(ctfo_trial_id) IN( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_trial_id IN( SELECT * FROM fs0 ) and $$filter_conditions$$ GROUP BY ps.ctfo_trial_id ) GROUP BY trial_year, ctfo_investigator_id ) ",
        "insert_trial_information_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_flyout_trial_information( SELECT distinct iss.ctfo_trial_id, trial_start_dt, enrollment_rate, total_recruitment_months, trial_end_dt, study_name, trial_status, ctfo_investigator_id, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details iss LEFT JOIN $$schema_reporting$$.f_rpt_filters_setup_all sa ON iss.ctfo_trial_id = sa.ctfo_trial_id WHERE( iss.ctfo_trial_id, iss.ctfo_site_id ) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE TRUE and $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_site_id ) AND iss.ctfo_investigator_id in ( select ctfo_investigator_id from fs1 ) AND iss.pt_cycle_id = '$$pt_cycle_id$$' ) ",
        "insert_experience_analysis_phase_ongoing_query": "INSERT INTO $$schema$$.f_rpt_pi_flyout_experience_analysis_ongoing_trials( SELECT trial_phase AS phase, count(DISTINCT ctfo_trial_id) AS trial_count_ongoing, 'dummy_value' AS category, ctfo_investigator_id, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE lower( trim(trial_status)) IN('ongoing') AND(ctfo_trial_id) IN( SELECT ps.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial trial INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE True GROUP BY ps.ctfo_trial_id ) AND pt_cycle_id = '$$pt_cycle_id$$' and trial_phase is not null AND ctfo_investigator_id in( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y' ) GROUP BY 1, 4 ORDER BY trial_count_ongoing DESC )",
        "insert_sponsor_experience_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_sponsor_experience( SELECT coalesce(sponsor, 'Other') AS sponsor, max(trial_start_dt) AS sponsor_last_trial_start_date, count(DISTINCT ctfo_trial_id) AS sponsor_total_trials, ctfo_investigator_id, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp FROM( SELECT unnest( string_to_array(sponsor, '|') ) AS sponsor, trial_start_dt, ctfo_trial_id, ctfo_investigator_id FROM $$schema_reporting$$.f_rpt_investigator_site_study_details WHERE ctfo_investigator_id in ( select ctfo_investigator_id from fs1 ) AND ( ctfo_trial_id, ctfo_investigator_id ) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_investigator_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE True AND $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_investigator_id ) AND trial_phase IS NOT NULL AND pt_cycle_id = '$$pt_cycle_id$$' ) aa GROUP BY 1, 4 ) ",
        "insert_investigator_profile_query": "with fs1 as( select distinct ctfo_investigator_id from $$schema$$.f_rpt_scenario_investigator_ranking_temp where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y') INSERT INTO $$schema$$.f_rpt_pi_flyout_investigator_profile( select max(trial_start_dt) as most_recent_started_trial, coalesce(nct_id, ctfo_trial_id) as latest_completed_trial, 'dummy_value' as most_recent_publication, ctfo_investigator_id, '$$theme_id$$' AS theme_id, '$$scenario_id$$' AS scenario_id, True AS active_flag, '$$created_by$$' AS created_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_by$$' AS updated_by, '$$updated_timestamp$$' AS updated_timestamp from $$schema_reporting$$.f_rpt_investigator_site_study_details where True AND( ctfo_trial_id, ctfo_investigator_id ) IN ( SELECT ps.ctfo_trial_id, geo.ctfo_investigator_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id WHERE True AND $$filter_conditions$$ GROUP BY ps.ctfo_trial_id, geo.ctfo_investigator_id ) AND ctfo_investigator_id in ( select ctfo_investigator_id from fs1 ) AND pt_cycle_id = '$$pt_cycle_id$$' group by 2,4 ) ",
        "count_investigator_drug_profile_query" : "select count(ctfo_investigator_id) from $$schema$$.f_rpt_pi_flyout_drug_details where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = True" ,
        "delete_drug_details" : "Delete from $$schema$$.f_rpt_pi_flyout_drug_details where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_flag_experience_analysis_completed_trials" : "Delete from $$schema$$.f_rpt_pi_flyout_experience_analysis_completed_trials where  theme_id = '$$theme_id$$' and active_flag = True",
        "delete_experience_analysis_ongoing_trials"	: "Delete from $$schema$$.f_rpt_pi_flyout_experience_analysis_ongoing_trials where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_experience_analysis_sponsor_details" : "Delete from $$schema$$.f_rpt_pi_flyout_experience_analysis_sponsor_details where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_investigator_details" : "Delete from $$schema$$.f_rpt_pi_flyout_investigator_details where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_investigator_profile" : "Delete from $$schema$$.f_rpt_pi_flyout_investigator_profile where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_trial_trend" : "Delete from $$schema$$.f_rpt_pi_flyout_trial_trend where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_trial_information" : "Delete from $$schema$$.f_rpt_pi_flyout_trial_information where theme_id = '$$theme_id$$' and active_flag = True",
        "delete_sponsor_experience" : "Delete from $$schema$$.f_rpt_pi_sponsor_experience where theme_id = '$$theme_id$$' and active_flag = True",

        "investigator_flyout": {
          "investigator_filters_query": "select global_filter, investigator_filter from $$schema$$.f_rpt_landscape_filters where userid = '$$userid$$' and landscape_id = '$$landscapeid$$' and active_flag = 'true'",
          "get_investigator_score": "select tier_score as overall_performance, disease_experience_years as disease_experience, recentness_of_activity, current_workload as ongoing_trials, years_of_experience as experience from $$schema$$.f_rpt_investigator_site_tiering_landscape WHERE ctfo_investigator_id = '$$investigator_id$$' and user_id = '$$userid$$' and landscape_id = '$$landscapeid$$' group by 1,2,3,4,5",
          "get_trial_trend": "select count(distinct ctfo_trial_id) as total_trials, date_part('year', trial_start_dt)::int as trial_year from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$' and (ctfo_trial_id, ctfo_investigator_id) in (select geo.ctfo_trial_id, geo.ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv geo inner join $$schema_reporting$$.f_rpt_filters_trial trial on geo.ctfo_trial_id = trial.ctfo_trial_id inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on trial.ctfo_trial_id = ps.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' and date_part('year', trial_start_dt)::int > 1999 and $$TA$$ $$DA$$ $$COUNTRY$$ $$REGION$$ $$PAT_SEGMENT$$ $$STUDY_NAME$$ group by geo.ctfo_trial_id, geo.ctfo_investigator_id) group by trial_year",
          "get_trial_experience_query": "SELECT coalesce(nct_id, ctfo_trial_id) AS ctfo_trial_id ,study_name ,trial_status ,date_part('year', trial_start_dt)::INT AS trial_start_year ,date_part('year', trial_end_dt)::INT AS trial_end_date ,total_recruitment_months AS enrollment_duration ,randomization_rate AS enrollment_rate FROM $$schema_reporting$$.f_rpt_site_study_details where ( ctfo_trial_id ,ctfo_site_id) IN ( SELECT ps.ctfo_trial_id ,geo.ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_trial trial ON geo.ctfo_trial_id = trial.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON trial.ctfo_trial_id = ps.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' AND $$TA$$ $$DA$$ $$COUNTRY$$ $$REGION$$ $$PAT_SEGMENT$$ $$STUDY_NAME$$ GROUP BY ps.ctfo_trial_id ,geo.ctfo_site_id ) limit $$LIMIT$$ offset $$OFFSET$$",
          "get_sponsor_experience_query": "select coalesce(sponsor, 'Other') as sponsor, count(distinct ctfo_trial_id) as sponsor_total_trials, max(trial_start_dt) as sponsor_last_trial_start_date from (select unnest(string_to_array(sponsor, '|')) as sponsor, trial_start_dt, ctfo_trial_id from $$schema_reporting$$.f_rpt_investigator_site_study_details where (ctfo_trial_id, ctfo_investigator_id) in (select geo.ctfo_trial_id, geo.ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv geo inner join $$schema_reporting$$.f_rpt_filters_trial trial on geo.ctfo_trial_id = trial.ctfo_trial_id inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on trial.ctfo_trial_id = ps.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' and $$TA$$ $$DA$$ $$COUNTRY$$ $$REGION$$ $$PAT_SEGMENT$$ $$STUDY_NAME$$ group by geo.ctfo_trial_id, geo.ctfo_investigator_id) and trial_phase is not null) aa group by 1 limit $$LIMIT$$ offset $$OFFSET$$",
          "get_completed_trial_analysis": "select trial_phase as phase, count(distinct ctfo_trial_id) as trial_count_completed, 'dummy_value' as category from $$schema_reporting$$.f_rpt_investigator_site_study_details where trial_status = 'Closed' and ctfo_investigator_id = '$$investigator_id$$' and (ctfo_trial_id, ctfo_investigator_id) in (select geo.ctfo_trial_id, geo.ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv geo inner join $$schema_reporting$$.f_rpt_filters_trial trial on geo.ctfo_trial_id = trial.ctfo_trial_id inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on trial.ctfo_trial_id = ps.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' group by geo.ctfo_trial_id, geo.ctfo_investigator_id) and trial_phase is not null group by 1 order by trial_count_completed DESC LIMIT 10",
          "get_ongoing_trial_analysis": "select trial_phase as phase, count(distinct ctfo_trial_id) as trial_count_ongoing, 'dummy_value' as category from $$schema_reporting$$.f_rpt_investigator_site_study_details where lower(trim(trial_status)) in('ongoing') and ctfo_investigator_id = '$$investigator_id$$' and( ctfo_trial_id, ctfo_investigator_id) in ( select geo.ctfo_trial_id, geo.ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv geo inner join $$schema_reporting$$.f_rpt_filters_trial trial on geo.ctfo_trial_id = trial.ctfo_trial_id inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on trial.ctfo_trial_id = ps.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' group by geo.ctfo_trial_id, geo.ctfo_investigator_id ) and trial_phase is not null group by 1 order by trial_count_ongoing DESC LIMIT 10 ",
          "get_each_sponsor_trials": "select unnest(string_to_array(sponsor, '|')) as sponsor_name, count(distinct ctfo_trial_id) as sponsor_total_trials from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$' and (ctfo_trial_id, ctfo_investigator_id) in (select ps.ctfo_trial_id, geo.ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv geo inner join $$schema_reporting$$.f_rpt_filters_trial trial on geo.ctfo_trial_id = trial.ctfo_trial_id inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on trial.ctfo_trial_id = ps.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' group by ps.ctfo_trial_id, geo.ctfo_investigator_id) and sponsor is not null group by 1 order by sponsor_total_trials DESC LIMIT 10",
          "get_affiliated_sites_query": "select row_number() over (order by site_tier, site_name) as rank, * from (select distinct site_nm as site_name, global_tier as site_tier, local_tier as country_tier, tier_score, concat(site_city, site_state, site_country) as site_address, site_city, site_state, site_country, '' as site_contact, screen_failure_rate_median as screen_failure_rate, disease_experience_year as disease_experience, average_startup_time_median as average_startup_time, enrollment_rate, similar_trials_experience, lost_opportunity_time_median as lost_opportunity_time, ongoing_trials as current_workload, recent_trials from (select * from $$schema$$.f_rpt_site_tiering_landscape where user_id = '$$userid$$' and landscape_id = '$$landscape_id$$' and active_flag = true) f_rpt_site_tiering_landscape where ctfo_site_id in (select ctfo_site_id from $$schema_reporting$$.f_rpt_filters_site_inv geo inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on geo.ctfo_trial_id = ps.ctfo_trial_id inner join $$schema_reporting$$.f_rpt_filters_trial trial on ps.ctfo_trial_id = trial.ctfo_trial_id where geo.ctfo_investigator_id = '$$investigator_id$$' and $$TA$$ $$DA$$ $$COUNTRY$$ $$REGION$$ $$PAT_SEGMENT$$ $$STUDY_NAME$$ group by 1) and active_flag = 'Y') a order by rank limit $$LIMIT$$ offset $$OFFSET$$",
          "get_drug_details_query": "select distinct drug_names, disease, therapeutic_area from $$schema_reporting$$.f_rpt_investigator_site_study_details as dd INNER JOIN $$schema_reporting$$.f_rpt_filters_trial as ft on ft.ctfo_trial_id = dd.ctfo_trial_id where dd.ctfo_investigator_id = '$$investigator_id$$' limit $$LIMIT$$ offset $$OFFSET$$",
          "get_patient_profile_query": "select b.*, c.nct_id as recent_started_trial, d.nct_id as latest_completed_trial from (select distinct ctfo_investigator_id, investigator_full_nm as inv_nm, investigator_email as inv_email, investigator_phone as phone, investigator_country as country, region,investigator_city as city, investigator_address as address, investigator_specialty as therapy_area, count(distinct ctfo_trial_id) as total_trials, count(distinct ctfo_site_id) as total_sites, cast(date_part('year', min(trial_start_dt)) as bigint) as first_trial_year from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$'  group by 1,2,3,4,5,6,7,8,9) b left join (select coalesce(nct_id,ctfo_trial_id) as nct_id ,ctfo_investigator_id, trial_start_dt from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$' and trial_start_dt = (select max(trial_start_dt) from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$' ) limit 10) c on b.ctfo_investigator_id = c.ctfo_investigator_id left join (select nct_id ,ctfo_investigator_id ,trial_end_dt from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$' and trial_end_dt = (select max(trial_end_dt) from $$schema_reporting$$.f_rpt_investigator_site_study_details where ctfo_investigator_id = '$$investigator_id$$' ) limit 10) d on b.ctfo_investigator_id = d.ctfo_investigator_id where b.ctfo_investigator_id is not null",
          "get_patient_physician_access_query": "select '14' as male, '6' as female, '2' as child, '20' as adult, '33' as in_network_physician_access from $$schema$$.f_rpt_investigator_site_tiering_landscape limit 1"
        }
      },
      "compare_scenarios_details": {
        "scenario_names_query": "select distinct scenario_id, scenario_name from $$schema$$.$$summary_table where scenario_id in $$scenario_id_list$$",
        "filter_queries": {
          "filter_criteria_query": "select filter_criteria_json from $$schema$$.$$study_criteria_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "phase_and_disease_query": "select scenario_id, phase, indication as disease from $$schema$$.$$summary_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';"
        },
        "metric_queries": {
          "distinct_country_count_query": "select count(distinct country_code) as country_count from $$schema$$.$$country_rank_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "distinct_countries_query": "select distinct country as distinct_countries from $$schema$$.$$country_rank_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "duration_query": "select duration from $$schema$$.$$summary_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "total_patients_query": "select no_of_patients from $$schema$$.$$summary_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "total_sites_rank_query": "select count(distinct ctfo_site_id) as total_sites from $$schema$$.$$site_rank_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "total_sites_optimized_query": "select count(distinct ctfo_site_id) as total_sites from $$schema$$.$$site_optimized_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "enrollment_rate_query": "select median_enrollment_rate as enrollment_rate from $$schema$$.$$country_rank_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "total_investigators_rank_query": "select count(distinct ctfo_investigator_id) as total_investigators from $$schema$$.$$pi_rank_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "total_investigators_optimized_query": "select count(distinct ctfo_investigator_id) as total_investigators from $$schema$$.$$pi_optimized_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "enrollment_count_query": "select target_enrl_subject as enrollment_count from $$schema$$.$$filter_constraints_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
          "tier_wise_site_rank_query": "select global_tier, count(distinct ctfo_site_id) from $$schema$$.$$site_rank_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y' group by global_tier;",
          "tier_wise_site_optimize_query": "select global_tier, count(distinct ctfo_site_id) from $$schema$$.$$site_optimized_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y' group by global_tier;"
        }
      },
      "export_details": {
        "scenario_summary_details_query": "select * from $$schema$$.$$summary_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
        "filter_criteria_query": "select filter_criteria_json from $$schema$$.$$study_criteria_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and active_flag = 'Y';",
        "site_weights_query": "select wt_average_startup_time, wt_randomization_rate, wt_lost_opportunity_time, wt_screen_failure_rate, wt_similar_trial_exp, wt_disease_exp, wt_current_workload, wt_recentness_trials from $$schema$$.$$site_weights_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and created_by = '$$created_by$$' and active_flag = 'Y';",
        "site_rank_list_query": "SELECT rank, ctfo_site_id, site_nm AS site_name, site_address, site_city, site_state, site_country, site_zip_code :: text, tier_score, global_tier, country_tier, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, tags, site_alias, current_workload_ta, completed_trials, sponsor_experience, competitor_experience FROM $$schema$$.$$site_rank_table WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' ORDER BY rank;",
        "country_rank_list_query": "SELECT rank ,country_code, country ,tier ,tier_score ,median_enrollment_rate ,median_average_startup_time ,median_screen_failure_rate ,patient_prevalance ,ongoing_trials_country ,perc_completed_trials ,high_perf_sites ,high_perf_investigators ,approved_targeted_treatment ,regulatory_iec_timeline ,patient_planned ,no_of_sites ,no_of_investigators ,recent_trials_country ,patients_enrolled ,total_trials ,patient_retention ,planned_patient_deviation ,planned_fsiv_deviation ,planned_fpfv_deviation ,post_trial_flag ,post_trial_details ,completed_closed_trial ,market_launch_flag FROM $$schema$$.f_rpt_scenario_country_ranking WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND country_list_id = '$$list_id$$' AND active_flag = 'Y' ORDER BY rank",
        "investigator_rank_list_query": "select rank,ctfo_investigator_id,investigator_full_nm,investigator_country,investigator_city,local_tier,tier_score,global_tier,enrollment_rate_median,screen_failure_rate_median,disease_experience_years,recentness_of_activity,similar_trials_experience,current_workload,ta_experience_years,total_trials_all_ta,completed_trials,years_of_experience,sponsor_experience,phase_experience,similar_drug_experience from $$schema$$.f_rpt_scenario_investigator_ranking where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and inv_list_id = '$$list_id$$' and active_flag = 'Y' order by rank;",
        "site_optimized_list_query": "SELECT rank ,site_nm AS site_name ,site_address ,site_city ,site_state ,site_country ,tier_score ,global_tier ,country_tier ,average_startup_time_median ,randomization_rate_median ,lost_opportunity_time_median ,screen_failure_rate_median ,similar_trials_experience ,disease_experience_year ,current_workload ,recentness_trials ,include_exclude ,reason ,comment ,tags ,current_workload_ta ,completed_trials ,sponsor_experience ,competitor_experience FROM $$schema$$.$$site_optimized_table WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND optimize_site_id = '$$optimize_id$$' AND active_flag = 'Y' ORDER BY rank;",
        "get_country_list_id_query": "select max(country_list_id) from $$schema$$.f_rpt_scenario_country_metric_weight_dtl where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag='Y'",
        "get_inv_list_id_query": "select max(inv_list_id) from $$schema$$.f_rpt_scenario_investigator_metric_weight_dtl where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag='Y'",
        "country_optimized_list_query": "SELECT rank ,country ,tier ,tier_score ,median_enrollment_rate ,median_average_startup_time ,median_screen_failure_rate ,patient_prevalance ,ongoing_trials_country ,perc_completed_trials ,high_perf_sites ,high_perf_investigators ,approved_targeted_treatment ,regulatory_iec_timeline ,patient_planned ,no_of_sites ,no_of_investigators ,recent_trials_country ,patients_enrolled ,total_trials ,patient_retention ,planned_patient_deviation ,planned_fsiv_deviation ,planned_fpfv_deviation ,post_trial_flag ,post_trial_details ,completed_closed_trial ,market_launch_flag FROM $$schema$$.$$optimized_table WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND optimize_site_id = '$$optimize_id$$' AND active_flag = 'Y' ORDER BY rank",
        "investigator_optimized_list_query": "select rank,investigator_full_nm,investigator_country,investigator_city,local_tier,tier_score,global_tier,enrollment_rate_median,screen_failure_rate_median,disease_experience_years,recentness_of_activity,similar_trials_experience,current_workload,ta_experience_years,total_trials_all_ta,completed_trials,years_of_experience,sponsor_experience,phase_experience,similar_drug_experience from $$schema$$.$$optimized_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and optimize_site_id = '$$optimize_id$$' and active_flag = 'Y' order by rank;",
        "tier_wise_total_sites_count_query": "select global_tier, count(distinct ctfo_site_id) as total_sites_count from $$schema$$.$$site_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y' group by 1 order by 1;",
        "tier_and_region_wise_sites_count_query": "select global_tier, region, count(distinct ctfo_site_id) as count from $$schema$$.$$site_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y' group by 1, 2 order by 1;",
        "tier_wise_total_inv_count_query": "select global_tier, count(distinct ctfo_investigator_id) as total_pi_count from $$schema$$.$$inv_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and inv_list_id = '$$list_id$$' and active_flag = 'Y' group by 1 order by 1;",
        "tier_and_region_wise_inv_count_query": "select global_tier, region, count(distinct ctfo_investigator_id) as count from $$schema$$.$$inv_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and inv_list_id = '$$list_id$$' and active_flag = 'Y' group by 1, 2 order by 1;",
        "tier_wise_total_optimize_inv_count_query": "select global_tier, count(distinct ctfo_investigator_id) as total_pi_count from $$schema$$.$$inv_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and optimize_site_id = '$$list_id$$' and active_flag = 'Y' group by 1 order by 1;",
        "tier_and_region_wise_optimize_inv_count_query": "select global_tier, region, count(distinct ctfo_investigator_id) as count from $$schema$$.$$inv_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and optimize_site_id = '$$list_id$$' and active_flag = 'Y' group by 1, 2 order by 1;",
        "optimization_criteria_query": "select cta_date, max_lsr_date, max_lsi_date, max_site_required, target_enrl_subject, min_threshold_enrolled_subjects, min_site_country, max_site_country from $$schema$$.$$filter_constraints_optimizer_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y';",
        "region_configurations_query": "select region, min_subject_pct, max_subject_pct, include_exclude, reason, comment from $$schema$$.$$region_optimizer_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y';",
        "country_configurations_query": "select country, enroll_rate_adj_fctr, min_act_site_duration, min_subject_pct, max_subject_pct, expctd_pct_subject_range, min_site_count, max_site_count, include_exclude, reason, comment from $$schema$$.$$country_optimizer_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and site_list_id = '$$site_list_id$$' and active_flag = 'Y';",
        "tier_wise_total_final_sites_count_query": "select global_tier, count(distinct ctfo_site_id) as total_sites_count from $$schema$$.$$site_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' group by 1 order by 1;",
        "tier_wise_total_final_inv_count_query": "select global_tier, count(distinct ctfo_investigator_id) as total_pi_count from $$schema$$.$$inv_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' group by 1 order by 1;",
        "tier_and_region_wise_final_sites_count_query": "select global_tier, region, count(distinct ctfo_site_id) as count from $$schema$$.$$site_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' group by 1, 2 order by 1;",
        "tier_and_region_wise_final_inv_count_query": "select global_tier, region, count(distinct ctfo_investigator_id) as count from $$schema$$.$$inv_table where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' group by 1, 2 order by 1;",
        "site_final_list_query": "SELECT rank, site_nm AS site_name, site_address, site_city, site_state, site_country, site_zip_code, tier_score, global_tier, country_tier, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, disease_experience_year, current_workload, recentness_trials, tags, site_alias, current_workload_ta, completed_trials, sponsor_experience, competitor_experience FROM $$schema$$.$$site_final_table WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND final_list_id = '$$final_list_id$$' AND active_flag = 'Y' ORDER BY rank; ",
        "country_final_list_query": "SELECT rank ,country ,tier ,tier_score ,median_enrollment_rate ,median_average_startup_time ,median_screen_failure_rate ,patient_prevalance ,ongoing_trials_country ,perc_completed_trials ,high_perf_sites ,high_perf_investigators ,approved_targeted_treatment ,regulatory_iec_timeline ,patient_planned ,no_of_sites ,no_of_investigators ,recent_trials_country ,patients_enrolled ,total_trials ,patient_retention ,planned_patient_deviation ,planned_fsiv_deviation ,planned_fpfv_deviation ,post_trial_flag ,post_trial_details ,completed_closed_trial ,market_launch_flag FROM $$schema$$.f_rpt_scenario_country_ranking_final WHERE theme_id = '$$theme_id$$' AND scenario_id = '$$scenario_id$$' AND final_list_id = '$$final_list_id$$' AND active_flag = 'Y' ORDER BY rank;",
        "investigator_final_list_query": "select rank,investigator_full_nm,investigator_country,investigator_city,local_tier,tier_score,global_tier,enrollment_rate_median,screen_failure_rate_median,disease_experience_years,recentness_of_activity,similar_trials_experience,current_workload,ta_experience_years,total_trials_all_ta,completed_trials,years_of_experience,sponsor_experience,phase_experience,similar_drug_experience from $$schema$$.f_rpt_scenario_investigator_ranking_final where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' order by rank;",
        "survey_ecda_status_details": "select * from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where survey_id in $$survey_id_list$$ and is_active and response_id is not Null;"
      },
      "f_rpt_region_optimizer_dtl": "select distinct region, region_cd, min_subject_pct, max_subject_pct, include_exclude, reason, comment, active_flag  from $$schema$$.f_rpt_region_optimizer_dtl where site_list_id = '$$site_list_id' and  Theme_id = '$$theme_id' and Scenario_id = '$$scenario_id'",
      "f_rpt_country_optimizer_dtl": "SELECT DISTINCT opt.sites_count ,opt.country ,opt.region ,opt.country_code ,opt.enroll_rate_adj_fctr ,opt.min_act_site_duration ,opt.min_subject_pct ,opt.max_subject_pct ,opt.expctd_pct_subject_range ,opt.min_site_count ,opt.max_site_count ,rank.include_exclude ,opt.reason ,opt.comment ,opt.active_flag ,rank.median_enrollment_rate AS default_enrollment_rate FROM $$schema$$.f_rpt_country_optimizer_dtl opt LEFT OUTER JOIN $$schema$$.f_rpt_scenario_country_ranking rank ON opt.country = rank.country AND opt.theme_id = rank.theme_id AND opt.scenario_id = rank.scenario_id WHERE opt.site_list_id = '$$site_list_id' AND opt.Theme_id = '$$theme_id' AND opt.Scenario_id = '$$scenario_id' AND rank.active_flag = 'Y'",
      "exclude_countries_for_forced_excluded_regions": "update $$schema$$.f_rpt_country_optimizer_dtl set include_exclude='exclude' where site_list_id='$$site_list_id$$' and active_flag='Y' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and region_code in ( select region_cd from $$schema$$.f_rpt_region_optimizer_dtl where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and include_exclude='exclude' and active_flag='Y');",
      "include_countries_for_forced_included_regions": "update $$schema$$.f_rpt_country_optimizer_dtl set include_exclude='include' where site_list_id='$$site_list_id$$' and active_flag='Y' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and region_code in ( select region_cd from $$schema$$.f_rpt_region_optimizer_dtl where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and include_exclude='include' and active_flag='Y');",
      "neutral_countries_for_neutral_regions": "update $$schema$$.f_rpt_country_optimizer_dtl set include_exclude=NULL where site_list_id='$$site_list_id$$' and active_flag='Y' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and region_code in ( select region_cd from $$schema$$.f_rpt_region_optimizer_dtl where site_list_id='$$site_list_id$$' and theme_id='$$theme_id$$' and scenario_id='$$scenario_id$$' and include_exclude in (NULL, '-') and active_flag='Y');",
      "get_constraints": "SELECT DISTINCT cta_date ,max_lsr_date ,CASE WHEN a.target_enrl_subject::INT IS NULL THEN case when b.no_of_patients = '' then NULL:: INT else b.no_of_patients::INT end ELSE a.target_enrl_subject END AS target_enrl_subject ,min_site_country ,max_lsi_date ,CASE WHEN a.max_site_required::INT IS NULL THEN case when b.no_of_sites = '' then NULL:: INT else b.no_of_sites::INT end ELSE a.max_site_required END AS max_site_required ,min_threshold_enrolled_subjects ,max_site_country FROM $$schema$$.$$table_name a LEFT OUTER JOIN $$schema$$.f_rpt_scenario_stdy_sumry b ON a.scenario_id = b.scenario_id AND a.theme_id = b.theme_id WHERE a.site_list_id = '$$site_list_id'AND a.Theme_id = '$$theme_id'AND a.Scenario_id = '$$scenario_id'AND a.active_flag = 'Y'AND b.active_flag = 'Y'",
      "greyed_out_data_query": "SELECT site_country, country_code, site_nm, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, scenario_id, theme_id, site_list_id FROM $$schema$$.f_rpt_scenario_site_ranking WHERE  site_list_id = '$$site_list_id' AND theme_id = '$$theme_id' AND scenario_id = '$$scenario_id' AND active_flag = 'Y' GROUP  BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10",
      "check_country_outreach_details": "SELECT scenario_id, country_name, theme_id, CASE WHEN include_in_trial = 'Yes' THEN 'include' WHEN include_in_trial = 'No' THEN 'exclude' ELSE NULL END  AS include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = True",
      "country_landscape": {
        "graph_country_dropdown_query": "SELECT $$search_field$$ FROM( SELECT ctfo_trial_id FROM $$schema_reporting$$.$$table1$$ WHERE $$TA$$ $$DA$$ GROUP BY 1) a INNER JOIN( SELECT ctfo_trial_id FROM $$schema_reporting$$.$$table2$$ WHERE $$sponsor$$ GROUP BY 1) b ON a.ctfo_trial_id = b.ctfo_trial_id INNER JOIN ( SELECT country ,ctfo_trial_id FROM $$schema_reporting$$.$$table3$$ WHERE $$region$$ $$country$$ AND lower($$search_field$$) LIKE lower('%$$search_value$$%') ) c ON b.ctfo_trial_id = c.ctfo_trial_id GROUP BY $$search_field$$ ORDER BY $$search_field$$ limit $$limit$$ offset $$offset$$",
        "country_map_details_for_site": "WITH temp_site_filter AS( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$trial_phase_filter_view1$$ $$ta_filter_view_1$$ $$disease_filter_view1$$ $$patient_segment_filter$$) ,temp_sponsor_filter AS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor_filter_view1$$ ) ,temp_country_filter AS ( SELECT * FROM ( SELECT country AS site_country ,ctfo_site_id ,ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE $$region_filter$$ GROUP BY 1 ,2 ,3 ORDER BY 1 ) A WHERE $$site_country$$ ) SELECT x.site_country AS country ,COUNT(DISTINCT x.ctfo_site_id) AS no_of_sites FROM temp_country_filter x where x.ctfo_trial_id = ANY (select * from temp_site_filter) and x.ctfo_trial_id = ANY (select * from temp_sponsor_filter) GROUP BY 1",
        "country_map_details_for_site_not_implemented": "SELECT country,COUNT(DISTINCT ctfo_site_id) AS no_of_sites FROM (select * from $$schema_reporting$$.f_rpt_filters_setup_all where $$trial_phase_filter_view1$$ $$ta_filter_view_1$$ $$disease_filter_view1$$ $$patient_segment_filter$$) a inner join (select * from $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor_filter_view1$$) b on a.ctfo_trial_id = b.ctfo_trial_id inner join (select * from $$schema_reporting$$.f_rpt_site_study_details where $$country_filter$$ $$region_filter$$) c on b.ctfo_trial_id = c.ctfo_trial_id GROUP BY site_country",
        "country_map_details_for_patient": "SELECT country ,CASE WHEN max(both_prev) IS NULL THEN max(coalesce(male_prev, 0)) + max(coalesce(female_prev, 0)) ELSE max(coalesce(both_prev, male_prev, female_prev)) END AS total_prevalence FROM( SELECT country ,gender ,SUM(CASE WHEN gender = 'Male' OR gender = 'male' THEN total_prevalence END) AS male_prev ,SUM(CASE WHEN gender = 'Female' OR gender = 'female' THEN total_prevalence END) AS female_prev ,SUM(CASE WHEN gender = 'Both' THEN total_prevalence END) AS both_prev FROM ( SELECT country ,gender ,total_prevalence FROM ( SELECT country ,pt.gender ,SUM(CASE WHEN data_source = 'drg' AND age NOT IN ( 'All' ,'Total') THEN prevalence WHEN data_source = 'globocan' AND age NOT IN ( 'All' ,'Total' ) THEN prevalence WHEN data_source IN ('data monitor') AND pt.gender NOT IN ('All') THEN CASE WHEN pt.gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( pt.gender = 'Male' OR pt.gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END WHEN data_source IN ('ihme') AND pt.gender NOT IN ('All') THEN CASE WHEN pt.gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( pt.gender = 'Male' OR pt.gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END END) AS total_prevalence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$ta_filter_view_pt$$ $$disease_filter_view_pt$$ $$country_filter$$ $$region_filter$$ $$data_source$$ GROUP BY country ,pt.gender ) pt WHERE total_prevalence IS NOT NULL ) pt GROUP BY country ,gender ) pt GROUP BY country",
        "country_map_details_for_investigator": "SELECT country ,COUNT(DISTINCT ctfo_investigator_id) AS no_of_investigators FROM $$schema_reporting$$.f_rpt_filters_site_inv where ctfo_trial_id = ANY( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$ta_filter_view_1$$ $$disease_filter_view1$$ $$patient_segment_filter$$ $$trial_phase_filter_view1$$) and ctfo_trial_id = ANY ( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor_filter_view1$$ ) AND $$country_filter$$ $$region_filter$$ group by country",
        "country_map_details_for_trials": "SELECT country, count( DISTINCT( CASE WHEN lower(trim(b.trial_status)) IN('ongoing', 'planned') THEN b.ctfo_trial_id ELSE NULL END) ) AS total_ongoing_trials FROM $$schema_reporting$$.f_rpt_filters_trial b inner join $$schema_reporting$$.f_rpt_filters_site_inv c on b.ctfo_trial_id = c.ctfo_trial_id where $$sponsor_filter_view1$$ $$country_filter$$ $$region_filter$$ and b.ctfo_trial_id = ANY ( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all where $$trial_phase_filter_view1$$ $$ta_filter_view_1$$ $$disease_filter_view1$$ $$patient_segment_filter$$ ) GROUP BY country ",
        "country_map_filter_details": "select * from $$schema$$.f_rpt_landscape_filters where userid = '$$userid$$' and landscape_id = '$$landscape_id$$' and active_flag = True",
        "country_details": "INSERT INTO $$schema$$.f_rpt_country_landscape_detail_temp( SELECT DISTINCT country, num_of_sites, num_of_investigators, Median( Cast( regulatory_iec_time AS DOUBLE PRECISION) ) AS regulatory_iec_time, Median(enrollment_rate) AS enrollment_rate, Median( Cast( recent_trials_country AS DOUBLE PRECISION ) ) AS recent_trials_country, Median( Cast(total_trials AS DOUBLE PRECISION) ) AS total_trials, Median( Cast( competing_treatment AS DOUBLE PRECISION ) ) AS competing_trials, Median(total_prevalence) AS total_prevalence, Median( Cast( ongoing_trials_country AS DOUBLE PRECISION ) ) AS ongoing_trials_country, high_perf_investigators, high_perf_sites, Median(country_score) AS country_score, landscape_id, user_id, updated_by, created_timestamp, updated_timestamp, active_flag FROM( WITH filter_criteria_set_temp AS ( SELECT b.ctfo_trial_id, c.trial_phase, c.patient_segment, b.sponsor, c.disease, c.therapeutic_area FROM ( SELECT ctfo_trial_id, trial_status, sponsor FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor_filter_view1$$ ) b INNER JOIN ( SELECT trial_phase, patient_segment, disease, therapeutic_area, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$trial_phase_filter_view1$$ $$ta_filter_view_1$$ $$disease_filter_view1$$ $$patient_segment_view1$$ ) c ON Trim(b.ctfo_trial_id) = Trim(c.ctfo_trial_id) GROUP BY 1, 2, 3, 4, 5, 6 ), filter_criteria_set AS ( SELECT region, country, country_code, filter_criteria_set_temp.ctfo_trial_id, trial_phase, patient_segment, sponsor, disease, therapeutic_area FROM ( SELECT region, country, country_code, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE $$country_filter$$ $$region_filter$$ GROUP BY 1, 2, 3, 4 ) site_inv INNER JOIN filter_criteria_set_temp ON filter_criteria_set_temp.ctfo_trial_id = site_inv.ctfo_trial_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9 ), temp_filtered_trials AS ( SELECT country_code, Median(randomization_rate) AS enrollment_rate, Count( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'ongoing') THEN ctfo_trial_id END ) AS ongoing_trials_country, Count(DISTINCT ctfo_trial_id) AS filtered_trials FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE EXISTS ( SELECT ctfo_trial_id FROM filter_criteria_set filter WHERE site.ctfo_trial_id = filter.ctfo_trial_id ) GROUP BY country_code ), temp_total_trials AS ( SELECT country_code, Count(DISTINCT site.ctfo_trial_id) AS total_trials FROM $$schema_reporting$$.f_rpt_site_study_details site LEFT JOIN $$schema_reporting$$.f_rpt_filters_setup_all st ON site.ctfo_trial_id = st.ctfo_trial_id WHERE $$disease_filter_view_st$$ $$ta_filter_view_st$$ GROUP BY country_code ), targ_treatment AS ( SELECT country_code, count(DISTINCT drug_id) AS approved_targeted_treatment FROM $$schema_reporting$$.f_rpt_drug_details drg WHERE EXISTS ( SELECT fs.disease FROM filter_criteria_set fs WHERE lower( trim(drg.disease_nm) ) = lower( trim(fs.disease) ) GROUP BY fs.disease ) AND disease_status IN ('Registered', 'Launched') AND country_status IN ('Registered', 'Launched') GROUP BY country_code ), temp_total_prevalence AS ( SELECT country, CASE WHEN Max(both_prev) IS NULL THEN Max( Coalesce(male_prev, 0) ) + Max( Coalesce(female_prev, 0) ) ELSE Max( Coalesce( both_prev, male_prev, female_prev ) ) END AS total_prevalence FROM ( SELECT country, gender, SUM( CASE WHEN gender = 'Male' OR gender = 'male' THEN total_prevalence END ) AS male_prev, SUM( CASE WHEN gender = 'Female' OR gender = 'female' THEN total_prevalence END ) AS female_prev, SUM( CASE WHEN gender = 'Both' THEN total_prevalence END ) AS both_prev FROM ( SELECT country, gender, total_prevalence FROM ( SELECT country, gender, SUM( CASE WHEN data_source = 'drg' AND age NOT IN ('All', 'Total') THEN prevalence WHEN data_source = 'globocan' AND age NOT IN ('All', 'Total') THEN prevalence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') AND year = Extract( year FROM CURRENT_DATE ) THEN CASE WHEN gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( gender = 'Male' OR gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END END ) AS total_prevalence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$ta_filter_view_pt$$ $$disease_filter_view_pt$$ $$country_filter$$ $$region_filter$$ $$data_source$$ GROUP BY country, gender ) pt WHERE total_prevalence IS NOT NULL ) pt GROUP BY country, gender ) pt GROUP BY country ), temp_recent_trials AS ( SELECT site_country AS country, country_code, Count(DISTINCT ctfo_trial_id) AS recent_trials_country FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE Extract( year FROM trial_start_dt ) > Extract( year FROM CURRENT_DATE ) -6 AND EXISTS ( SELECT ctfo_trial_id FROM filter_criteria_set filter WHERE site.ctfo_trial_id = filter.ctfo_trial_id ) GROUP BY country, country_code ), investigator_tier AS ( WITH site_inv AS ( SELECT ctfo_investigator_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv a INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE $$country_filter$$ $$region_filter$$ $$disease_filter_view1$$ GROUP BY 1, 2 ) SELECT country, num_of_investigators, top_inv_country, num_of_investigators_tier FROM ( SELECT country AS country, Count( DISTINCT (inv_rank.ctfo_investigator_id) ) AS num_of_investigators, Coalesce( Count( DISTINCT CASE WHEN global_tier = '1' THEN inv_rank.ctfo_investigator_id END ), 0 ) AS top_inv_country FROM ( SELECT * FROM $$schema$$.f_rpt_investigator_site_tiering_landscape WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' ) inv_rank INNER JOIN site_inv ON inv_rank.ctfo_investigator_id = site_inv.ctfo_investigator_id GROUP BY country ) abc LEFT JOIN ( SELECT sum(num_of_investigators_tier) AS num_of_investigators_tier FROM ( SELECT country AS country, Count( DISTINCT (inv_rank.ctfo_investigator_id) ) AS num_of_investigators_tier FROM ( SELECT * FROM $$schema$$.f_rpt_investigator_site_tiering_landscape WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' AND global_tier = '1' ) inv_rank INNER JOIN site_inv ON inv_rank.ctfo_investigator_id = site_inv.ctfo_investigator_id GROUP BY country ) a ) xyz ON 1 = 1 ), sites_tier AS ( SELECT country, num_of_sites, top_sites_country, num_of_sites_tier FROM ( SELECT site_country AS country, Count( DISTINCT (ctfo_site_id) ) AS num_of_sites, Coalesce( Count( DISTINCT CASE WHEN global_tier = '1' THEN ctfo_site_id END ), 0 ) AS top_sites_country FROM $$schema$$.f_rpt_site_tiering_landscape site_rank WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' GROUP BY site_country ) abc LEFT JOIN ( SELECT Count( DISTINCT (ctfo_site_id) ) AS num_of_sites_tier FROM $$schema$$.f_rpt_site_tiering_landscape site_rank WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' AND global_tier = '1' ) xyz ON 1 = 1 ), temp_rpt_country AS ( SELECT a.regulatory_iec_time, g.country, b.recent_trials_country, e.filtered_trials, x.total_trials, j.approved_targeted_treatment AS competing_treatment, c.total_prevalence, e.ongoing_trials_country, e.enrollment_rate, CASE WHEN top_sites_country <> 0 THEN ( top_sites_country / num_of_sites_tier :: FLOAT ) * 100 ELSE 0 END AS high_perf_sites, CASE WHEN top_inv_country <> 0 THEN ( top_inv_country / num_of_investigators_tier :: FLOAT ) * 100 ELSE 0 END AS high_perf_investigators, num_of_sites, num_of_investigators FROM filter_criteria_set g LEFT JOIN temp_filtered_trials e ON LOWER( TRIM(g.country_code) ) = LOWER( TRIM(e.country_code) ) LEFT JOIN temp_total_trials x ON LOWER( TRIM(x.country_code) ) = LOWER( TRIM(e.country_code) ) LEFT JOIN temp_recent_trials b ON LOWER( TRIM(x.country_code) ) = LOWER( TRIM(b.country_code) ) LEFT JOIN targ_treatment j ON LOWER( TRIM(j.country_code) ) = LOWER( TRIM(e.country_code) ) LEFT JOIN $$schema_reporting$$.f_rpt_country a ON LOWER( TRIM(g.country) ) = LOWER( TRIM(a.country) ) LEFT JOIN temp_total_prevalence c ON LOWER( TRIM(a.country) ) = LOWER( TRIM(c.country) ) LEFT JOIN sites_tier h ON LOWER( TRIM(h.country) ) = LOWER( TRIM(g.country) ) LEFT JOIN investigator_tier i ON LOWER( TRIM(i.country) ) = LOWER( TRIM(g.country) ) ), temp_country_metrics AS ( SELECT regulatory_iec_time, enrollment_rate, num_of_sites, num_of_investigators, country, recent_trials_country, filtered_trials, total_trials, competing_treatment, total_prevalence, ongoing_trials_country, high_perf_investigators, high_perf_sites, Coalesce( Cast( ( enrollment_rate - min_median_enrollment_rate ) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_median_enrollment_rate - min_median_enrollment_rate ) AS DOUBLE PRECISION ), 0 ), 0 ) AS norm_median_enrollment_rate, 1 - ( Coalesce( Cast( ( ongoing_trials_country - min_ongoing_trials_country ) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_ongoing_trials_country - min_ongoing_trials_country ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_ongoing_trials_country, 1 - ( Coalesce( Cast( ( recent_trials_country - min_recent_trials_country ) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_recent_trials_country - min_recent_trials_country ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_recent_trials_country, 1 - ( Coalesce( Cast( ( competing_treatment - min_competing_treatment ) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_competing_treatment - min_competing_treatment ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_competing_treatment_country, 1 - ( Coalesce( Cast( (num_of_sites - min_num_of_sites) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_num_of_sites - min_num_of_sites ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_num_of_sites, 1 - ( Coalesce( Cast( ( num_of_investigators - min_num_of_investigators ) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_num_of_investigators - min_num_of_investigators ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_num_of_investigators, 1 - ( Coalesce( Cast( ( total_prevalence - min_total_prevalence ) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_total_prevalence - min_total_prevalence ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_prevalence, 1 - ( Coalesce( Cast( (total_trials - min_total_trials) AS DOUBLE PRECISION ) / Nullif( Cast( ( max_total_trials - min_total_trials ) AS DOUBLE PRECISION ), 0 ), 0 ) ) AS norm_total_trials FROM ( SELECT regulatory_iec_time, enrollment_rate, num_of_sites, num_of_investigators, country, recent_trials_country, filtered_trials, total_trials, competing_treatment, total_prevalence, ongoing_trials_country, high_perf_investigators, high_perf_sites FROM temp_rpt_country ) D CROSS JOIN ( SELECT Max(enrollment_rate) AS min_median_enrollment_rate, Min(enrollment_rate) AS max_median_enrollment_rate, Max(ongoing_trials_country) AS max_ongoing_trials_country, Min(ongoing_trials_country) AS min_ongoing_trials_country, Max(num_of_sites) AS max_num_of_sites, Min(num_of_sites) AS min_num_of_sites, Max(num_of_investigators) AS max_num_of_investigators, Min(num_of_investigators) AS min_num_of_investigators, Max(recent_trials_country) AS max_recent_trials_country, Min(recent_trials_country) AS min_recent_trials_country, Max(competing_treatment) AS max_competing_treatment, Min(competing_treatment) AS min_competing_treatment, Max(total_prevalence) AS max_total_prevalence, Min(total_prevalence) AS min_total_prevalence, Max(total_trials) AS max_total_trials, Min(total_trials) AS min_total_trials FROM temp_rpt_country ) min_max ), country_met AS ( SELECT country, num_of_sites, num_of_investigators, regulatory_iec_time, enrollment_rate, recent_trials_country, total_trials, competing_treatment, total_prevalence, ongoing_trials_country, high_perf_investigators, high_perf_sites, ( ( Coalesce(norm_prevalence, 0) * 0.125 ) + ( norm_ongoing_trials_country * 0.125 ) + ( Coalesce(norm_median_enrollment_rate, 0) * 0.125 ) + ( Coalesce( norm_competing_treatment_country, 0 ) * 0.125 ) + ( Coalesce(norm_recent_trials_country, 0) * 0.125 ) + ( Coalesce(norm_total_trials, 0) * 0.125 ) + ( Coalesce(norm_num_of_sites, 0) * 0.125 ) + ( Coalesce(norm_num_of_investigators, 0) * 0.125 ) ) AS country_score FROM temp_country_metrics ) SELECT country, num_of_sites, num_of_investigators, regulatory_iec_time, enrollment_rate, recent_trials_country, total_trials, competing_treatment, total_prevalence, ongoing_trials_country, high_perf_investigators, high_perf_sites, country_score, LOWER( CONCAT ( country, num_of_sites, num_of_investigators, regulatory_iec_time, enrollment_rate, recent_trials_country, total_trials, competing_treatment, total_prevalence, ongoing_trials_country, high_perf_investigators, high_perf_sites, country_score ) ) AS search_col, '$$landscape_id$$' AS landscape_id, '$$user_id$$' AS user_id, '$$updated_by$$' AS updated_by, TO_TIMESTAMP( '$$created_timestamp$$', 'YYYY/MM/DD/HH24:MI:ss' ) AS created_timestamp, TO_TIMESTAMP( '$$updated_timestamp$$', 'YYYY/MM/DD/HH24:MI:ss' ) AS updated_timestamp, '$$active_flag$$' AS active_flag FROM country_met ) AS a $$search_value$$ GROUP BY country, high_perf_sites, high_perf_investigators, num_of_sites, num_of_investigators, country_score, landscape_id, user_id, updated_by, created_timestamp, updated_timestamp, active_flag ) ",
        "delete_country_landscape_query" : "delete from $$schema$$.f_rpt_country_landscape_detail_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "drug_profile": "SELECT dd.drug_nm AS drug_nm ,dd.country_status AS country_status ,lower(dd.disease_nm) AS disease_nm ,dd.originator AS originator FROM $$schema_reporting$$.f_rpt_drug_details AS dd LEFT JOIN( SELECT ctfo_trial_id ,drug_names FROM $$schema_reporting$$.f_rpt_filters_trial WHERE true $$sponsor_filter$$) ft ON ft.drug_names = dd.drug_nm LEFT JOIN $$schema_reporting$$.f_rpt_filters_setup_all AS al ON ft.ctfo_trial_id = al.ctfo_trial_id WHERE true $$ta_filter_dd_view$$ $$disease_filter_nm$$ $$trial_phase_filter_al$$ $$region_filter_dd$$ $$patient_segment_filter_al$$ $$originator_filter$$ AND dd.country = '$$country$$' GROUP BY 1 ,2 ,3 ,4 order by $$orderby$$ $$order_dir$$ limit $$limit$$ offset $$offset$$ ",
        "phase": "SELECT trial_phase as phase, total_ongoing_trials, ongoing_trials_count, planned_trials_count, closed_trials_count, phase1_trials_count, phase2_trials_count, phase3_trials_count, phase4_trials_count, phase1A_trials_count, phase12_trials_count, phase23_trials_count, phase34_trials_count, total_trials FROM( SELECT trial_phase, COUNT( DISTINCT CASE WHEN ( lower( trim(trial_status)) = 'open' ) THEN c.ctfo_trial_id END ) AS ongoing_trials_count, COUNT( DISTINCT CASE WHEN ( lower( trim(trial_status) ) = 'planned' ) THEN c.ctfo_trial_id END ) AS planned_trials_count, COUNT( DISTINCT CASE WHEN ( lower( trim(trial_status) ) = 'completed' ) THEN c.ctfo_trial_id END ) AS closed_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1') THEN c.ctfo_trial_id END ) AS phase1_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2') THEN c.ctfo_trial_id END ) AS phase2_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3') THEN c.ctfo_trial_id END ) AS phase3_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '4') THEN c.ctfo_trial_id END ) AS phase4_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1A') THEN c.ctfo_trial_id END ) AS phase1A_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1/2') THEN c.ctfo_trial_id END ) AS phase12_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2/3') THEN c.ctfo_trial_id END ) AS phase23_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3/4') THEN c.ctfo_trial_id END ) AS phase34_trials_count FROM ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ $$trial_phase_filter$$ $$patient_segment_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT country, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY country, ctfo_trial_id ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( lower( trim(trial_status) ) = 'Ongoing' OR lower( trim(trial_status) ) = 'Planned' ) THEN 'Open' WHEN ( lower( trim(trial_status) ) = 'completed' ) THEN 'Closed' WHEN ( lower( trim(trial_status) ) = 'planned' ) THEN 'Planned' WHEN ( lower( trim(trial_status) ) = 'others' ) THEN 'Other' END ) AS trial_status FROM $$schema_reporting$$.f_rpt_filters_trial WHERE true $$sponsor_filter$$ GROUP BY 1, 2 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) GROUP BY 1 ) abc LEFT JOIN ( SELECT COUNT(DISTINCT c.ctfo_trial_id) AS total_trials, COUNT( DISTINCT CASE WHEN (trial_status = 'Open') THEN c.ctfo_trial_id END ) as total_ongoing_trials FROM ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT country, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY country, ctfo_trial_id ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( lower( trim(trial_status) ) = 'ongoing' OR lower( trim(trial_status) ) = 'planned' ) THEN 'Open' WHEN ( lower( trim(trial_status) ) = 'completed' ) THEN 'Closed' WHEN ( lower( trim(trial_status) ) = 'planned' ) THEN 'Planned' WHEN ( lower( trim(trial_status) ) = 'others' ) THEN 'Other' END ) AS trial_status FROM $$schema_reporting$$.f_rpt_filters_trial GROUP BY 1, 2 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) ) xyz ON 1 = 1 ",
        "trial_status": "SELECT trial_status, total_ongoing_trials, ongoing_trials_count, planned_trials_count, closed_trials_count, phase1_trials_count, phase2_trials_count, phase3_trials_count, phase4_trials_count, phase1A_trials_count, phase12_trials_count, phase23_trials_count, phase34_trials_count, total_trials FROM( SELECT trial_status, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'open') THEN c.ctfo_trial_id END) AS ongoing_trials_count, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'planned') THEN c.ctfo_trial_id END ) AS planned_trials_count, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'completed') THEN c.ctfo_trial_id END ) AS closed_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1') THEN c.ctfo_trial_id END ) AS phase1_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2') THEN c.ctfo_trial_id END ) AS phase2_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3') THEN c.ctfo_trial_id END ) AS phase3_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '4') THEN c.ctfo_trial_id END ) AS phase4_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1A') THEN c.ctfo_trial_id END ) AS phase1A_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1/2') THEN c.ctfo_trial_id END ) AS phase12_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2/3') THEN c.ctfo_trial_id END ) AS phase23_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3/4') THEN c.ctfo_trial_id END ) AS phase34_trials_count FROM ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ $$trial_phase_filter$$ $$patient_segment_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT country, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY country, ctfo_trial_id ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( trial_status = 'Ongoing' OR trial_status = 'Planned' ) THEN 'Open' WHEN (lower(trim(trial_status)) = 'completed') THEN 'Closed' WHEN (lower(trim(trial_status)) = 'planned') THEN 'Planned' WHEN (lower(trim(trial_status)) = 'others') THEN 'Other' END ) AS trial_status FROM $$schema_reporting$$.f_rpt_filters_trial WHERE true $$sponsor_filter$$ GROUP BY 1, 2 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) GROUP BY 1 ) abc LEFT JOIN ( SELECT COUNT(DISTINCT c.ctfo_trial_id) AS total_trials, COUNT( DISTINCT CASE WHEN (trial_status = 'Open') THEN c.ctfo_trial_id END ) as total_ongoing_trials FROM ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT country, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY country, ctfo_trial_id ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( trial_status = 'Ongoing' OR trial_status = 'Planned' ) THEN 'Open' WHEN (lower(trim(trial_status)) = 'completed') THEN 'Closed' WHEN (lower(trim(trial_status)) = 'planned') THEN 'Planned' WHEN (lower(trim(trial_status)) = 'others') THEN 'Other' END ) AS trial_status FROM $$schema_reporting$$.f_rpt_filters_trial GROUP BY 1, 2 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) ) xyz ON 1 = 1 ",
        "sponsor": "select sponsor, total_ongoing_trials, ongoing_trials_count, planned_trials_count, closed_trials_count, phase1_trials_count, phase2_trials_count, phase3_trials_count, phase4_trials_count, phase1A_trials_count, phase12_trials_count, phase23_trials_count, phase34_trials_count, total_trials from( SELECT b.sponsor, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'open') THEN c.ctfo_trial_id END) AS ongoing_trials_count, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'planned') THEN c.ctfo_trial_id END ) AS planned_trials_count, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'completed') THEN c.ctfo_trial_id END ) AS closed_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1') THEN c.ctfo_trial_id END ) AS phase1_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2') THEN c.ctfo_trial_id END ) AS phase2_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3') THEN c.ctfo_trial_id END ) AS phase3_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '4') THEN c.ctfo_trial_id END ) AS phase4_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1A') THEN c.ctfo_trial_id END ) AS phase1A_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1/2') THEN c.ctfo_trial_id END ) AS phase12_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2/3') THEN c.ctfo_trial_id END ) AS phase23_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3/4') THEN c.ctfo_trial_id END ) AS phase34_trials_count FROM ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ $$trial_phase_filter$$ $$patient_segment_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT ctfo_trial_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY ctfo_trial_id, country ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( lower(trim(trial_status)) = 'ongoing' OR lower(trim(trial_status)) = 'planned' ) THEN 'Open' WHEN (lower(trim(trial_status)) = 'completed') THEN 'Closed' WHEN (lower(trim(trial_status)) = 'planned') THEN 'Planned' WHEN (lower(trim(trial_status)) = 'others') THEN 'Other' END ) AS trial_status, sponsor FROM $$schema_reporting$$.f_rpt_filters_trial WHERE true $$sponsor_filter$$ GROUP BY 1, 2, 3 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) group by 1 ) abc left join ( select COUNT(DISTINCT c.ctfo_trial_id) AS total_trials, COUNT( DISTINCT CASE WHEN (trial_status = 'Open') THEN c.ctfo_trial_id END ) as total_ongoing_trials from ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT ctfo_trial_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY ctfo_trial_id, country ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( lower(trim(trial_status)) = 'ongoing' OR lower(trim(trial_status)) = 'planned' ) THEN 'Open' WHEN (lower(trim(trial_status)) = 'completed') THEN 'Closed' WHEN (lower(trim(trial_status)) = 'planned') THEN 'Planned' WHEN (lower(trim(trial_status)) = 'others') THEN 'Other' END ) AS trial_status, sponsor FROM $$schema_reporting$$.f_rpt_filters_trial GROUP BY 1, 2, 3 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) ) xyz on 1 = 1 ",
        "drug": "select drug_names as drug, total_ongoing_trials, ongoing_trials_count, planned_trials_count, closed_trials_count, phase1_trials_count, phase2_trials_count, phase3_trials_count, phase4_trials_count, phase1A_trials_count, phase12_trials_count, phase23_trials_count, phase34_trials_count, total_trials from( SELECT b.drug_names, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'open') THEN c.ctfo_trial_id END) AS ongoing_trials_count, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'planned') THEN c.ctfo_trial_id END ) AS planned_trials_count, COUNT( DISTINCT CASE WHEN (lower(trim(trial_status)) = 'completed') THEN c.ctfo_trial_id END ) AS closed_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1') THEN c.ctfo_trial_id END ) AS phase1_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2') THEN c.ctfo_trial_id END ) AS phase2_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3') THEN c.ctfo_trial_id END ) AS phase3_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '4') THEN c.ctfo_trial_id END ) AS phase4_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1A') THEN c.ctfo_trial_id END ) AS phase1A_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '1/2') THEN c.ctfo_trial_id END ) AS phase12_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '2/3') THEN c.ctfo_trial_id END ) AS phase23_trials_count, COUNT( DISTINCT CASE WHEN (trial_phase = '3/4') THEN c.ctfo_trial_id END ) AS phase34_trials_count FROM ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ $$trial_phase_filter$$ $$patient_segment_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT ctfo_trial_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY ctfo_trial_id, country ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( lower(trim(trial_status)) = 'ongoing' OR lower(trim(trial_status)) = 'planned' ) THEN 'Open' WHEN (lower(trim(trial_status)) = 'completed') THEN 'Closed' WHEN (lower(trim(trial_status)) = 'planned') THEN 'Planned' WHEN (lower(trim(trial_status)) = 'others') THEN 'Other' END ) AS trial_status, drug_names FROM $$schema_reporting$$.f_rpt_filters_trial WHERE true $$sponsor_filter$$ GROUP BY 1, 2, 3 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) group by 1 ) abc left join ( select COUNT(DISTINCT c.ctfo_trial_id) AS total_trials, COUNT( DISTINCT CASE WHEN (trial_status = 'Open') THEN c.ctfo_trial_id END ) as total_ongoing_trials from ( SELECT ctfo_trial_id, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE true $$ta_filter$$ $$disease_filter$$ GROUP BY ctfo_trial_id, trial_phase ) c INNER JOIN ( SELECT ctfo_trial_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE true $$region_filter$$ AND country = '$$country$$' GROUP BY ctfo_trial_id, country ) a ON TRIM(c.ctfo_trial_id) = TRIM(a.ctfo_trial_id) INNER JOIN ( SELECT ctfo_trial_id, ( CASE WHEN ( lower(trim(trial_status)) = 'ongoing' OR lower(trim(trial_status)) = 'planned' ) THEN 'Open' WHEN (lower(trim(trial_status)) = 'completed') THEN 'Closed' WHEN (lower(trim(trial_status)) = 'planned') THEN 'Planned' WHEN (lower(trim(trial_status)) = 'others') THEN 'Other' END ) AS trial_status, drug_names FROM $$schema_reporting$$.f_rpt_filters_trial GROUP BY 1, 2, 3 ) b ON TRIM(a.ctfo_trial_id) = TRIM(b.ctfo_trial_id) ) xyz on 1 = 1 ",
        "site_inv_profile": "WITH temp_site_filter AS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$ta_filter$$ $$disease_filter$$ $$trial_phase_filter$$ $$patient_segment_filter$$ ), temp_sponsor_filter AS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor_filter$$ ), temp_country_filter AS ( SELECT * FROM ( SELECT country AS site_country, ctfo_site_id, ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_site_inv a WHERE $$region_filter$$ GROUP BY 1, 2, 3 ORDER BY 1 ) A WHERE site_country = '$$country$$' ) SELECT count(DISTINCT ( CASE WHEN global_tier = 1 THEN x.ctfo_site_id ELSE NULL END )) AS tier1, count(DISTINCT ( CASE WHEN global_tier = 2 THEN x.ctfo_site_id ELSE NULL END )) AS tier2, count(DISTINCT ( CASE WHEN global_tier = 3 THEN x.ctfo_site_id ELSE NULL END )) AS tier3, count(DISTINCT ( CASE WHEN global_tier = 4 THEN x.ctfo_site_id ELSE NULL END )) AS tier4 FROM (select a.site_country,a.ctfo_site_id,b.global_tier,a.ctfo_trial_id from temp_country_filter a inner join $$schema$$.f_rpt_site_tiering_landscape b on a.ctfo_site_id = b.ctfo_site_id WHERE user_id = '$$user_id$$' and landscape_id = '$$landscape_id$$' and active_flag = 'true') x WHERE x.ctfo_trial_id = ANY ( SELECT * FROM temp_site_filter ) AND x.ctfo_trial_id = ANY ( SELECT * FROM temp_sponsor_filter )",
        "inv_profile": "SELECT count(DISTINCT ( CASE WHEN global_tier = 1 THEN a.ctfo_investigator_id ELSE NULL END )) AS tier1, count(DISTINCT ( CASE WHEN global_tier = 2 THEN a.ctfo_investigator_id ELSE NULL END )) AS tier2, count(DISTINCT ( CASE WHEN global_tier = 3 THEN a.ctfo_investigator_id ELSE NULL END )) AS tier3, count(DISTINCT ( CASE WHEN global_tier = 4 THEN a.ctfo_investigator_id ELSE NULL END )) AS tier4 FROM ( select a.ctfo_trial_id, a.ctfo_investigator_id,b.global_tier ,country,a.region from $$schema_reporting$$.f_rpt_filters_site_inv a inner join $$schema$$.f_rpt_investigator_site_tiering_landscape b on a.ctfo_investigator_id=b.ctfo_investigator_id WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true') a WHERE ctfo_trial_id = ANY ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$ta_filter$$ $$disease_filter$$ $$patient_segment_filter$$ $$trial_phase_filter$$ ) AND ctfo_trial_id = ANY ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor_filter$$ ) AND country = '$$country$$'",
        "country_landscape_count": "SELECT count(*) FROM $$schema$$.f_rpt_country_landscape_detail_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' and active_flag='Y'",
        "insert_na_flag_country" : "INSERT INTO $$schema$$.f_rpt_country_landscape_detail_temp(country ,num_of_sites ,num_of_investigators ,regulatory_iec_time ,enrollment_rate ,recent_trials_country ,total_trials ,competing_treatment ,total_prevalence ,ongoing_trials_country ,high_perf_investigators ,high_perf_sites ,country_score, landscape_id , user_id , updated_by, created_timestamp ,updated_timestamp, active_flag) VALUES (NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'$$landscape_id$$' ,'$$user_id$$' ,'$$updated_by$$' ,'$$created_timestamp$$'  ,'$$updated_timestamp$$', 'NA')",
        "country_landscape_active_flag" : "select distinct active_flag from $$schema$$.f_rpt_country_landscape_detail_temp  WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "fetch_country_landscape": "SELECT country ,num_of_sites ,num_of_investigators ,regulatory_iec_time ,enrollment_rate ,recent_trials_country ,total_trials ,competing_treatment ,total_prevalence ,ongoing_trials_country ,high_perf_investigators ,high_perf_sites ,country_score ,landscape_id ,user_id ,updated_by ,created_timestamp ,updated_timestamp ,active_flag FROM $$schema$$.f_rpt_country_landscape_detail_temp WHERE landscape_id = '$$landscape_id$$' AND user_id = '$$user_id$$' AND active_flag = 'Y'",
        "update_active_flag_for_country_details": "update $$schema$$.f_rpt_country_landscape_detail_temp set active_flag = 'N' WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'"
      },
      "landscape_filters": {
        "insert_landscape_filter": "insert into $$schema$$.f_rpt_landscape_filters (userid, global_filter, patient_filter, drug_filter, country_filter, site_filter, trial_filter, created_by, updated_by, active_flag, created_timestamp, updated_timestamp, investigator_filter, landscape_id ) values('$$userid$$', '$$global_filter$$', '$$patient_filter$$', '$$drug_filter$$', '$$country_filter$$', '$$site_filter$$', '$$trial_filter$$' , '$$userid$$', '$$userid$$', 'Y', '$$timestamp$$', '$$timestamp$$', '$$investigator_filter$$', '$$landscape_id$$')",
        "update_landscape_filter": "update $$schema$$.f_rpt_landscape_filters set global_filter = '$$global_filter$$', $$landscape_type$$ = '$$landscape_value$$', updated_by = '$$userid$$', updated_timestamp = '$$timestamp$$' where userid = '$$userid$$' and active_flag='Y' and landscape_id = '$$landscape_id$$'",
        "get_landscape_filter": "select userid, global_filter, $$category_type$$, landscape_id from $$schema$$.f_rpt_landscape_filters where userid = '$$userid$$' and active_flag='Y' and landscape_id= '$$landscape_id$$'"
      },
      "map_patient": {
        "get_filter_query": "select * from $$schema$$.f_rpt_landscape_filters where userid='$$userid$$' and landscape_id='$$landscape_id$$' and active_flag = 'true'",
        "graph_patient_dropdown_usa_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_patient_details where $$TA$$ $$DA$$ $$start_year$$ $$end_year$$ AND country <> 'All Countries' AND lower($$search_field$$) LIKE lower('%$$search_value$$%') GROUP BY $$search_field$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$",
        "graph_patient_dropdown_global_query": "select $$search_field$$ from $$schema_reporting$$.f_rpt_patient_details where $$TA$$ $$DA$$ $$country$$ $$region$$ $$data_source$$ $$start_year$$ $$end_year$$ AND country <> 'All Countries' AND lower($$search_field$$) LIKE lower('%$$search_value$$%')  GROUP BY $$search_field$$ order by $$search_field$$ limit $$limit$$ offset $$offset$$",
        "map_patient_query": "SELECT coalesce(abc.country, xyz.country) AS country, total_incidence, total_prevalence FROM ( SELECT country, CASE WHEN max(both_prev) IS NULL THEN max( coalesce(male_prev, 0) ) + max( coalesce(female_prev, 0) ) ELSE max( coalesce( both_prev, male_prev, female_prev ) ) END AS total_incidence FROM ( SELECT country, gender, SUM( CASE WHEN gender = 'Male' OR gender = 'male' THEN total_incidence END ) AS male_prev, SUM( CASE WHEN gender = 'Female' OR gender = 'female' THEN total_incidence END ) AS female_prev, SUM( CASE WHEN gender = 'Both' THEN total_incidence END ) AS both_prev FROM ( SELECT country, gender, total_incidence FROM ( SELECT country, gender, SUM( CASE WHEN data_source = 'drg' AND age NOT IN ('All', 'Total') THEN incidence WHEN data_source = 'globocan' AND age NOT IN ('All', 'Total') THEN incidence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') AND year = EXTRACT( year FROM CURRENT_DATE ) THEN CASE WHEN gender = 'Both' AND incidence IS NOT NULL THEN incidence WHEN ( gender = 'Male' OR gender = 'Female' ) AND incidence IS NOT NULL THEN incidence END WHEN data_source IN ('ihme') AND gender NOT IN ('All') THEN CASE WHEN gender = 'Both' AND incidence IS NOT NULL THEN incidence WHEN ( gender = 'Male' OR gender = 'Female' ) AND incidence IS NOT NULL THEN incidence END END ) AS total_incidence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$data_source$$ $$disease$$ AND $$country$$ $$region$$ AND $$therapy_area$$ $$start_year$$ $$end_year$$ GROUP BY country, gender ) pt WHERE total_incidence IS NOT NULL ) pt GROUP BY country, gender ) pt GROUP BY country ) AS xyz FULL OUTER JOIN ( SELECT country, CASE WHEN max(both_prev) IS NULL THEN max( coalesce(male_prev, 0) ) + max( coalesce(female_prev, 0) ) ELSE max( coalesce( both_prev, male_prev, female_prev ) ) END AS total_prevalence FROM ( SELECT country, gender, SUM( CASE WHEN gender = 'Male' OR gender = 'male' THEN total_prevalence END ) AS male_prev, SUM( CASE WHEN gender = 'Female' OR gender = 'female' THEN total_prevalence END ) AS female_prev, SUM( CASE WHEN gender = 'Both' THEN total_prevalence END ) AS both_prev FROM ( SELECT country, gender, total_prevalence FROM ( SELECT country, gender, SUM( CASE WHEN data_source = 'drg' AND age NOT IN ('All', 'Total') THEN prevalence WHEN data_source = 'globocan' AND age NOT IN ('All', 'Total') THEN prevalence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') AND year = EXTRACT( year FROM CURRENT_DATE ) THEN CASE WHEN gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( gender = 'Male' OR gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END WHEN data_source IN ('ihme') AND gender NOT IN ('All') THEN CASE WHEN gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( gender = 'Male' OR gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END END ) AS total_prevalence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$data_source$$ $$disease$$ AND $$country$$ $$region$$ AND $$therapy_area$$ $$start_year$$ $$end_year$$ GROUP BY country, gender ) pt WHERE total_prevalence IS NOT NULL ) pt GROUP BY country, gender ) pt GROUP BY country ) AS abc ON xyz.country = abc.country GROUP BY abc.country, xyz.country, total_incidence, total_prevalence ORDER BY total_prevalence DESC",
        "graph_patient_query_old": "SELECT coalesce(abc.country, xyz.country) as country, total_incidence, total_prevalence FROM ( SELECT country ,CASE WHEN max(both_prev) IS NULL THEN max(coalesce(male_prev, 0)) + max(coalesce(female_prev, 0)) ELSE max(coalesce(both_prev, male_prev, female_prev)) END AS total_incidence FROM ( SELECT country ,gender ,SUM(CASE WHEN gender = 'Male' OR gender = 'male' THEN total_incidence END) AS male_prev ,SUM(CASE WHEN gender = 'Female' OR gender = 'female' THEN total_incidence END) AS female_prev ,SUM(CASE WHEN gender = 'Both' THEN total_incidence END) AS both_prev FROM ( SELECT country ,gender ,total_incidence FROM ( SELECT country ,gender ,SUM(CASE WHEN data_source = 'drg' AND age NOT IN ('All', 'Total') THEN incidence WHEN data_source = 'globocan' AND age NOT IN ('All', 'Total') THEN incidence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') AND year = EXTRACT(year FROM CURRENT_DATE) THEN  CASE WHEN gender = 'Both' AND incidence IS NOT NULL THEN incidence WHEN (gender = 'Male' OR gender = 'Female' ) AND incidence IS NOT NULL THEN incidence END END) AS total_incidence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$therapy_area$$ AND $$disease$$ AND $$country$$ AND $$region$$ AND $$data_source$$ AND $$year_filter$$ GROUP BY country,gender ) pt WHERE total_incidence IS NOT NULL ) pt GROUP BY country ,gender ) pt GROUP BY country ) AS xyz FULL OUTER JOIN ( SELECT country ,CASE WHEN max(both_prev) IS NULL THEN max(coalesce(male_prev, 0)) + max(coalesce(female_prev, 0)) ELSE max(coalesce(both_prev, male_prev, female_prev)) END AS total_prevalence FROM ( SELECT country ,gender ,SUM(CASE WHEN gender = 'Male' OR gender = 'male' THEN total_prevalence END) AS male_prev ,SUM(CASE WHEN gender = 'Female' OR gender = 'female' THEN total_prevalence END) AS female_prev ,SUM(CASE WHEN gender = 'Both' THEN total_prevalence END) AS both_prev FROM ( SELECT country ,gender ,total_prevalence FROM ( SELECT country ,gender ,SUM(CASE WHEN data_source = 'drg' AND age NOT IN ('All','Total') THEN prevalence WHEN data_source = 'globocan' AND age NOT IN ( 'All','Total') THEN prevalence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') AND year = EXTRACT(year FROM CURRENT_DATE) THEN  CASE WHEN gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN (gender = 'Male' OR gender = 'Female') AND prevalence IS NOT NULL THEN prevalence END END) AS total_prevalence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$therapy_area$$ AND $$disease$$ AND $$country$$ AND $$region$$ AND $$data_source$$ AND $$year_filter$$ GROUP BY country ,gender ) pt WHERE total_prevalence IS NOT NULL ) pt GROUP BY country ,gender ) pt GROUP BY country ) AS abc ON xyz.country = abc.country GROUP BY abc.country, xyz.country, total_incidence, total_prevalence ORDER BY $$type$$ asc",
        "graph_patient_query": "SELECT country ,year ,CASE WHEN max(both_prev) IS NULL THEN max(coalesce(male_prev, 0)) + max(coalesce(female_prev, 0)) ELSE max(coalesce(both_prev, male_prev, female_prev)) END AS prevalence ,CASE WHEN max(both_inc) IS NULL THEN max(coalesce(male_inc, 0)) + max(coalesce(female_inc, 0)) ELSE max(coalesce(both_inc, male_inc, female_inc)) END AS incidence FROM( SELECT country ,gender ,year ,SUM(CASE WHEN gender = 'Male' OR gender = 'male' THEN total_incidence END) AS male_inc ,SUM(CASE WHEN gender = 'Female' OR gender = 'female' THEN total_incidence END) AS female_inc ,SUM(CASE WHEN gender = 'Both' THEN total_incidence END) AS both_inc ,SUM(CASE WHEN gender = 'Male' OR gender = 'male' THEN total_prevalence END) AS male_prev ,SUM(CASE WHEN gender = 'Female' OR gender = 'female' THEN total_prevalence END) AS female_prev ,SUM(CASE WHEN gender = 'Both' THEN total_prevalence END) AS both_prev FROM ( SELECT country ,gender ,year ,SUM(CASE WHEN data_source = 'drg' AND age NOT IN ( 'All' ,'Total') THEN incidence WHEN data_source = 'globocan' AND age NOT IN ( 'All' ,'Total' ) THEN incidence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') THEN CASE WHEN gender = 'Both' AND incidence IS NOT NULL THEN incidence WHEN ( gender = 'Male' OR gender = 'Female' ) AND incidence IS NOT NULL THEN incidence END WHEN data_source IN ('ihme') AND gender NOT IN ('All') THEN CASE WHEN gender = 'Both' AND incidence IS NOT NULL THEN incidence WHEN ( gender = 'Male' OR gender = 'Female' ) AND incidence IS NOT NULL THEN incidence END END) AS total_incidence ,SUM(CASE WHEN data_source = 'drg' AND age NOT IN ( 'All' ,'Total' ) THEN prevalence WHEN data_source = 'globocan' AND age NOT IN ( 'All' ,'Total' ) THEN prevalence WHEN data_source IN ('data monitor') AND gender NOT IN ('All') THEN CASE WHEN gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( gender = 'Male' OR gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END WHEN data_source IN ('ihme') AND gender NOT IN ('All') THEN CASE WHEN gender = 'Both' AND prevalence IS NOT NULL THEN prevalence WHEN ( gender = 'Male' OR gender = 'Female' ) AND prevalence IS NOT NULL THEN prevalence END END) AS total_prevalence FROM $$schema_reporting$$.f_rpt_patient_details pt WHERE $$therapy_area$$ $$disease$$ $$country$$ $$region$$ $$data_source$$ $$start_year$$ $$end_year$$ AND region IS NOT NULL GROUP BY country ,gender ,year ) pt GROUP BY country ,year ,gender ) a WHERE country <> 'All Countries' GROUP BY country ,year"
      },
      "map_drug": {
        "get_filter_query": "select global_filter,drug_filter from $$schema$$.f_rpt_landscape_filters where userid='$$userid$$' and landscape_id='$$landscape_id$$' and active_flag = 'true'",
        "map_drug_query": "SELECT lower(dd.therapeutic_class_nm) AS therapy_area ,lower(dd.disease_nm) AS disease_nm ,dd.region ,dd.country ,count(DISTINCT(dd.drug_id)) AS total_drugs ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Not Applicable' OR dd.global_status = 'No Development Reported' OR dd.global_status = NULL OR dd.global_status = ' ' THEN dd.drug_id ELSE NULL END) )) AS other ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Withdrawn' OR dd.global_status = 'Suspended' OR dd.global_status = 'Discontinued' THEN dd.drug_id ELSE NULL END ) )) AS withdrawn_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Preclinical' THEN dd.drug_id ELSE NULL END ) )) AS preclinical_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Phase III Clinical Trial' THEN dd.drug_id ELSE NULL END ) )) AS phase3clinicaltrial_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Phase I Clinical Trial' THEN dd.drug_id ELSE NULL END ) )) AS phase1clinicaltrial_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Pre-registration' THEN dd.drug_id ELSE NULL END ) )) AS preregisteration_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Phase II Clinical Trial' THEN dd.drug_id ELSE NULL END ) )) AS phase2clinicaltrial_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Launched' THEN dd.drug_id ELSE NULL END ) )) AS launched_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Registered' THEN dd.drug_id ELSE NULL END ) )) AS registered_count FROM $$schema_reporting$$.f_rpt_drug_details AS dd INNER JOIN $$schema_reporting$$.f_rpt_filters_trial AS ft ON ft.drug_names = dd.drug_nm WHERE $$therapy_area$$ $$disease$$ $$country$$ $$region$$ GROUP BY dd.disease_nm ,dd.therapeutic_class_nm ,dd.country ,dd.region",
        "get_drug_status_dropdown": "select distinct $$search_field$$ from $$schema_reporting$$.$$table1$$ as dd left join $$schema_reporting$$.$$table2$$ as ft on lower(trim(ft.drug_names)) = lower(trim(dd.drug_nm)) where $$TA$$ $$DA$$ $$region$$ $$country$$ $$drug_nm$$ $$drug_status$$ $$sponsor$$ and lower(trim($$search_field$$)) like lower(trim('%$$search_value$$%')) order by $$search_field$$ limit $$limit$$ offset $$offset$$",
        "get_drug_status": "select distinct drug_nm as drug_name, global_status as drug_status, country from $$schema_reporting$$.$$table1$$ as dd left join $$schema_reporting$$.$$table2$$ as ft on lower(trim(ft.drug_names)) = lower(trim(dd.drug_nm)) where $$TA$$ $$DA$$ $$region$$ $$country$$ $$drug_nm$$ $$drug_status$$ $$sponsor$$ $$order$$ limit $$limit$$ offset $$offset$$",

        "insert_map_drug_query":"insert into $$schema$$.f_rpt_drug_map_temp ( SELECT lower(dd.therapeutic_class_nm) AS therapy_area ,lower(dd.disease_nm) AS disease_nm ,dd.region ,dd.country ,count(DISTINCT(dd.drug_id)) AS total_drugs ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Not Applicable' OR dd.global_status = 'No Development Reported' OR dd.global_status = NULL OR dd.global_status = ' ' THEN dd.drug_id ELSE NULL END) )) AS other ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Withdrawn' OR dd.global_status = 'Suspended' OR dd.global_status = 'Discontinued' THEN dd.drug_id ELSE NULL END ) )) AS withdrawn_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Preclinical' THEN dd.drug_id ELSE NULL END ) )) AS preclinical_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Phase III Clinical Trial' THEN dd.drug_id ELSE NULL END ) )) AS phase3clinicaltrial_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Phase I Clinical Trial' THEN dd.drug_id ELSE NULL END ) )) AS phase1clinicaltrial_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Pre-registration' THEN dd.drug_id ELSE NULL END ) )) AS preregisteration_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Phase II Clinical Trial' THEN dd.drug_id ELSE NULL END ) )) AS phase2clinicaltrial_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Launched' THEN dd.drug_id ELSE NULL END ) )) AS launched_count ,count(DISTINCT ( ( CASE WHEN dd.global_status = 'Registered' THEN dd.drug_id ELSE NULL END ) )) AS registered_count,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM $$schema_reporting$$.f_rpt_drug_details AS dd INNER JOIN $$schema_reporting$$.f_rpt_filters_trial AS ft ON ft.drug_names = dd.drug_nm WHERE $$therapy_area$$ $$disease$$ $$country$$ $$region$$ GROUP BY dd.disease_nm ,dd.therapeutic_class_nm ,dd.country ,dd.region)",
        "drug_map_count":"SELECT count(*) FROM $$schema$$.f_rpt_drug_map_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' ",
        "update_active_flag_for_drugmap":"update $$schema$$.f_rpt_drug_map_temp set active_flag = 'N' WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "delete_drug_map_query": "delete from $$schema$$.f_rpt_drug_map_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "drug_map_active_flag": "select distinct active_flag from $$schema$$.f_rpt_drug_map_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",

        "insert_na_flag_drug_map": "insert into $$schema$$.f_rpt_drug_map_temp(therapy_area,disease_nm,region,country,total_drugs, others, withdrawn_count , preclinical_count, phase3clinicaltrial_count , phase1clinicaltrial_count, preregisteration_count , phase2clinicaltrial_count, launched_count , registered_count, landscape_id , user_id , active_flag, created_timestamp , updated_timestamp) values (NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'$$landscape_id$$' ,'$$user_id$$' ,'NA' ,'$$created_timestamp$$' ,'$$updated_timestamp$$')",

        "fetch_map_data":"select therapy_area, disease_nm, region, country, total_drugs, others, withdrawn_count,preclinical_count,phase3clinicaltrial_count, phase1clinicaltrial_count,preregisteration_count,phase2clinicaltrial_count,launched_count,registered_count from $$schema$$.f_rpt_drug_map_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' and active_flag='Y'"


      },
      "landscape_assessment": {
        "filter_list_query": "select * from $$schema$$.f_rpt_landscape_filters where userid='$$user_id$$' and landscape_id='$$landscape_id$$'"
      },
      "detail_queries": {
        "patient_detail_query_old": "SELECT a.country, age ,gender ,year ,prevalence , incidence , b.num_of_investigators , b.num_of_sites FROM (select * from $$schema_reporting$$.f_rpt_patient_details a WHERE $$ta_filter$$ $$da_filter$$ $$region_filter$$ $$country_filter$$ $$data_source$$ and a.year >= $$start_year$$ and a.year <= $$end_year$$) a INNER JOIN (SELECT country, Count(DISTINCT ctfo_site_id) AS num_of_sites, Count(DISTINCT ctfo_investigator_id) AS num_of_investigators FROM $$schema_reporting$$.f_rpt_filters_setup_all sa INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv si ON sa.ctfo_trial_id = si.ctfo_trial_id WHERE $$therapeutic_area$$ $$disease$$ GROUP BY country ) b ON Lower(Trim(a.country)) = Lower(Trim(b.country)) WHERE a.country <> 'All Countries' GROUP BY 1,2,3,4,5,6,7,8",
        "patient_detail_query": "SELECT b.country ,age ,gender ,year ,prevalence ,incidence ,num_of_investigators ,num_of_sites FROM( SELECT country ,age ,gender ,year ,sum(prevalence) as prevalence ,sum(incidence) as incidence FROM $$schema_reporting$$.f_rpt_patient_details a WHERE $$ta_filter$$ $$da_filter$$ $$country_filter$$ $$region_filter$$ $$data_source$$ $$start_year$$ $$end_year$$ AND prevalence IS NOT NULL and region is not null AND country <> 'All Countries' GROUP BY 1 ,2 ,3 ,4) a INNER JOIN ( select country, count(distinct ctfo_site_id) as num_of_sites , count(distinct ctfo_investigator_id) as num_of_investigators from $$schema_reporting$$.f_rpt_filters_setup_all sa inner join $$schema_reporting$$.f_rpt_filters_site_inv si on sa.ctfo_trial_id = si.ctfo_trial_id where $$therapeutic_area$$ $$disease$$ GROUP BY country ) b ON lower(trim(a.country)) = lower(trim(b.country))",
        "drug_detail_query": "SELECT drug_name ,COALESCE(drug_name_synonyms, 'NA') as drug_name_synonyms ,drug_status ,COALESCE(delivery_route, 'NA') as delivery_route ,string_agg(DISTINCT disease, '|') AS disease ,string_agg(DISTINCT therapy_area, '|') AS therapy_area ,country ,region ,originator FROM( SELECT * FROM ( SELECT DISTINCT drug_nm AS drug_name ,Replace(Replace(drug_name_synonyms, ';', '|'), ',', '-') AS drug_name_synonyms ,global_status AS drug_status ,delivery_route ,Lower(disease_nm) AS disease ,Lower(therapeutic_class_nm) AS therapy_area ,country AS country ,region AS region ,originator FROM $$schema_reporting$$.f_rpt_drug_details WHERE $$region_filter$$ $$country_filter$$ $$da_filter$$ $$drug_name$$ $$drug_originator$$ $$ta_filter$$) A WHERE $$drug_status$$ ) dd GROUP BY 1 ,2 ,3 ,4 ,7 ,8 ,9",
        "drug_detail_query_old": "SELECT * FROM   (SELECT DISTINCT  dd.drug_nm as drug_name, Replace(dd.drug_name_synonyms, ';', '|') AS drug_name_synonyms, dd.global_status as drug_status, dd.delivery_route, Lower(dd.disease_nm) AS disease, Lower(dd.therapy_area)  AS therapy_area , dd.country as country, dd.region as region, dd.originator FROM $$schema_reporting$$.f_rpt_drug_details AS dd LEFT JOIN $$schema_reporting$$.f_rpt_filters_trial AS ft ON ft.drug_names = dd.drug_nm WHERE $$ta_filter$$ $$region_filter$$ $$country_filter$$ $$da_filter$$ $$drug_sponsor$$ $$drug_name$$ $$drug_status$$) AS a "
      },
      "clinical_landscape_queries": {
        "get_filter_query": "select * from $$schema$$.f_rpt_landscape_filters where userid='$$userid$$' and landscape_id='$$landscape_id$$'",
        "clinical_map": {
          "clinical_map_total_trials": "WITH total_cte AS( SELECT Count(DISTINCT si.ctfo_trial_id) AS total_trials ,si.country ,sa.therapeutic_area ,sa.disease FROM $$schema_reporting$$.f_rpt_filters_setup_all AS sa INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv AS si ON sa.ctfo_trial_id = si.ctfo_trial_id WHERE $$TA$$ $$DA$$ GROUP BY si.country ,sa.therapeutic_area ,sa.disease ,si.region) ,match_cte AS ( SELECT Count(DISTINCT sa.ctfo_trial_id) AS matching_trials ,site.region AS region ,Lower(sa.therapeutic_area) AS therapeutic_area ,site.site_country AS country ,Lower(sa.disease) AS disease ,Extract(year FROM site.trial_start_dt) AS year_start FROM $$schema_reporting$$.f_rpt_filters_setup_all sa INNER JOIN $$schema_reporting$$.f_rpt_site_study_details site ON site.ctfo_trial_id = sa.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial ftrial ON site.ctfo_trial_id = ftrial.ctfo_trial_id WHERE $$TA$$ $$DA$$ $$region$$ $$country$$ $$sponsor$$ $$sponsor_type$$ $$trial_status$$ $$nctid$$ $$trial_phase$$ $$trial_title$$ AND EXTRACT(YEAR FROM site.trial_start_dt) > EXTRACT(YEAR FROM CURRENT_DATE) - 5 AND sa.nct_id <> 'Other' AND sa.nct_id NOT IN ( 'NCT00499135' ,'NCT00086736' ,'NCT04169841' ) AND sa.study_name IS NOT NULL GROUP BY sa.therapeutic_area ,sa.disease ,year_start ,region ,site_country ) SELECT total_cte.total_trials ,match_cte.* FROM match_cte INNER JOIN total_cte ON total_cte.country = match_cte.country AND total_cte.therapeutic_area = match_cte.therapeutic_area AND total_cte.disease = match_cte.disease",
          "clinical_map_terminated_trials": "WITH terminated_cte AS( SELECT Count(DISTINCT site.ctfo_trial_id) AS total_trials ,site.site_country AS country ,lower(sa.therapeutic_area) AS therapeutic_area ,lower(sa.disease) AS disease FROM $$schema_reporting$$.f_rpt_site_study_details site INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all sa ON sa.ctfo_trial_id = site.ctfo_trial_id WHERE $$TA$$ $$DA$$ AND site.trial_status = 'Terminated' GROUP BY site.site_country, therapeutic_area, disease) ,match_cte AS ( SELECT Count(DISTINCT sa.ctfo_trial_id) AS matching_trials ,site.region AS region ,Lower(sa.therapeutic_area) AS therapeutic_area ,site.site_country AS country ,Lower(sa.disease) AS disease ,Extract(year FROM site.trial_start_dt) AS year_start FROM $$schema_reporting$$.f_rpt_filters_setup_all sa INNER JOIN $$schema_reporting$$.f_rpt_site_study_details site ON site.ctfo_trial_id = sa.ctfo_trial_id INNER JOIN $$schema_reporting$$.f_rpt_filters_trial ftrial ON site.ctfo_trial_id = ftrial.ctfo_trial_id WHERE $$TA$$ $$DA$$ $$region$$ $$country$$ $$sponsor$$ $$sponsor_type$$ $$trial_status$$ $$nctid$$ $$trial_phase$$ $$trial_title$$ AND EXTRACT(YEAR FROM site.trial_start_dt) > EXTRACT(YEAR FROM CURRENT_DATE) - 5 AND sa.nct_id <> 'Other' AND sa.nct_id NOT IN ( 'NCT00499135' ,'NCT00086736' ,'NCT04169841' ) AND sa.study_name IS NOT NULL GROUP BY sa.therapeutic_area ,sa.disease ,year_start ,region ,site_country ) SELECT terminated_cte.total_trials ,match_cte.* FROM match_cte INNER JOIN terminated_cte on match_cte.country = terminated_cte.country AND terminated_cte.therapeutic_area = match_cte.therapeutic_area AND terminated_cte.disease = match_cte.disease  "
        },
        "clinical_details_old": "SELECT string_agg(DISTINCT a.country, '|') AS country , trial_phase ,string_agg(DISTINCT b.sponsor, '|') AS sponsor , a.num_of_sites ,a.num_of_investigators AS num_of_inv ,c.nct_id AS nct_id ,c.study_name AS study_name ,string_agg(DISTINCT b.tested_drug, '|') AS tested_drug ,d.enrollment_duration ,d.PSM ,d.actual_accrual ,string_agg(DISTINCT b.sponsor_type, '|') AS sponsor_type ,CASE WHEN b.trial_status = 'Other'THEN 'Other'WHEN b.trial_status = 'Active(Not Recruiting)'THEN 'Open'WHEN b.trial_status = 'On Hold'THEN 'Temporary'WHEN b.trial_status = 'Closed'THEN 'Closed'WHEN b.trial_status = 'Active (Recruiting)'THEN 'Open'WHEN b.trial_status = 'Planned'THEN 'Planned'WHEN b.trial_status = 'Terminated'THEN 'Terminated'END AS trial_status FROM (SELECT ctfo_trial_id ,trial_status ,sponsor ,sponsor_type ,drug_names AS tested_drug FROM $$schema_reporting$$.f_rpt_filters_trial WHERE sponsor IN $$sponsor$$ GROUP BY ctfo_trial_id ,trial_status ,sponsor ,sponsor_type ,drug_names) b INNER JOIN (SELECT ctfo_trial_id ,trial_phase ,disease ,therapeutic_area ,nct_id ,study_name FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ AND $$DA$$ AND $$trial_phase$$ GROUP BY ctfo_trial_id ,trial_phase ,disease ,therapeutic_area ,nct_id ,study_name ) c ON b.ctfo_trial_id = c.ctfo_trial_id INNER JOIN (SELECT ctfo_trial_id ,country ,COUNT(DISTINCT ctfo_site_id) AS num_of_sites ,COUNT(DISTINCT ctfo_investigator_id) AS num_of_investigators ,region FROM $$schema_reporting$$.f_rpt_filters_site_inv GROUP BY ctfo_trial_id ,country ,region ) a ON c.ctfo_trial_id = a.ctfo_trial_id INNER JOIN (SELECT ctfo_trial_id ,sum(cast(patients_enrolled AS DOUBLE PRECISION)) AS actual_accrual ,median(total_recruitment_months) AS enrollment_duration ,median(randomization_rate) AS PSM FROM $$schema_reporting$$.f_rpt_site_study_details GROUP BY ctfo_trial_id ) d ON d.ctfo_trial_id = c.ctfo_trial_id GROUP BY 2, 4 ,6 ,7 ,8 ,9 ,10 ,11 ,13 ,14 ,15 ,17",
        "clinical_chart": "",
        "clinical_timeline": "",
        "clinical_detail_query": "WITH tt AS( SELECT a.ctfo_trial_id, a.country, c.trial_phase, b.sponsor, CASE WHEN lower(c.nct_id) LIKE '%nct%' THEN c.nct_id ELSE a.ctfo_trial_id END AS nct_id, c.study_name AS title, b.drug_names AS tested_drug, a.enrollment_duration, a.PSM, a.actual_accrual, c.protocol_ids, CASE WHEN lower(trim(b.trial_status)) = 'others' THEN 'Other' WHEN lower(trim(b.trial_status)) = 'ongoing' THEN 'Open' WHEN lower(trim(b.trial_status)) = 'completed' THEN 'Closed' WHEN lower(trim(b.trial_status)) = 'planned' THEN 'Planned' END AS trial_status, a.num_of_sites FROM( SELECT ctfo_trial_id, sum( cast( patients_enrolled AS DOUBLE PRECISION) ) AS actual_accrual, median(total_recruitment_months) AS enrollment_duration, median(randomization_rate) AS PSM, string_agg(DISTINCT site_country, '|') AS country, count(DISTINCT ctfo_site_id) AS num_of_sites FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ GROUP BY ctfo_trial_id ) a INNER JOIN ( SELECT ctfo_trial_id, string_agg(DISTINCT drug_names, '|') AS drug_names, trial_status, string_agg(DISTINCT sponsor, '|') AS sponsor FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) b ON a.ctfo_trial_id = b.ctfo_trial_id INNER JOIN ( SELECT trial_phase, nct_id, study_name, ctfo_trial_id, protocol_ids FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ ) c ON b.ctfo_trial_id = c.ctfo_trial_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ), abc AS ( SELECT tt.ctfo_trial_id, tt.country, tt.trial_phase, tt.sponsor, tt.nct_id, tt.title, tt.tested_drug, tt.enrollment_duration, tt.PSM, tt.actual_accrual, tt.num_of_sites, d.num_of_investigator AS num_of_inv, tt.trial_status, tt.protocol_ids, LOWER( CONCAT ( tt.ctfo_trial_id, tt.country, tt.trial_phase, tt.sponsor, tt.nct_id, tt.title, tt.tested_drug, tt.enrollment_duration, tt.PSM, tt.actual_accrual, tt.num_of_sites ) ) AS search_metric_col FROM tt left join ( SELECT details.ctfo_trial_id, COUNT(DISTINCT ctfo_investigator_id) AS num_of_investigator from $$schema_reporting$$.f_rpt_investigator_site_study_details details inner join ( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ ) setup on details.ctfo_trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ ) site ON site.ctfo_trial_id = setup.ctfo_trial_id group by 1 ) d ON tt.ctfo_trial_id = d.ctfo_trial_id ) SELECT country, trial_phase, sponsor, nct_id, title, tested_drug, enrollment_duration, PSM, actual_accrual, num_of_sites, num_of_inv, trial_status, protocol_ids FROM abc $$search_id$$ "
      },
      "trial_landscape_queries": {
        "trial_map_filters_query": "select global_filter,site_filter,patient_filter,trial_filter,investigator_filter from $$schema$$.f_rpt_landscape_filters where userid='$$userid$$' and landscape_id = '$$landscape_id$$' and active_flag='true'",
        "trial_chart_psm_phase_query": "SELECT trial_phase,avg(cast(site.randomization_rate AS DOUBLE PRECISION)) AS mean_value,median(cast(site.randomization_rate AS DOUBLE PRECISION)) AS median_value FROM(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, randomization_rate, region, site_country, trial_start_dt from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id,randomization_rate, region, site_country, trial_start_dt) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase",
        "trial_chart_psm_trial_status_query": "SELECT site.trial_status,avg(cast(site.randomization_rate AS DOUBLE PRECISION)) AS mean_value,median(cast(site.randomization_rate AS DOUBLE PRECISION)) AS median_value FROM(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, randomization_rate, region, site_country, trial_start_dt,trial_status from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id,randomization_rate, region, site_country, trial_start_dt,trial_status) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status",
        "trial_chart_enrollment_duration_phase_query": "select trial_phase ,avg(cast(total_recruitment_months AS DOUBLE PRECISION)) as mean_value , median(cast(total_recruitment_months AS DOUBLE PRECISION)) as median_value from(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase",
        "trial_chart_enrollment_duration_trial_status_query": "select site.trial_status ,avg(cast(total_recruitment_months AS DOUBLE PRECISION)) as mean_value , median(cast(total_recruitment_months AS DOUBLE PRECISION)) as median_value from(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt,trial_status from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt,trial_status ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status",
        "trial_chart_trial_duration_phase_query": "SELECT trial_phase ,avg(cast(trial_duration_in_years AS DOUBLE PRECISION)) AS mean_value ,PERCENTILE_CONT(0.5) WITHIN GROUP( ORDER BY trial_duration_in_years) AS median_value FROM( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup inner join (select ctfo_trial_id, (trial_end_dt::DATE - trial_start_dt::DATE) / 365 AS trial_duration_in_years from $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, trial_duration_in_years) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN (select ctfo_trial_id, trial_status from $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase",
        "trial_chart_trial_duration_trial_status_query": "SELECT trial_status ,avg(cast(trial_duration_in_years AS DOUBLE PRECISION)) AS mean_value ,PERCENTILE_CONT(0.5) WITHIN GROUP( ORDER BY trial_duration_in_years) AS median_value FROM( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup inner join (select ctfo_trial_id, (trial_end_dt::DATE - trial_start_dt::DATE) / 365 AS trial_duration_in_years from $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, trial_duration_in_years) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN (select ctfo_trial_id, trial_status from $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_status",
        "trial_chart_num_of_sites_phase_query": "with temp_fsetup as( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) SELECT trial_phase ,avg(cast(num_of_sites AS DOUBLE PRECISION)) AS mean_value ,median(cast(num_of_sites AS DOUBLE PRECISION)) AS median_value FROM( SELECT trial_phase ,count(DISTINCT site.ctfo_site_id) AS num_of_sites FROM temp_fsetup setup INNER JOIN ( SELECT ctfo_trial_id,ctfo_site_id, region, site_country, trial_start_dt FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, ctfo_site_id, region, site_country, trial_start_dt ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id where setup.ctfo_trial_id = ANY ( SELECT ctfo_trial_Id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) GROUP BY trial_phase ) a GROUP BY trial_phase",
        "trial_chart_num_of_sites_trial_status_query": "SELECT trial_status, avg(cast(num_of_sites AS DOUBLE PRECISION)) AS mean_value, median(cast(num_of_sites as DOUBLE PRECISION)) AS median_value from( select ftrial.trial_status,count(DISTINCT site.ctfo_site_id) AS num_of_sites from ( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN ( SELECT ctfo_trial_id, randomization_rate, region, site_country, trial_start_dt,trial_status,ctfo_site_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id,randomization_rate, region, site_country, trial_start_dt,trial_status,ctfo_site_id ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT ctfo_trial_id, trial_status, sponsor, sponsor_type FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY ftrial.trial_status ) a group by trial_status",
        "trial_chart_num_of_patients_phase_query": "SELECT trial_phase ,avg(cast(site.patients_enrolled as DOUBLE PRECISION)) AS mean_value ,median(cast(site.patients_enrolled as DOUBLE PRECISION)) AS median_value from(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase",
        "trial_chart_num_of_patients_trial_status_query": "SELECT site.trial_status  ,avg(cast(site.patients_enrolled as DOUBLE PRECISION)) AS mean_value  ,median(cast(site.patients_enrolled as DOUBLE PRECISION)) AS median_value  from (select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase ) setup INNER JOIN (select ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt,trial_status from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt,trial_status) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status",
        "trial_chart_num_of_trials_by_phase_sponsor_query": "WITH universe AS( SELECT ftrial.sponsor ,trial_phase ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT a.sponsor ,b.trial_phase AS phase ,number_of_trials ,total_trials FROM ( SELECT sponsor ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT sponsor ,trial_phase ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.sponsor = b.sponsor ORDER BY total_trials DESC, phase ASC",
        "trial_chart_num_of_trials_by_status_sponsor_query": "WITH universe AS( SELECT ftrial.sponsor ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT a.sponsor ,b.trial_status ,number_of_trials ,total_trials FROM ( SELECT sponsor ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT trial_status ,sponsor ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.sponsor = b.sponsor ORDER BY total_trials DESC ,trial_status ASC",
        "trial_chart_num_of_trials_by_status_drug_query": "WITH universe AS( SELECT drug_names AS drug ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT b.trial_status ,a.drug ,number_of_trials ,total_trials FROM ( SELECT drug ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT drug ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.drug = b.drug ORDER BY total_trials DESC , trial_status ASC",
        "trial_chart_num_of_trials_by_phase_drug_query": "WITH universe AS( SELECT drug_names ,trial_phase ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT b.trial_phase AS phase ,a.drug_names AS drug ,number_of_trials ,total_trials FROM ( SELECT drug_names ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT drug_names ,trial_phase ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.drug_names = b.drug_names ORDER BY total_trials DESC, phase ASC",
        "trial_chart_num_of_trials_by_phase_disease_query": "WITH universe AS( SELECT disease ,trial_phase ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT b.trial_phase AS phase ,a.disease ,number_of_trials ,total_trials FROM ( SELECT disease ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT disease ,trial_phase ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.disease = b.disease ORDER BY total_trials DESC, phase ASC",
        "trial_chart_num_of_trials_by_status_disease_query": "WITH universe AS( SELECT disease ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT b.trial_status ,a.disease ,number_of_trials ,total_trials FROM ( SELECT disease ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT disease ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.disease = b.disease ORDER BY total_trials DESC, trial_status ASC",
        "trial_chart_num_of_trials_by_phase_query": "SELECT trial_phase AS phase ,count(DISTINCT site.ctfo_trial_id) AS number_of_trials FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ ) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id WHERE setup.ctfo_trial_id = ANY (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$) GROUP BY trial_phase ORDER BY count(DISTINCT site.ctfo_trial_id) DESC ,phase ASC LIMIT $$LIMIT$$",
        "trial_chart_num_of_trials_by_status_query": "SELECT site.trial_status ,count(DISTINCT site.ctfo_trial_id) AS number_of_trials FROM( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status ORDER BY count(DISTINCT site.ctfo_trial_id) DESC , trial_status ASC LIMIT $$LIMIT$$",
        "trial_chart_num_of_trials_by_phase_status_query": "WITH universe AS( SELECT trial_phase AS phase ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1,2,3 ) SELECT a.phase ,b.trial_status ,number_of_trials ,total_trials FROM ( SELECT phase ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT phase ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.phase = b.phase ORDER BY total_trials DESC , trial_status ASC",
        "trial_chart_num_of_trials_by_status_phase_query": "WITH universe AS( SELECT trial_phase AS phase ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT a.trial_status ,b.phase ,number_of_trials ,total_trials FROM ( SELECT trial_status ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT phase ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.trial_status = b.trial_status ORDER BY total_trials DESC, phase ASC",
        "trial_timeline_data_total_trial_query": "SELECT * FROM( SELECT case when lower(filters.nct_id) like '%nct%' then filters.nct_id else site.ctfo_trial_id end as trial_id, site.trial_status, cast(EXTRACT(YEAR FROM site.trial_start_dt) as bigint) AS start_year, cast(EXTRACT(YEAR FROM cast(site.trial_end_dt AS DATE)) as bigint) AS end_year, site.trial_start_dt, site.last_subject_in_dt AS enrollment_close_date, site.completion_date AS primary_completion_date, primary_endpoints_date AS primary_endpoint_date, site.trial_end_dt, psm, no_of_sites, no_of_patients FROM (select ctfo_trial_id,protocol_ids,trial_status,min(trial_start_dt) as trial_start_dt,max(trial_end_dt) as trial_end_dt,max(last_subject_in_dt) as last_subject_in_dt,max(completion_date) as completion_date , max(primary_endpoints_date) as primary_endpoints_date,cast(MEDIAN(randomization_rate) as double precision) AS psm,count(ctfo_site_id) AS no_of_sites, sum(cast (patients_enrolled as double precision)) AS no_of_patients from $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ group by 1,2,3) site INNER JOIN (SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) filters ON filters.ctfo_trial_id = site.ctfo_trial_id INNER JOIN (SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor$$ $$sponsor_type$$ $$trial_status$$ ) ftrial ON ftrial.ctfo_trial_id = filters.ctfo_trial_id ) AS a $$search_id$$ GROUP BY 1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12",
        "clinical_detail_query": "WITH tt AS( SELECT a.ctfo_trial_id, a.country, c.trial_phase, b.sponsor, CASE WHEN lower(c.nct_id) LIKE '%nct%' THEN c.nct_id ELSE a.ctfo_trial_id END AS nct_id, c.study_name AS title, b.drug_names AS tested_drug, a.enrollment_duration, a.PSM, a.actual_accrual, c.protocol_ids, CASE WHEN lower(trim(b.trial_status)) = 'others' THEN 'Other' WHEN lower(trim(b.trial_status)) = 'ongoing' THEN 'Open' WHEN lower(trim(b.trial_status)) = 'completed' THEN 'Closed' WHEN lower(trim(b.trial_status)) = 'planned' THEN 'Planned' END AS trial_status, a.num_of_sites FROM( SELECT ctfo_trial_id, sum( cast( patients_enrolled AS DOUBLE PRECISION) ) AS actual_accrual, median(total_recruitment_months) AS enrollment_duration, median(randomization_rate) AS PSM, string_agg(DISTINCT site_country, '|') AS country, count(DISTINCT ctfo_site_id) AS num_of_sites FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ GROUP BY ctfo_trial_id ) a INNER JOIN ( SELECT ctfo_trial_id, string_agg(DISTINCT drug_names, '|') AS drug_names, trial_status, string_agg(DISTINCT sponsor, '|') AS sponsor FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) b ON a.ctfo_trial_id = b.ctfo_trial_id INNER JOIN ( SELECT trial_phase, nct_id, study_name, ctfo_trial_id, protocol_ids FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ ) c ON b.ctfo_trial_id = c.ctfo_trial_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ), abc AS ( SELECT tt.ctfo_trial_id, tt.country, tt.trial_phase, tt.sponsor, tt.nct_id, tt.title, tt.tested_drug, tt.enrollment_duration, tt.PSM, tt.actual_accrual, tt.num_of_sites, d.num_of_investigator AS num_of_inv, tt.trial_status, tt.protocol_ids, LOWER( CONCAT ( tt.ctfo_trial_id, tt.country, tt.trial_phase, tt.sponsor, tt.nct_id, tt.title, tt.tested_drug, tt.enrollment_duration, tt.PSM, tt.actual_accrual, tt.num_of_sites ) ) AS search_metric_col FROM tt left join ( SELECT details.ctfo_trial_id, COUNT(DISTINCT ctfo_investigator_id) AS num_of_investigator from $$schema_reporting$$.f_rpt_investigator_site_study_details details inner join ( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ ) setup on details.ctfo_trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ ) site ON site.ctfo_trial_id = setup.ctfo_trial_id group by 1 ) d ON tt.ctfo_trial_id = d.ctfo_trial_id ) SELECT country, trial_phase, sponsor, nct_id, title, tested_drug, enrollment_duration, PSM, actual_accrual, num_of_sites, num_of_inv, trial_status, protocol_ids FROM abc $$search_id$$ ",
        "trial_map_total_trial_and_matching_trial_query": "WITH tt AS( SELECT site_country AS country ,count(DISTINCT ctfo_trial_id) AS total_trials FROM ( SELECT country AS site_country ,ctfo_trial_id ,region FROM $$schema_reporting$$.f_rpt_filters_site_inv) a WHERE $$country$$ $$region$$ GROUP BY country ) ,trial_universe AS ( SELECT a.ctfo_trial_id ,country ,trial_start_dt FROM ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY 1 ) a INNER JOIN ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) b ON a.ctfo_trial_id = b.ctfo_trial_id INNER JOIN ( SELECT ctfo_trial_id ,trial_start_dt ,site_country AS country FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ ) c ON b.ctfo_trial_id = c.ctfo_trial_id GROUP BY 1 ,2 ,3 ) ,mtt AS ( SELECT country ,( SELECT extract(year FROM trial_start_dt) AS years WHERE trial_start_dt BETWEEN CURRENT_DATE - interval '5 year' AND CURRENT_DATE ) AS years ,count(DISTINCT ctfo_trial_id) AS matching_trial FROM trial_universe GROUP BY country ,years ) SELECT tt.total_trials ,tt.country ,mtt.matching_trial ,mtt.years FROM tt LEFT JOIN mtt ON tt.country = mtt.country",


        "insert_trial_detail_query":"insert into $$schema$$.f_rpt_clinical_detail_temp( WITH tt AS( SELECT a.ctfo_trial_id, a.country, c.trial_phase, b.sponsor, CASE WHEN lower(c.nct_id) LIKE '%nct%' THEN c.nct_id ELSE a.ctfo_trial_id END AS nct_id, c.study_name AS title, b.drug_names AS tested_drug, a.enrollment_duration, a.PSM, a.actual_accrual, c.protocol_ids, CASE WHEN lower(trim(b.trial_status)) = 'others' THEN 'Other' WHEN lower(trim(b.trial_status)) = 'ongoing' THEN 'Open' WHEN lower(trim(b.trial_status)) = 'completed' THEN 'Closed' WHEN lower(trim(b.trial_status)) = 'planned' THEN 'Planned' END AS trial_status, a.num_of_sites FROM ( SELECT ctfo_trial_id, sum( cast( patients_enrolled AS DOUBLE PRECISION) ) AS actual_accrual, median(total_recruitment_months) AS enrollment_duration, median(randomization_rate) AS PSM, string_agg(DISTINCT site_country, '|') AS country, count(DISTINCT ctfo_site_id) AS num_of_sites FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ GROUP BY ctfo_trial_id ) a INNER JOIN ( SELECT ctfo_trial_id, string_agg(DISTINCT drug_names, '|') AS drug_names, trial_status, string_agg(DISTINCT sponsor, '|') AS sponsor FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) b ON a.ctfo_trial_id = b.ctfo_trial_id INNER JOIN ( SELECT trial_phase, nct_id, study_name, ctfo_trial_id, protocol_ids FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ ) c ON b.ctfo_trial_id = c.ctfo_trial_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ), abc AS ( SELECT tt.ctfo_trial_id, tt.country, tt.trial_phase, tt.sponsor, tt.nct_id, tt.title, tt.tested_drug, tt.enrollment_duration, tt.PSM, tt.actual_accrual, tt.num_of_sites, d.num_of_investigator AS num_of_inv, tt.trial_status, tt.protocol_ids, LOWER( CONCAT ( tt.ctfo_trial_id, tt.country, tt.trial_phase, tt.sponsor, tt.nct_id, tt.title, tt.tested_drug, tt.enrollment_duration, tt.PSM, tt.actual_accrual, tt.num_of_sites ) ) AS search_metric_col FROM tt left join ( SELECT details.ctfo_trial_id, COUNT(DISTINCT ctfo_investigator_id) AS num_of_investigator from $$schema_reporting$$.f_rpt_investigator_site_study_details details inner join ( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ ) setup on details.ctfo_trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ ) site ON site.ctfo_trial_id = setup.ctfo_trial_id group by 1 ) d ON tt.ctfo_trial_id = d.ctfo_trial_id ) SELECT country, trial_phase, sponsor, nct_id, ctfo_trial_id, title, tested_drug, enrollment_duration, PSM, actual_accrual, num_of_sites, num_of_inv, trial_status, protocol_ids, '$$landscape_id$$' as landscape_id, '$$user_id$$' as user_id, 'Y' as active_flag, '$$created_timestamp$$' AS created_timestamp, '$$updated_timestamp$$' AS updated_timestamp FROM abc ) ",
        "delete_trial_detail_query": "delete from $$schema$$.f_rpt_clinical_detail_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "trial_detail_count":"SELECT count(*) FROM $$schema$$.f_rpt_clinical_detail_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' ",

        "trial_detail_active_flag": "select distinct active_flag from $$schema$$.f_rpt_clinical_detail_temp  WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",

        "insert_na_flag_detail": "INSERT INTO $$schema$$.f_rpt_clinical_detail_temp(country ,trial_phase ,sponsor ,nct_id ,ctfo_trial_id ,title ,tested_drug ,enrollment_duration ,PSM ,actual_accrual ,num_of_sites ,num_of_inv ,trial_status ,protocol_ids ,landscape_id ,user_id ,active_flag ,created_timestamp , updated_timestamp) values(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL ,'$$landscape_id$$' ,'$$user_id$$' ,'NA' ,'$$created_timestamp$$' ,'$$updated_timestamp$$')",


        "update_active_flag_for_trialdetail":"update $$schema$$.f_rpt_clinical_detail_temp set active_flag = 'N' WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "fetch_trial_detail_data":"with tt as( select country,trial_phase,sponsor, nct_id ,ctfo_trial_id,title ,tested_drug ,enrollment_duration ,psm ,actual_accrual, num_of_sites, num_of_inv ,trial_status ,protocol_ids ,LOWER(CONCAT (ctfo_trial_id, country ,trial_phase ,sponsor ,nct_id ,title ,tested_drug ,enrollment_duration ,PSM ,actual_accrual ,num_of_sites)) AS search_metric_col from $$schema$$.f_rpt_clinical_detail_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' and active_flag='Y' ) select tt.country,tt.trial_phase,tt.sponsor, tt.nct_id ,tt.title ,tt.tested_drug ,tt.enrollment_duration ,tt.psm ,tt.actual_accrual, tt.num_of_sites, tt.num_of_inv ,tt.trial_status ,tt.protocol_ids from tt $$search_id$$",

        "insert_trial_timeline_query":"insert into $$schema$$.f_rpt_clinical_timeline_temp ( SELECT trial_id, trial_status, start_year, end_year, trial_start_dt,enrollment_close_date, primary_completion_date, primary_endpoint_date, trial_end_dt, psm,no_of_sites,no_of_patients, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM( SELECT case when lower(filters.nct_id) like '%nct%' then filters.nct_id else site.ctfo_trial_id end as trial_id, site.trial_status, cast(EXTRACT(YEAR FROM site.trial_start_dt) as bigint) AS start_year, cast(EXTRACT(YEAR FROM cast(site.trial_end_dt AS DATE)) as bigint) AS end_year, site.trial_start_dt, site.last_subject_in_dt AS enrollment_close_date, site.completion_date AS primary_completion_date, primary_endpoints_date AS primary_endpoint_date, site.trial_end_dt, psm, no_of_sites, no_of_patients FROM (select ctfo_trial_id,protocol_ids,trial_status,min(trial_start_dt) as trial_start_dt,max(trial_end_dt) as trial_end_dt,max(last_subject_in_dt) as last_subject_in_dt,max(completion_date) as completion_date , max(primary_endpoints_date) as primary_endpoints_date,cast(MEDIAN(randomization_rate) as double precision) AS psm,count(ctfo_site_id) AS no_of_sites, sum(cast (patients_enrolled as double precision)) AS no_of_patients from $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ group by 1,2,3) site INNER JOIN (SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) filters ON filters.ctfo_trial_id = site.ctfo_trial_id INNER JOIN (SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$sponsor$$ $$sponsor_type$$ $$trial_status$$ ) ftrial ON ftrial.ctfo_trial_id = filters.ctfo_trial_id ) AS a GROUP BY 1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,12)",
        "delete_trial_timeline_query": "delete from $$schema$$.f_rpt_clinical_timeline_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "insert_na_flag_timeline": "INSERT INTO $$schema$$.f_rpt_clinical_timeline_temp(trial_id ,trial_status ,start_year ,end_year ,trial_start_dt ,enrollment_close_date ,primary_completion_date ,primary_endpoint_date ,trial_end_dt ,psm ,no_of_sites ,no_of_patients , landscape_id , user_id ,active_flag , created_timestamp ,updated_timestamp) VALUES (NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL ,'$$landscape_id$$' ,'$$user_id$$' ,'NA' ,'$$created_timestamp$$'  ,'$$updated_timestamp$$')",
        "trial_timeline_active_flag": "select distinct active_flag from $$schema$$.f_rpt_clinical_timeline_temp  WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",


        "trial_timeline_count":"SELECT count(*) FROM $$schema$$.f_rpt_clinical_timeline_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' ",
        "update_active_flag_for_trialtimeline":"update $$schema$$.f_rpt_clinical_timeline_temp set active_flag = 'N' WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "fetch_trial_timeline_data":"select trial_id, trial_status, start_year, end_year, trial_start_dt,enrollment_close_date, primary_completion_date, primary_endpoint_date, trial_end_dt, psm,no_of_sites,no_of_patients FROM $$schema$$.f_rpt_clinical_timeline_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' and active_flag='Y' $$search_id$$",

        "insert_psm_phase": "insert into $$schema$$.f_rpt_right_chart_temp ( SELECT 'psm' as parameter, 'phase' as compare_category, trial_phase,avg(cast(site.randomization_rate AS DOUBLE PRECISION)) AS mean_value,median(cast(site.randomization_rate AS DOUBLE PRECISION)) AS median_value,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, randomization_rate, region, site_country, trial_start_dt from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id,randomization_rate, region, site_country, trial_start_dt) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase)",

        "insert_psm_status": "insert into $$schema$$.f_rpt_right_chart_temp (SELECT 'psm' as parameter, 'status' as compare_category,site.trial_status,avg(cast(site.randomization_rate AS DOUBLE PRECISION)) AS mean_value,median(cast(site.randomization_rate AS DOUBLE PRECISION)) AS median_value, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, randomization_rate, region, site_country, trial_start_dt,trial_status from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id,randomization_rate, region, site_country, trial_start_dt,trial_status) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status)",

        "insert_enrollment_duration_phase": "insert into $$schema$$.f_rpt_right_chart_temp (select 'enrollment_duration' as parameter, 'phase' as compare_category,trial_phase ,avg(cast(total_recruitment_months AS DOUBLE PRECISION)) as mean_value , median(cast(total_recruitment_months AS DOUBLE PRECISION)) as median_value ,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' from(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase)",

        "insert_enrollment_duration_status": "insert into $$schema$$.f_rpt_right_chart_temp (select 'enrollment_duration' as parameter, 'status' as compare_category, site.trial_status ,avg(cast(total_recruitment_months AS DOUBLE PRECISION)) as mean_value , median(cast(total_recruitment_months AS DOUBLE PRECISION)) as median_value, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp from(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt,trial_status from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, total_recruitment_months, region, site_country, trial_start_dt,trial_status ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status)",

        "insert_trial_duration_phase": "insert into $$schema$$.f_rpt_right_chart_temp (SELECT 'trial_duration' as parameter, 'phase' as compare_category,trial_phase ,avg(cast(trial_duration_in_years AS DOUBLE PRECISION)) AS mean_value ,PERCENTILE_CONT(0.5) WITHIN GROUP( ORDER BY trial_duration_in_years) AS median_value, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup inner join (select ctfo_trial_id, (trial_end_dt::DATE - trial_start_dt::DATE) / 365 AS trial_duration_in_years from $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, trial_duration_in_years) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN (select ctfo_trial_id, trial_status from $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase)",
        "insert_trial_duration_status": "insert into $$schema$$.f_rpt_right_chart_temp (SELECT 'trial_duration' as parameter, 'status' as compare_category,trial_status ,avg(cast(trial_duration_in_years AS DOUBLE PRECISION)) AS mean_value ,PERCENTILE_CONT(0.5) WITHIN GROUP( ORDER BY trial_duration_in_years) AS median_value,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp  FROM( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup inner join (select ctfo_trial_id, (trial_end_dt::DATE - trial_start_dt::DATE) / 365 AS trial_duration_in_years from $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, trial_duration_in_years) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN (select ctfo_trial_id, trial_status from $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_status)",

        "insert_num_of_sites_phase": "insert into $$schema$$.f_rpt_right_chart_temp (with temp_fsetup as( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) SELECT 'num_of_sites' as parameter, 'phase' as compare_category,trial_phase ,avg(cast(num_of_sites AS DOUBLE PRECISION)) AS mean_value ,median(cast(num_of_sites AS DOUBLE PRECISION)) AS median_value,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp  FROM( SELECT trial_phase ,count(DISTINCT site.ctfo_site_id) AS num_of_sites FROM temp_fsetup setup INNER JOIN ( SELECT ctfo_trial_id,ctfo_site_id, region, site_country, trial_start_dt FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, ctfo_site_id, region, site_country, trial_start_dt ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id where setup.ctfo_trial_id = ANY ( SELECT ctfo_trial_Id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) GROUP BY trial_phase ) a GROUP BY trial_phase)",

        "insert_num_of_sites_status": "insert into $$schema$$.f_rpt_right_chart_temp (SELECT 'num_of_sites' as parameter, 'status' as compare_category,trial_status, avg(cast(num_of_sites AS DOUBLE PRECISION)) AS mean_value, median(cast(num_of_sites as DOUBLE PRECISION)) AS median_value, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' from( select ftrial.trial_status,count(DISTINCT site.ctfo_site_id) AS num_of_sites from ( SELECT ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN ( SELECT ctfo_trial_id, randomization_rate, region, site_country, trial_start_dt,trial_status,ctfo_site_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id,randomization_rate, region, site_country, trial_start_dt,trial_status,ctfo_site_id ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT ctfo_trial_id, trial_status, sponsor, sponsor_type FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY ftrial.trial_status ) a group by trial_status)",

        "insert_num_of_patients_phase": "insert into $$schema$$.f_rpt_right_chart_temp (SELECT 'num_of_patients' as parameter, 'phase' as compare_category, trial_phase ,avg(cast(site.patients_enrolled as DOUBLE PRECISION)) AS mean_value ,median(cast(site.patients_enrolled as DOUBLE PRECISION)) AS median_value, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' from(select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase) setup INNER JOIN (select ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY trial_phase)",

        "insert_num_of_patients_status": "insert into $$schema$$.f_rpt_right_chart_temp (SELECT 'num_of_patients' as parameter, 'status' as compare_category, site.trial_status  ,avg(cast(site.patients_enrolled as DOUBLE PRECISION)) AS mean_value  ,median(cast(site.patients_enrolled as DOUBLE PRECISION)) AS median_value, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' from (select ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase from $$schema_reporting$$.f_rpt_filters_setup_all where $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ GROUP BY ctfo_trial_id, disease, therapeutic_area, study_name, trial_phase ) setup INNER JOIN (select ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt,trial_status from $$schema_reporting$$.f_rpt_site_study_details where $$country$$ $$region$$ $$trial_start_dt$$ GROUP BY ctfo_trial_id, patients_enrolled, region, site_country, trial_start_dt,trial_status) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( select ctfo_trial_id, trial_status, sponsor, sponsor_type from $$schema_reporting$$.f_rpt_filters_trial where $$trial_status$$ $$sponsor$$ $$sponsor_type$$ GROUP BY ctfo_trial_id, trial_status, sponsor, sponsor_type) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status)",
        "trial_right_chart_count": "SELECT count(*) FROM $$schema$$.f_rpt_right_chart_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' ",

        "trial_left_chart_count": "SELECT count(*) FROM $$schema$$.f_rpt_left_chart_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' ",

        "fetch_trial_right_chart": "select parameter,compare_category,compare_name,mean_value,median_value from $$schema$$.f_rpt_right_chart_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' and active_flag='Y'",

        "fetch_trial_left_chart": "select view_by_category, view_by_name, split_by_category, split_by_name, number_of_trials from $$schema$$.f_rpt_left_chart_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$' and active_flag='Y'",

        "delete_trial_right_chart_query": "delete from $$schema$$.f_rpt_right_chart_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "delete_trial_left_chart_query": "delete from $$schema$$.f_rpt_left_chart_temp WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",

        "trial_right_chart_active_flag": "select distinct active_flag from $$schema$$.f_rpt_right_chart_temp  WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "trial_left_chart_active_flag": "select distinct active_flag from $$schema$$.f_rpt_left_chart_temp  WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",

        "insert_na_flag_right_chart": "insert into $$schema$$.f_rpt_right_chart_temp(parameter,compare_category,compare_name,mean_value,median_value,landscape_id,user_id,active_flag , created_timestamp ,updated_timestamp) values (NULL,NULL,NULL,NULL,NULL,'$$landscape_id$$' ,'$$user_id$$' ,'NA' ,'$$created_timestamp$$' ,'$$updated_timestamp$$') ",
        "insert_na_flag_left_chart": "insert into $$schema$$.f_rpt_left_chart_temp(view_by_category,view_by_name,split_by_category,split_by_name,number_of_trials,total_trials,landscape_id,user_id,active_flag , created_timestamp ,updated_timestamp) values (NULL,NULL,NULL,NULL,NULL,NULL,'$$landscape_id$$' ,'$$user_id$$' ,'NA' ,'$$created_timestamp$$' ,'$$updated_timestamp$$') ",


        "update_active_flag_for_trialchart_right": "update $$schema$$.f_rpt_right_chart_temp set active_flag = 'N' WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",

        "update_active_flag_for_trialchart_left": "update $$schema$$.f_rpt_left_chart_temp set active_flag = 'N' WHERE landscape_id='$$landscape_id$$' and user_id='$$user_id$$'",
        "insert_trial_chart_num_of_trials_by_phase_sponsor_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT ftrial.sponsor ,trial_phase ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'sponsor' as view_by_category, a.sponsor ,'phase' as split_by_category, b.trial_phase AS phase ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT sponsor ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT sponsor ,trial_phase ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.sponsor = b.sponsor ORDER BY total_trials DESC, phase ASC)",

        "insert_trial_chart_num_of_trials_by_status_sponsor_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT ftrial.sponsor ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'sponsor' as view_by_category, a.sponsor,'status' as split_by_category ,b.trial_status ,number_of_trials ,total_trials,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT sponsor ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT trial_status ,sponsor ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.sponsor = b.sponsor ORDER BY total_trials DESC ,trial_status ASC)",

        "insert_trial_chart_num_of_trials_by_status_drug_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT drug_names AS drug ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'drug' as view_by_category, a.drug , 'status' as split_by_category, b.trial_status ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT drug ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT drug ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.drug = b.drug ORDER BY total_trials DESC , trial_status ASC)",

        "insert_trial_chart_num_of_trials_by_phase_drug_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT drug_names ,trial_phase ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'drug' as view_by_category,a.drug_names AS drug,'phase' as split_by_category, b.trial_phase AS phase  ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT drug_names ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT drug_names ,trial_phase ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.drug_names = b.drug_names ORDER BY total_trials DESC, phase ASC)",

        "insert_trial_chart_num_of_trials_by_phase_disease_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT disease ,trial_phase ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'disease' as view_by_category,a.disease,'phase' as split_by_category, b.trial_phase AS phase ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT disease ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT disease ,trial_phase ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.disease = b.disease ORDER BY total_trials DESC, phase ASC)",
        "insert_trial_chart_num_of_trials_by_status_disease_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT disease ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'disease' as view_by_category,a.disease,'status' as split_by_category, b.trial_status ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT disease ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT disease ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.disease = b.disease ORDER BY total_trials DESC, trial_status ASC)",

        "insert_trial_chart_num_of_trials_by_phase_query": "insert into $$schema$$.f_rpt_left_chart_temp (SELECT 'phase' as view_by_category, trial_phase AS phase , 'phase' as split_by_category, trial_phase AS phase ,count(DISTINCT site.ctfo_trial_id) AS number_of_trials, NULL as total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$ ) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id WHERE setup.ctfo_trial_id = ANY (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$) GROUP BY trial_phase ORDER BY count(DISTINCT site.ctfo_trial_id) DESC ,phase ASC LIMIT $$LIMIT$$)",

        "insert_trial_chart_num_of_trials_by_status_query": "insert into $$schema$$.f_rpt_left_chart_temp (SELECT 'trial_status' as view_by_category, site.trial_status , 'status' as split_by_category, site.trial_status  ,count(DISTINCT site.ctfo_trial_id) AS number_of_trials, NULL as total_trials,'$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY site.trial_status ORDER BY count(DISTINCT site.ctfo_trial_id) DESC , trial_status ASC LIMIT $$LIMIT$$)",

        "insert_trial_chart_num_of_trials_by_phase_status_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT trial_phase AS phase ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1,2,3 ) SELECT 'phase' as view_by_category, a.phase , 'status' as split_by_category, b.trial_status ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT phase ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT phase ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.phase = b.phase ORDER BY total_trials DESC , trial_status ASC)",

        "insert_trial_chart_num_of_trials_by_status_phase_query": "insert into $$schema$$.f_rpt_left_chart_temp (WITH universe AS( SELECT trial_phase AS phase ,site.trial_status ,setup.ctfo_trial_id FROM ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) setup INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$ $$trial_start_dt$$ ) site ON site.ctfo_Trial_id = setup.ctfo_trial_id INNER JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_trial WHERE $$trial_status$$ $$sponsor$$ $$sponsor_type$$ ) ftrial ON ftrial.ctfo_Trial_id = setup.ctfo_trial_id GROUP BY 1 ,2 ,3 ) SELECT 'trial_status' as view_by_category, a.trial_status ,'phase' as split_by_category, b.phase  ,number_of_trials ,total_trials, '$$landscape_id$$' as landscape_id,'$$user_id$$' as user_id,'Y' as active_flag,'$$created_timestamp$$' AS created_timestamp,'$$updated_timestamp$$' AS updated_timestamp FROM ( SELECT trial_status ,count(ctfo_trial_id) AS total_trials FROM universe GROUP BY 1 ORDER BY 2 DESC LIMIT $$LIMIT$$ ) a INNER JOIN ( SELECT phase ,trial_status ,count(ctfo_trial_id) AS number_of_trials FROM universe GROUP BY 1 ,2 ) b ON a.trial_status = b.trial_status ORDER BY total_trials DESC, phase ASC)",

        "trial_map_terminated_trials_query": "SELECT country, count(distinct a.ctfo_trial_id) AS total_trials,'null' as matching_trial,'null' as years FROM (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_phase$$ $$study_name$$ $$trial_id$$) a INNER JOIN (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_trial WHERE trial_status = 'Terminated' $$sponsor$$ $$sponsor_type$$) b ON a.ctfo_trial_id=b.ctfo_trial_id INNER JOIN (SELECT ctfo_trial_id, trial_start_dt, site_country AS country FROM $$schema_reporting$$.f_rpt_site_study_details WHERE $$country$$ $$region$$) c ON b.ctfo_trial_id=c.ctfo_trial_id group by 1"
      },
      "site_landscape_queries": {
        "get_user_filters_query": " select global_filter,site_filter,patient_filter,trial_filter,investigator_filter from $$schema$$.f_rpt_landscape_filters where userid='$$user_id$$' and landscape_id = '$$landscape_id$$' and active_flag='Y'",
        "site_map_filters_query": " select global_filter,site_filter,patient_filter,trial_filter,investigator_filter from $$schema$$.f_rpt_landscape_filters where userid='$$userid$$' and landscape_id = '$$landscape_id$$' and active_flag='true'",
        "site_tier_query": "INSERT INTO $$schema$$.f_rpt_site_tiering_landscape ( WITH site_universe_1 AS ( SELECT site.ctfo_site_id, max(site_nm) as site_nm, max(site_city) as site_city, max(site_state) as site_state, max(site_country) as site_country, max(region) as region, max(type) AS site_type, Median(average_startup_time) AS average_startup_time_median, Median(randomization_rate) AS randomization_rate_median, Median(lost_opportunity_time) AS lost_opportunity_time_median, Median(screen_fail_rate) AS screen_failure_rate_median, Count(DISTINCT ctfo_trial_id) AS similar_trials_experience, Count( DISTINCT CASE WHEN Extract( year FROM trial_start_dt ) >= ( Extract( year FROM CURRENT_DATE ) -5 ) THEN ctfo_trial_id END ) AS recent_trials, max(COALESCE(current_workload,0)) AS ongoing_trials, CASE WHEN COALESCE( Max(last_subject_in_dt), Max(completion_date) ) >= COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) THEN Round( ( ( COALESCE( Max(last_subject_in_dt), Max(completion_date) ) - COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE CASE WHEN CURRENT_DATE >= COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) THEN Round( ( ( CURRENT_DATE - COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE NULL END END AS years_of_exp FROM $$schema_reporting$$.f_rpt_site_study_details site LEFT JOIN $$schema_reporting$$.site_workload_vw vw ON site.ctfo_site_id = vw.ctfo_site_id WHERE EXISTS (SELECT geo.trial_site_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id WHERE site.trial_site_id = geo.trial_site_id $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions GROUP BY geo.trial_site_id ) group by 1 ), site_universe_2 AS (SELECT ctfo_site_id, count(distinct ctfo_trial_id) as disease_exp FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE EXISTS (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE site.ctfo_trial_id = ps.ctfo_trial_id $$ta_conditions $$disease_conditions ) group by 1 ) , site_universe_3 AS (SELECT ctfo_site_id, count(distinct ctfo_trial_id) as phase_exp FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE EXISTS (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE site.ctfo_trial_id = ps.ctfo_trial_id $$trial_phase_conditions ) group by 1 ), site_metrics as ( select a.ctfo_site_id, site_nm, site_city, site_state, site_country, region, site_type, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, similar_trials_experience, recent_trials , ongoing_trials, years_of_exp, b.disease_exp, c.phase_exp from site_universe_1 a left join site_universe_2 b on a.ctfo_site_id=b.ctfo_site_id left join site_universe_3 c on a.ctfo_site_id=c.ctfo_site_id ) , temp_site_metrics_aggr AS ( SELECT Min(disease_exp) AS min_disease_experience, Max(disease_exp) AS max_disease_experience, Min(ongoing_trials) AS min_ongoing_trials, Max(ongoing_trials) AS max_ongoing_trials, Min(randomization_rate_median) AS min_randomization_rate_median, Max(randomization_rate_median) AS max_randomization_rate_median, Min(average_startup_time_median) AS min_average_startup_time_median, Max(average_startup_time_median) AS max_average_startup_time_median, Min(lost_opportunity_time_median) AS min_lost_opportunity_time_median, Max(lost_opportunity_time_median) AS max_lost_opportunity_time_median, Min(screen_failure_rate_median) AS min_screen_failure_rate_median, Max(screen_failure_rate_median) AS max_screen_failure_rate_median, Min(recent_trials) AS min_recent_trials, Max(recent_trials) AS max_recent_trials, Min(years_of_exp) AS min_years_of_exp, Max(years_of_exp) AS max_years_of_exp, Min(similar_trials_experience) AS min_similar_trials_experience, Max(similar_trials_experience) AS max_similar_trials_experience, Min(phase_exp) AS min_phase_exp, Max(phase_exp) AS max_phase_exp FROM site_metrics ), site_norm AS ( SELECT ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, ongoing_trials, recent_trials, years_of_exp, phase_exp, site_type, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median, CASE WHEN min_disease_experience IS NULL OR max_disease_experience IS NULL OR disease_exp IS NULL THEN NULL WHEN min_disease_experience = 0 AND max_disease_experience = 0 AND disease_exp = 0 THEN 0 WHEN min_disease_experience = max_disease_experience AND min_disease_experience = disease_exp THEN 1 ELSE Cast( ( disease_exp - min_disease_experience ) AS DOUBLE PRECISION ) / Cast( ( max_disease_experience - min_disease_experience ) AS DOUBLE PRECISION ) END AS normalized_disease_exp, CASE WHEN min_ongoing_trials IS NULL OR max_ongoing_trials IS NULL OR ongoing_trials IS NULL THEN NULL WHEN min_ongoing_trials = 0 AND max_ongoing_Trials = 0 AND ongoing_trials = 0 THEN 0 WHEN min_ongoing_trials = max_ongoing_trials AND min_ongoing_trials = ongoing_trials THEN 1 ELSE Cast( ( max_ongoing_trials - ongoing_trials ) AS DOUBLE PRECISION ) / Cast( ( max_ongoing_trials - min_ongoing_trials ) AS DOUBLE PRECISION ) END AS normalized_ongoing_trials, CASE WHEN min_years_of_exp IS NULL OR max_years_of_exp IS NULL OR years_of_exp IS NULL THEN NULL WHEN min_years_of_exp = 0 AND max_years_of_exp = 0 AND years_of_exp = 0 THEN 0 WHEN min_years_of_exp = max_years_of_exp AND min_years_of_exp = years_of_exp THEN 1 ELSE Cast( ( years_of_exp - min_years_of_exp ) AS DOUBLE PRECISION ) / Cast( ( max_years_of_exp - min_years_of_exp ) AS DOUBLE PRECISION ) END AS normalized_years_of_exp, CASE WHEN min_recent_trials IS NULL OR max_recent_trials IS NULL OR recent_trials IS NULL THEN NULL WHEN min_recent_trials = 0 AND max_recent_trials = 0 AND recent_trials = 0 THEN 0 WHEN min_recent_trials = max_recent_trials AND min_recent_trials = recent_trials THEN 1 ELSE Cast( ( max_recent_trials - recent_trials ) AS DOUBLE PRECISION ) / Cast( ( max_recent_trials - min_recent_trials ) AS DOUBLE PRECISION ) END AS normalized_recent_trials, CASE WHEN min_similar_trials_experience IS NULL OR max_similar_trials_experience IS NULL OR similar_trials_experience IS NULL THEN NULL WHEN min_similar_trials_experience = 0 AND max_similar_trials_experience = 0 AND similar_trials_experience = 0 THEN 0 WHEN min_similar_trials_experience = max_similar_trials_experience AND min_similar_trials_experience = similar_trials_experience THEN 1 ELSE Cast( ( similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) / Cast( ( max_similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) END AS normalized_similar_trials_experience, CASE WHEN min_phase_exp IS NULL OR max_phase_exp IS NULL OR phase_exp IS NULL THEN NULL WHEN min_phase_exp = 0 AND max_phase_exp = 0 AND phase_exp = 0 THEN 0 WHEN min_phase_exp = max_phase_exp AND min_phase_exp = phase_exp THEN 1 ELSE Cast( ( phase_exp - min_phase_exp ) AS DOUBLE PRECISION ) / Cast( ( max_phase_exp - min_phase_exp ) AS DOUBLE PRECISION ) END AS normalized_phase_exp, CASE WHEN min_randomization_rate_median IS NULL OR max_randomization_rate_median IS NULL OR randomization_rate_median IS NULL THEN NULL WHEN min_randomization_rate_median = 0 AND max_randomization_rate_median = 0 AND randomization_rate_median = 0 THEN 0 WHEN min_randomization_rate_median = max_randomization_rate_median AND min_randomization_rate_median = randomization_rate_median THEN 1 ELSE Cast( ( randomization_rate_median - min_randomization_rate_median ) AS DOUBLE PRECISION ) / Cast( ( max_randomization_rate_median - min_randomization_rate_median ) AS DOUBLE PRECISION ) END AS normalized_randomization_rate_median, CASE WHEN min_average_startup_time_median IS NULL OR max_average_startup_time_median IS NULL OR average_startup_time_median IS NULL THEN NULL WHEN min_average_startup_time_median = 0 AND max_average_startup_time_median = 0 AND average_startup_time_median = 0 THEN 0 WHEN min_average_startup_time_median = max_average_startup_time_median AND min_average_startup_time_median = average_startup_time_median THEN 1 ELSE Cast( ( max_average_startup_time_median - average_startup_time_median ) AS DOUBLE PRECISION ) / Cast( ( max_average_startup_time_median - min_average_startup_time_median ) AS DOUBLE PRECISION ) END AS normalized_average_startup_time_median, CASE WHEN min_lost_opportunity_time_median IS NULL OR max_lost_opportunity_time_median IS NULL OR lost_opportunity_time_median IS NULL THEN NULL WHEN min_lost_opportunity_time_median = 0 AND max_lost_opportunity_time_median = 0 AND lost_opportunity_time_median = 0 THEN 0 WHEN min_lost_opportunity_time_median = max_lost_opportunity_time_median AND min_lost_opportunity_time_median = lost_opportunity_time_median THEN 1 ELSE Cast( ( max_lost_opportunity_time_median - lost_opportunity_time_median ) AS DOUBLE PRECISION ) / Cast( ( max_lost_opportunity_time_median - min_lost_opportunity_time_median ) AS DOUBLE PRECISION ) END AS normalized_lost_opportunity_time_median, CASE WHEN min_screen_failure_rate_median IS NULL OR max_screen_failure_rate_median IS NULL OR screen_failure_rate_median IS NULL THEN NULL WHEN min_screen_failure_rate_median = 0 AND max_screen_failure_rate_median = 0 AND screen_failure_rate_median = 0 THEN 0 WHEN min_screen_failure_rate_median = max_screen_failure_rate_median AND min_screen_failure_rate_median = screen_failure_rate_median THEN 1 ELSE Cast( ( max_screen_failure_rate_median - screen_failure_rate_median ) AS DOUBLE PRECISION ) / Cast( ( max_screen_failure_rate_median - min_screen_failure_rate_median ) AS DOUBLE PRECISION ) END AS normalized_screen_failure_rate_median FROM (SELECT ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, ongoing_trials, recent_trials, years_of_exp, phase_exp, site_type, average_startup_time_median, randomization_rate_median, lost_opportunity_time_median, screen_failure_rate_median FROM site_metrics ) D CROSS JOIN temp_site_metrics_aggr ), site_rank AS ( SELECT ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, randomization_rate_median, average_startup_time_median, lost_opportunity_time_median, screen_failure_rate_median, ongoing_trials, recent_trials, years_of_exp, phase_exp, site_type, ( ( COALESCE( normalized_average_startup_time_median, 0 ) * $$wt_startup_time ) + ( COALESCE( normalized_randomization_rate_median, 0 ) * $$wt_enrollment_rate ) + ( COALESCE( normalized_years_of_exp, 0 ) * $$wt_years_exp ) + ( COALESCE( normalized_disease_exp, 0 ) * $$wt_disease_exp ) + ( COALESCE(normalized_ongoing_trials, 0) * $$wt_ongoing_trial ) + ( COALESCE(normalized_recent_trials, 0) * $$wt_recent_trial ) + ( COALESCE( normalized_screen_failure_rate_median, 0 ) * $$wt_screen_failure_rate ) + ( COALESCE( normalized_lost_opportunity_time_median, 0 ) * $$wt_lost_opportunity_time ) + ( COALESCE( normalized_similar_trials_experience, 0 ) * $$wt_prior_exp ) + ( COALESCE( normalized_phase_exp, 0 ) * $$wt_phase_exp ) ) AS tier_score, Dense_rank() OVER ( ORDER BY ( ( COALESCE( normalized_average_startup_time_median, 0 ) * $$wt_startup_time ) + ( COALESCE( normalized_randomization_rate_median, 0 ) * $$wt_enrollment_rate ) + ( COALESCE( normalized_years_of_exp, 0 ) * $$wt_years_exp ) + ( COALESCE( normalized_disease_exp, 0 ) * $$wt_disease_exp ) + ( COALESCE(normalized_ongoing_trials, 0) * $$wt_ongoing_trial ) + ( COALESCE(normalized_recent_trials, 0) * $$wt_recent_trial ) + ( COALESCE( normalized_screen_failure_rate_median, 0 ) * $$wt_screen_failure_rate ) + ( COALESCE( normalized_lost_opportunity_time_median, 0 ) * $$wt_lost_opportunity_time ) + ( COALESCE( normalized_similar_trials_experience, 0 ) * $$wt_prior_exp ) + ( COALESCE( normalized_phase_exp, 0 ) * $$wt_phase_exp ) ) DESC ) site_rank FROM site_norm ) SELECT site_rank AS rank, a.ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, average_startup_time_median, randomization_rate_median AS enrollment_rate, lost_opportunity_time_median, screen_failure_rate_median, disease_exp, ongoing_trials, years_of_exp, recent_trials, tier_score, phase_exp, site_type, similar_trials_experience, COALESCE(tier_5.tier, '5') AS global_tier, Ntile(4) OVER ( PARTITION BY site_country ORDER BY site_rank DESC ) AS local_tier, '$$user_id' AS user_id, 't' :: boolean AS active_flag, now() :: TIMESTAMP AS created_timestamp, '$$landscape_id$$' AS landscape_id FROM (SELECT * FROM site_rank ORDER BY site_rank ) a LEFT JOIN (SELECT ctfo_site_id, ntile(4) OVER ( ORDER BY tier_score DESC ) AS tier FROM (SELECT * FROM site_rank ORDER BY site_rank ) b WHERE tier_score IS NOT NULL AND tier_score <> 0 ) tier_5 ON a.ctfo_site_id = tier_5.ctfo_site_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26 order by 1)",
        "site_tier_exp_query": "INSERT INTO $$schema$$.f_rpt_site_tiering_landscape_exp ( WITH site_universe_1 AS ( SELECT site.ctfo_site_id, max(site_nm) as site_nm, max(site_city) as site_city, max(site_state) as site_state, max(site_country) as site_country, max(region) as region, max(type) AS site_type, Count(DISTINCT ctfo_trial_id) AS similar_trials_experience, Count( DISTINCT CASE WHEN Extract( year FROM trial_start_dt ) >= ( Extract( year FROM CURRENT_DATE ) -5 ) THEN ctfo_trial_id END ) AS recent_trials, max(COALESCE(current_workload,0)) AS ongoing_trials, CASE WHEN COALESCE( Max(last_subject_in_dt), Max(completion_date) ) >= COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) THEN Round( ( ( COALESCE( Max(last_subject_in_dt), Max(completion_date) ) - COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE CASE WHEN CURRENT_DATE >= COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) THEN Round( ( ( CURRENT_DATE - COALESCE( Min(ready_to_enroll_dt), Min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE NULL END END AS years_of_exp FROM $$schema_reporting$$.f_rpt_site_study_details site LEFT JOIN $$schema_reporting$$.site_workload_vw vw ON site.ctfo_site_id = vw.ctfo_site_id WHERE EXISTS (SELECT geo.trial_site_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id WHERE site.trial_site_id = geo.trial_site_id $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions GROUP BY geo.trial_site_id ) group by 1 ), site_universe_2 AS (SELECT ctfo_site_id, count(distinct ctfo_trial_id) as disease_exp FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE EXISTS (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE site.ctfo_trial_id = ps.ctfo_trial_id $$ta_conditions $$disease_conditions ) group by 1 ) , site_universe_3 AS (SELECT ctfo_site_id, count(distinct ctfo_trial_id) as phase_exp FROM $$schema_reporting$$.f_rpt_site_study_details site WHERE EXISTS (SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE site.ctfo_trial_id = ps.ctfo_trial_id $$trial_phase_conditions ) group by 1 ), site_metrics as ( select a.ctfo_site_id, site_nm, site_city, site_state, site_country, region, site_type, similar_trials_experience, recent_trials , ongoing_trials, years_of_exp, b.disease_exp, c.phase_exp from site_universe_1 a left join site_universe_2 b on a.ctfo_site_id=b.ctfo_site_id left join site_universe_3 c on a.ctfo_site_id=c.ctfo_site_id ) , temp_site_metrics_aggr AS ( SELECT Min(disease_exp) AS min_disease_experience, Max(disease_exp) AS max_disease_experience, Min(ongoing_trials) AS min_ongoing_trials, Max(ongoing_trials) AS max_ongoing_trials, Min(recent_trials) AS min_recent_trials, Max(recent_trials) AS max_recent_trials, Min(years_of_exp) AS min_years_of_exp, Max(years_of_exp) AS max_years_of_exp, Min(similar_trials_experience) AS min_similar_trials_experience, Max(similar_trials_experience) AS max_similar_trials_experience, Min(phase_exp) AS min_phase_exp, Max(phase_exp) AS max_phase_exp FROM site_metrics ), site_norm AS ( SELECT ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, ongoing_trials, recent_trials, years_of_exp, phase_exp, site_type, CASE WHEN min_disease_experience IS NULL OR max_disease_experience IS NULL OR disease_exp IS NULL THEN NULL WHEN min_disease_experience = 0 AND max_disease_experience = 0 AND disease_exp = 0 THEN 0 WHEN min_disease_experience = max_disease_experience AND min_disease_experience = disease_exp THEN 1 ELSE Cast( ( disease_exp - min_disease_experience ) AS DOUBLE PRECISION ) / Cast( ( max_disease_experience - min_disease_experience ) AS DOUBLE PRECISION ) END AS normalized_disease_exp, CASE WHEN min_ongoing_trials IS NULL OR max_ongoing_trials IS NULL OR ongoing_trials IS NULL THEN NULL WHEN min_ongoing_trials = 0 AND max_ongoing_Trials = 0 AND ongoing_trials = 0 THEN 0 WHEN min_ongoing_trials = max_ongoing_trials AND min_ongoing_trials = ongoing_trials THEN 1 ELSE Cast( ( max_ongoing_trials - ongoing_trials ) AS DOUBLE PRECISION ) / Cast( ( max_ongoing_trials - min_ongoing_trials ) AS DOUBLE PRECISION ) END AS normalized_ongoing_trials, CASE WHEN min_years_of_exp IS NULL OR max_years_of_exp IS NULL OR years_of_exp IS NULL THEN NULL WHEN min_years_of_exp = 0 AND max_years_of_exp = 0 AND years_of_exp = 0 THEN 0 WHEN min_years_of_exp = max_years_of_exp AND min_years_of_exp = years_of_exp THEN 1 ELSE Cast( ( years_of_exp - min_years_of_exp ) AS DOUBLE PRECISION ) / Cast( ( max_years_of_exp - min_years_of_exp ) AS DOUBLE PRECISION ) END AS normalized_years_of_exp, CASE WHEN min_recent_trials IS NULL OR max_recent_trials IS NULL OR recent_trials IS NULL THEN NULL WHEN min_recent_trials = 0 AND max_recent_trials = 0 AND recent_trials = 0 THEN 0 WHEN min_recent_trials = max_recent_trials AND min_recent_trials = recent_trials THEN 1 ELSE Cast( ( max_recent_trials - recent_trials ) AS DOUBLE PRECISION ) / Cast( ( max_recent_trials - min_recent_trials ) AS DOUBLE PRECISION ) END AS normalized_recent_trials, CASE WHEN min_similar_trials_experience IS NULL OR max_similar_trials_experience IS NULL OR similar_trials_experience IS NULL THEN NULL WHEN min_similar_trials_experience = 0 AND max_similar_trials_experience = 0 AND similar_trials_experience = 0 THEN 0 WHEN min_similar_trials_experience = max_similar_trials_experience AND min_similar_trials_experience = similar_trials_experience THEN 1 ELSE Cast( ( similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) / Cast( ( max_similar_trials_experience - min_similar_trials_experience ) AS DOUBLE PRECISION ) END AS normalized_similar_trials_experience, CASE WHEN min_phase_exp IS NULL OR max_phase_exp IS NULL OR phase_exp IS NULL THEN NULL WHEN min_phase_exp = 0 AND max_phase_exp = 0 AND phase_exp = 0 THEN 0 WHEN min_phase_exp = max_phase_exp AND min_phase_exp = phase_exp THEN 1 ELSE Cast( ( phase_exp - min_phase_exp ) AS DOUBLE PRECISION ) / Cast( ( max_phase_exp - min_phase_exp ) AS DOUBLE PRECISION ) END AS normalized_phase_exp FROM (SELECT ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, ongoing_trials, recent_trials, years_of_exp, phase_exp, site_type FROM site_metrics ) D CROSS JOIN temp_site_metrics_aggr ), site_rank AS ( SELECT ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, ongoing_trials, recent_trials, years_of_exp, phase_exp, site_type, ( ( COALESCE( normalized_years_of_exp, 0 ) * $$wt_years_exp ) + ( COALESCE( normalized_disease_exp, 0 ) * $$wt_disease_exp ) + ( COALESCE(normalized_ongoing_trials, 0) * $$wt_ongoing_trial ) + ( COALESCE(normalized_recent_trials, 0) * $$wt_recent_trial ) + ( COALESCE( normalized_similar_trials_experience, 0 ) * $$wt_prior_exp ) + ( COALESCE( normalized_phase_exp, 0 ) * $$wt_phase_exp ) ) AS tier_score, Dense_rank() OVER ( ORDER BY ( ( COALESCE( normalized_years_of_exp, 0 ) * $$wt_years_exp ) + ( COALESCE( normalized_disease_exp, 0 ) * $$wt_disease_exp ) + ( COALESCE(normalized_ongoing_trials, 0) * $$wt_ongoing_trial ) + ( COALESCE(normalized_recent_trials, 0) * $$wt_recent_trial ) + ( COALESCE( normalized_similar_trials_experience, 0 ) * $$wt_prior_exp ) + ( COALESCE( normalized_phase_exp, 0 ) * $$wt_phase_exp ) ) DESC ) site_rank FROM site_norm ) SELECT site_rank AS rank, a.ctfo_site_id, site_nm, site_city, site_state, site_country, region, similar_trials_experience, disease_exp, ongoing_trials, years_of_exp, recent_trials, tier_score, phase_exp, site_type, similar_trials_experience, COALESCE(tier_5.tier, '5') AS global_tier, Ntile(4) OVER ( PARTITION BY site_country ORDER BY site_rank DESC ) AS local_tier, '$$user_id' AS user_id, 't' :: boolean AS active_flag, now() :: TIMESTAMP AS created_timestamp, '$$landscape_id$$' AS landscape_id FROM (SELECT * FROM site_rank ORDER BY site_rank ) a LEFT JOIN (SELECT ctfo_site_id, ntile(4) OVER ( ORDER BY tier_score DESC ) AS tier FROM (SELECT * FROM site_rank ORDER BY site_rank ) b WHERE tier_score IS NOT NULL AND tier_score <> 0 ) tier_5 ON a.ctfo_site_id = tier_5.ctfo_site_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22 order by 1)",
        "site_tier_view_query": "WITH temp_site_id AS ( SELECT ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE $$patient_conditions $$trialtitle_conditions ) SELECT rank, ctfo_site_id as site_id, site_nm, site_country, similar_trials_experience, average_startup_time_median, lost_opportunity_time_median, enrollment_rate, screen_failure_rate_median, disease_experience_year, total_years_experience, phase_experience_year, sponsor_experience_year, ongoing_trials, recent_trials, local_tier, global_tier from $$schema$$.f_rpt_site_tiering_landscape tier where user_id = '$$user_id' and landscape_id = '$$landscape_id$$' and active_flag = '$$active_flag' and $$conditions and exists( SELECT distinct ctfo_site_id FROM temp_site_id WHERE tier.ctfo_site_id = temp_site_id.ctfo_site_id GROUP BY 1 ) $$order$$ $$limit$$ $$offset$$",
        "site_tier_exp_view_query": "WITH temp_site_id AS ( select ctfo_site_id from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id where $$patient_conditions $$trialtitle_conditions ) SELECT rank, ctfo_site_id as site_id, site_nm, site_country, similar_trials_experience, disease_experience_year, total_years_experience, phase_experience_year, sponsor_experience_year, ongoing_trials, recent_trials, local_tier, global_tier from $$schema$$.f_rpt_site_tiering_landscape_exp tier where user_id = '$$user_id' and landscape_id = '$$landscape_id$$' and active_flag = '$$active_flag' and $$conditions and exists( select distinct ctfo_site_id from temp_site_id where tier.ctfo_site_id = temp_site_id.ctfo_site_id group by 1 ) $$order$$ $$limit$$ $$offset$$",
        "site_tier_inv_query": "INSERT INTO $$schema$$.f_rpt_investigator_site_tiering_landscape ( with site_universe AS ( SELECT * FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE EXISTS ( SELECT geo.trial_site_inv_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id WHERE geo.trial_site_inv_id = inv.trial_site_inv_id $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions GROUP BY geo.trial_site_inv_id ) ) , inv_metrics AS ( SELECT a.ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_email, investigator_city, investigator_state, investigator_country, region, enrollment_rate_median, screen_failure_rate_median, disease_experience_years, count_recent_trials AS recentness_of_activity, years_of_experience, current_workload, sponsor_experience, phase_experience, '1' AS affinity_score, '1' AS kol_score, '100' AS in_network_patient_count, '100' AS in_network_physician_access FROM ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_email, investigator_city, investigator_state, investigator_country, region, current_workload, median(enrollment_rate) AS enrollment_rate_median, median(screen_failure_rate) AS screen_failure_rate_median FROM site_universe GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ) a LEFT JOIN $$schema_reporting$$.inv_completed_trials_vw b ON a.ctfo_investigator_id = b.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, CASE WHEN coalesce( max(last_subject_in_dt), max(trial_end_dt) ) >= coalesce( min(ready_to_enroll_dt), min(trial_start_dt) ) THEN round( ( ( coalesce( max(last_subject_in_dt), max(trial_end_dt) ) - coalesce( min(ready_to_enroll_dt), min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE CASE WHEN CURRENT_DATE >= coalesce( min(ready_to_enroll_dt), min(trial_start_dt) ) THEN round( ( ( CURRENT_DATE - coalesce( min(ready_to_enroll_dt), min(trial_start_dt) ) ) / 365.0 ), 3 ) ELSE NULL end end AS disease_experience_years FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE EXISTS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE ps.ctfo_trial_id = inv.ctfo_trial_id $$ta_conditions $$disease_conditions GROUP BY ctfo_trial_id ) GROUP BY ctfo_investigator_id ) c ON a.ctfo_investigator_id = c.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id, count( DISTINCT CASE WHEN extract( year FROM trial_start_dt ) > ( extract( year FROM CURRENT_DATE ) -5 ) THEN ctfo_trial_id end ) AS count_recent_trials, CASE WHEN CURRENT_DATE >= min(trial_start_dt) THEN round( ( ( CURRENT_DATE - min(trial_start_dt) ) / 365.0 ), 3 ) ELSE NULL end AS years_of_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE EXISTS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE ps.ctfo_trial_id = inv.ctfo_trial_id $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions GROUP BY ctfo_trial_id ) GROUP BY ctfo_investigator_id ) d ON a.ctfo_investigator_id = d.ctfo_investigator_id LEFT JOIN ( SELECT geo.ctfo_investigator_id, count(DISTINCT geo.ctfo_trial_id) filter (where 1=1 $$ta_conditions $$disease_conditions) AS sponsor_experience, count(DISTINCT geo.ctfo_trial_id) filter(WHERE 1=1 $$trial_phase_conditions ) AS phase_experience FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id GROUP BY geo.ctfo_investigator_id ) e ON a.ctfo_investigator_id = e.ctfo_investigator_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 ) , inv_norm AS ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_email, investigator_city, investigator_state, investigator_country, region, enrollment_rate_median, screen_failure_rate_median, disease_experience_years, recentness_of_activity, years_of_experience, current_workload, sponsor_experience, phase_experience, affinity_score, kol_score, in_network_patient_count, in_network_physician_access, CASE WHEN min_enrollment_rate_median IS NULL OR max_enrollment_rate_median IS NULL OR enrollment_rate_median IS NULL THEN NULL WHEN min_enrollment_rate_median = 0 AND max_enrollment_rate_median = 0 AND enrollment_rate_median = 0 THEN 0 WHEN min_enrollment_rate_median = max_enrollment_rate_median AND min_enrollment_rate_median = enrollment_rate_median THEN 1 ELSE cast( ( enrollment_rate_median - min_enrollment_rate_median ) AS DOUBLE PRECISION ) / cast( ( max_enrollment_rate_median - min_enrollment_rate_median ) AS DOUBLE PRECISION ) end AS norm_enrollment_rate_median, CASE WHEN min_years_of_experience IS NULL OR max_years_of_experience IS NULL OR years_of_experience IS NULL THEN NULL WHEN min_years_of_experience = 0 AND max_years_of_experience = 0 AND years_of_experience = 0 THEN 0 WHEN min_years_of_experience = max_years_of_experience AND min_years_of_experience = years_of_experience THEN 1 ELSE cast( ( years_of_experience - min_years_of_experience ) AS DOUBLE PRECISION ) / cast( ( max_years_of_experience - min_years_of_experience ) AS DOUBLE PRECISION ) end AS norm_years_of_experience, CASE WHEN min_disease_experience_years IS NULL OR max_disease_experience_years IS NULL OR disease_experience_years IS NULL THEN NULL WHEN min_disease_experience_years = 0 AND max_disease_experience_years = 0 AND disease_experience_years = 0 THEN 0 WHEN min_disease_experience_years = max_disease_experience_years AND min_disease_experience_years = disease_experience_years THEN 1 ELSE cast( ( disease_experience_years - min_disease_experience_years ) AS DOUBLE PRECISION ) / cast( ( max_disease_experience_years - min_disease_experience_years ) AS DOUBLE PRECISION ) end AS norm_disease_experience_years, CASE WHEN min_current_workload IS NULL OR max_current_workload IS NULL OR current_workload IS NULL THEN NULL WHEN min_current_workload = 0 AND max_current_workload = 0 AND current_workload = 0 THEN 0 WHEN min_current_workload = max_current_workload AND min_current_workload = current_workload THEN 1 ELSE cast( ( max_current_workload - current_workload ) AS DOUBLE PRECISION ) / cast( ( max_current_workload - min_current_workload ) AS DOUBLE PRECISION ) end AS norm_current_workload, CASE WHEN min_recentness_of_activity IS NULL OR max_recentness_of_activity IS NULL OR recentness_of_activity IS NULL THEN NULL WHEN min_recentness_of_activity = 0 AND max_recentness_of_activity = 0 AND recentness_of_activity = 0 THEN 0 WHEN min_recentness_of_activity = max_recentness_of_activity AND min_recentness_of_activity = recentness_of_activity THEN 1 ELSE cast( ( max_recentness_of_activity - recentness_of_activity ) AS DOUBLE PRECISION ) / cast( ( max_recentness_of_activity - min_recentness_of_activity ) AS DOUBLE PRECISION ) end AS norm_recentness_of_activity, CASE WHEN min_phase_experience_year IS NULL OR max_phase_experience_year IS NULL OR phase_experience IS NULL THEN NULL WHEN min_phase_experience_year = 0 AND max_phase_experience_year = 0 AND phase_experience = 0 THEN 0 WHEN min_phase_experience_year = max_phase_experience_year AND min_phase_experience_year = phase_experience THEN 1 ELSE cast( ( phase_experience - min_phase_experience_year ) AS DOUBLE PRECISION ) / cast( ( max_phase_experience_year - min_phase_experience_year ) AS DOUBLE PRECISION ) end AS normalized_phase_experience_year, CASE WHEN min_total_years_experience IS NULL OR max_total_years_experience IS NULL OR sponsor_experience IS NULL THEN NULL WHEN min_total_years_experience = 0 AND max_total_years_experience = 0 AND sponsor_experience = 0 THEN 0 WHEN min_total_years_experience = max_total_years_experience AND min_total_years_experience = sponsor_experience THEN 1 ELSE cast( ( sponsor_experience - min_total_years_experience ) AS DOUBLE PRECISION ) / cast( ( max_total_years_experience - min_total_years_experience ) AS DOUBLE PRECISION ) end AS normalized_total_years_experience FROM ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_email, investigator_city, investigator_state, investigator_country, region, enrollment_rate_median, screen_failure_rate_median, disease_experience_years, recentness_of_activity, years_of_experience, current_workload, sponsor_experience, phase_experience, affinity_score, kol_score, in_network_patient_count, in_network_physician_access FROM inv_metrics ) a CROSS JOIN ( SELECT min(enrollment_rate_median) AS min_enrollment_rate_median, max(enrollment_rate_median) AS max_enrollment_rate_median, min(years_of_experience) AS min_years_of_experience, max(years_of_experience) AS max_years_of_experience, min(disease_experience_years) AS min_disease_experience_years, max(disease_experience_years) AS max_disease_experience_years, min(recentness_of_activity) AS min_recentness_of_activity, max(recentness_of_activity) AS max_recentness_of_activity, min(current_workload) AS min_current_workload, max(current_workload) AS max_current_workload, min(phase_experience) AS min_phase_experience_year, max(phase_experience) AS max_phase_experience_year, min(sponsor_experience) AS min_total_years_experience, max(sponsor_experience) AS max_total_years_experience FROM inv_metrics ) b ) , inv_rank AS ( SELECT ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_email, investigator_city, investigator_state, investigator_country, region, enrollment_rate_median, screen_failure_rate_median, disease_experience_years, recentness_of_activity, years_of_experience, current_workload, sponsor_experience, phase_experience, affinity_score, kol_score, in_network_patient_count, in_network_physician_access, ( ( coalesce(norm_enrollment_rate_median, 0) * $$wt_enrollment_rate ) + ( coalesce(norm_years_of_experience, 0) * $$wt_years_exp ) + ( coalesce( norm_disease_experience_years, 0 ) * $$wt_disease_exp ) + ( coalesce(norm_recentness_of_activity, 0) * $$wt_recent_trial ) + ( coalesce(norm_current_workload, 0) * $$wt_ongoing_trial ) + ( coalesce( normalized_phase_experience_year, 0 ) * $$wt_phase_exp ) + ( coalesce( normalized_total_years_experience, 0 ) * $$wt_prior_exp ) ) AS tier_score, dense_rank() over ( ORDER BY ( ( coalesce(norm_enrollment_rate_median, 0) * $$wt_enrollment_rate ) + ( coalesce(norm_years_of_experience, 0) * $$wt_years_exp ) + ( coalesce( norm_disease_experience_years, 0 ) * $$wt_disease_exp ) + ( coalesce(norm_recentness_of_activity, 0) * $$wt_recent_trial ) + ( coalesce(norm_current_workload, 0) * $$wt_ongoing_trial ) + ( coalesce( normalized_phase_experience_year, 0 ) * $$wt_phase_exp ) + ( coalesce( normalized_total_years_experience, 0 ) * $$wt_prior_exp ) ) DESC ) inv_rank FROM inv_norm ) SELECT inv_rank AS rank, a.ctfo_investigator_id, investigator_full_nm, investigator_specialty, investigator_address, investigator_phone, investigator_email, investigator_city, investigator_state, investigator_country, region, enrollment_rate_median, screen_failure_rate_median, disease_experience_years, recentness_of_activity, years_of_experience, current_workload, sponsor_experience, phase_experience, a.tier_score, coalesce(tier_5.tier, '5') AS global_tier, ntile(4) over ( partition BY investigator_country ORDER BY inv_rank ) local_tier, '$$user_id' AS user_id, 't' :: boolean AS active_flag, now() :: timestamp AS created_timestamp, '$$landscape_id$$' AS landscape_id, affinity_score, kol_score, in_network_patient_count, in_network_physician_access FROM inv_rank a LEFT JOIN ( SELECT ctfo_investigator_id, tier_score, ntile(4) over ( ORDER BY tier_score DESC ) AS tier FROM inv_rank WHERE tier_score IS NOT NULL AND tier_score <> 0 ) tier_5 ON a.ctfo_investigator_id = tier_5.ctfo_investigator_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30 ORDER BY inv_rank )",
        "site_tier_inv_view_query": "SELECT rank, ctfo_investigator_id as investigator_id, investigator_full_nm,investigator_state,investigator_country,enrollment_rate_median,screen_failure_rate_median,sponsor_experience as prior_experience,disease_experience_years,recentness_of_activity as recent_trials,years_of_experience,phase_experience,global_tier,local_tier, current_workload as ongoing_trials FROM $$schema$$.f_rpt_investigator_site_tiering_landscape tier where user_id='$$user_id' and landscape_id = '$$landscape_id$$' and active_flag='t' $$conditionsinv and exists( select distinct ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_setup_all a inner join $$schema_reporting$$.f_rpt_filters_site_inv b on a.ctfo_trial_id = b.ctfo_trial_id where $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions $$patient_conditions $$trialtitle_conditions and tier.ctfo_investigator_id = b.ctfo_investigator_id group by 1) group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 $$order$$ $$limit$$ $$offset$$  ",
        "site_tier_inv_exp_query": "INSERT INTO $$schema$$.f_rpt_investigator_site_tiering_landscape_exp ( with inv_rank AS ( WITH inv_norm AS ( WITH inv_metrics AS ( SELECT a.ctfo_investigator_id , investigator_full_nm , investigator_specialty , investigator_address , investigator_phone , investigator_email , investigator_city , investigator_state , investigator_country , region , disease_experience_years , count_recent_trials AS recentness_of_activity , years_of_experience , current_workload , sponsor_experience , phase_experience , '1' AS affinity_score , '1' AS kol_score , '100' AS in_network_patient_count , '100' AS in_network_physician_access FROM ( SELECT ctfo_investigator_id , investigator_full_nm , investigator_specialty , investigator_address , investigator_phone , investigator_email , investigator_city , investigator_state , investigator_country , region , current_workload FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE EXISTS ( SELECT geo.trial_site_inv_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id WHERE geo.trial_site_inv_id = inv.trial_site_inv_id $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions GROUP BY geo.trial_site_inv_id) GROUP BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 ) a LEFT JOIN $$schema_reporting$$.inv_completed_trials_vw b ON a.ctfo_investigator_id = b.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id , CASE WHEN COALESCE(max(last_subject_in_dt), max(trial_end_dt)) >= COALESCE(min(ready_to_enroll_dt), min(trial_start_dt)) THEN round(((COALESCE(max(last_subject_in_dt), max(trial_end_dt)) - COALESCE(min(ready_to_enroll_dt), min(trial_start_dt))) / 365.0), 3) ELSE CASE WHEN CURRENT_DATE >= COALESCE(min(ready_to_enroll_dt), min(trial_start_dt)) THEN round(((CURRENT_DATE - COALESCE(min(ready_to_enroll_dt), min(trial_start_dt))) / 365.0), 3) ELSE NULL END END AS disease_experience_years FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE EXISTS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE ps.ctfo_trial_id = inv.ctfo_trial_id $$ta_conditions $$disease_conditions GROUP BY ctfo_trial_id ) GROUP BY ctfo_investigator_id ) c ON a.ctfo_investigator_id = c.ctfo_investigator_id LEFT JOIN ( SELECT ctfo_investigator_id , count(DISTINCT CASE WHEN extract(year FROM trial_start_dt) > (extract(year FROM CURRENT_DATE) - 5) THEN ctfo_trial_id END) AS count_recent_trials , CASE WHEN CURRENT_DATE >= min(trial_start_dt) THEN round(((CURRENT_DATE - min(trial_start_dt)) / 365.0), 3) ELSE NULL END AS years_of_experience FROM $$schema_reporting$$.f_rpt_investigator_site_study_details inv WHERE EXISTS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all ps WHERE ps.ctfo_trial_id = inv.ctfo_trial_id $$ta_conditions $$disease_conditions GROUP BY ctfo_trial_id ) GROUP BY ctfo_investigator_id ) d ON a.ctfo_investigator_id = d.ctfo_investigator_id LEFT JOIN ( SELECT geo.ctfo_investigator_id , count(DISTINCT geo.ctfo_trial_id) AS sponsor_experience FROM $$schema_reporting$$.f_rpt_filters_setup_all ps INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo ON ps.ctfo_trial_id = geo.ctfo_trial_id $$inv_conditions GROUP BY geo.ctfo_investigator_id ) e ON a.ctfo_investigator_id = e.ctfo_investigator_id LEFT JOIN ( SELECT geo_2.ctfo_investigator_id , count(DISTINCT geo_2.ctfo_trial_id) AS phase_experience FROM $$schema_reporting$$.f_rpt_filters_setup_all ps_2 INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv geo_2 ON ps_2.ctfo_trial_id = geo_2.ctfo_trial_id $$trial_phase_conditions GROUP BY geo_2.ctfo_investigator_id ) f ON a.ctfo_investigator_id = f.ctfo_investigator_id GROUP BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 )SELECT ctfo_investigator_id , investigator_full_nm , investigator_specialty , investigator_address , investigator_phone , investigator_email , investigator_city , investigator_state , investigator_country , region , disease_experience_years , recentness_of_activity , years_of_experience , current_workload , sponsor_experience , phase_experience , affinity_score , kol_score , in_network_patient_count , in_network_physician_access , CASE WHEN min_years_of_experience IS NULL OR max_years_of_experience IS NULL OR years_of_experience IS NULL THEN NULL WHEN min_years_of_experience = 0 AND max_years_of_experience = 0 AND years_of_experience = 0 THEN 0 WHEN min_years_of_experience = max_years_of_experience AND min_years_of_experience = years_of_experience THEN 1 ELSE Cast((years_of_experience - min_years_of_experience) AS DOUBLE PRECISION) / Cast((max_years_of_experience - min_years_of_experience) AS DOUBLE PRECISION) END AS norm_years_of_experience , CASE WHEN min_disease_experience_years IS NULL OR max_disease_experience_years IS NULL OR disease_experience_years IS NULL THEN NULL WHEN min_disease_experience_years = 0 AND max_disease_experience_years = 0 AND disease_experience_years = 0 THEN 0 WHEN min_disease_experience_years = max_disease_experience_years AND min_disease_experience_years = disease_experience_years THEN 1 ELSE Cast((disease_experience_years - min_disease_experience_years) AS DOUBLE PRECISION) / Cast((max_disease_experience_years - min_disease_experience_years) AS DOUBLE PRECISION) END AS norm_disease_experience_years , CASE WHEN min_current_workload IS NULL OR max_current_workload IS NULL OR current_workload IS NULL THEN NULL WHEN min_current_workload = 0 AND max_current_workload = 0 AND current_workload = 0 THEN 0 WHEN min_current_workload = max_current_workload AND min_current_workload = current_workload THEN 1 ELSE Cast((max_current_workload - current_workload) AS DOUBLE PRECISION) / Cast((max_current_workload - min_current_workload) AS DOUBLE PRECISION) END AS norm_current_workload , CASE WHEN min_recentness_of_activity IS NULL OR max_recentness_of_activity IS NULL OR recentness_of_activity IS NULL THEN NULL WHEN min_recentness_of_activity = 0 AND max_recentness_of_activity = 0 AND recentness_of_activity = 0 THEN 0 WHEN min_recentness_of_activity = max_recentness_of_activity AND min_recentness_of_activity = recentness_of_activity THEN 1 ELSE Cast((max_recentness_of_activity - recentness_of_activity) AS DOUBLE PRECISION) / Cast((max_recentness_of_activity - min_recentness_of_activity) AS DOUBLE PRECISION) END AS norm_recentness_of_activity, CASE WHEN min_phase_experience_year IS NULL OR max_phase_experience_year IS NULL OR phase_experience IS NULL THEN NULL WHEN min_phase_experience_year = 0 AND max_phase_experience_year = 0 AND phase_experience = 0 THEN 0 WHEN min_phase_experience_year = max_phase_experience_year AND min_phase_experience_year = phase_experience THEN 1 ELSE Cast((phase_experience - min_phase_experience_year) AS DOUBLE PRECISION) / Cast((max_phase_experience_year - min_phase_experience_year) AS DOUBLE PRECISION) END AS normalized_phase_experience_year, CASE WHEN min_total_years_experience IS NULL OR max_total_years_experience IS NULL OR sponsor_experience IS NULL THEN NULL WHEN min_total_years_experience = 0 AND max_total_years_experience = 0 AND sponsor_experience = 0 THEN 0 WHEN min_total_years_experience = max_total_years_experience AND min_total_years_experience = sponsor_experience THEN 1 ELSE Cast((sponsor_experience - min_total_years_experience) AS DOUBLE PRECISION) / Cast((max_total_years_experience - min_total_years_experience) AS DOUBLE PRECISION) END AS normalized_total_years_experience FROM ( SELECT ctfo_investigator_id , investigator_full_nm , investigator_specialty , investigator_address , investigator_phone , investigator_email , investigator_city , investigator_state , investigator_country , region , disease_experience_years , recentness_of_activity , years_of_experience , current_workload , sponsor_experience , phase_experience , affinity_score , kol_score , in_network_patient_count , in_network_physician_access FROM inv_metrics ) A CROSS JOIN ( SELECT Min(years_of_experience) AS min_years_of_experience , Max(years_of_experience) AS max_years_of_experience , Min(disease_experience_years) AS min_disease_experience_years , Max(disease_experience_years) AS max_disease_experience_years , Min(recentness_of_activity) AS min_recentness_of_activity , Max(recentness_of_activity) AS max_recentness_of_activity , Min(current_workload) AS min_current_workload , Max(current_workload) AS max_current_workload, Min(phase_experience) AS min_phase_experience_year, Max(phase_experience) AS max_phase_experience_year, Min(sponsor_experience) AS min_total_years_experience, Max(sponsor_experience) AS max_total_years_experience FROM inv_metrics ) B )SELECT ctfo_investigator_id , investigator_full_nm , investigator_specialty , investigator_address , investigator_phone , investigator_email , investigator_city , investigator_state , investigator_country , region , disease_experience_years , recentness_of_activity , years_of_experience , current_workload , sponsor_experience , phase_experience , affinity_score , kol_score , in_network_patient_count , in_network_physician_access , ((COALESCE(normalized_total_years_experience, 0) * $$wt_prior_exp) + (COALESCE(norm_disease_experience_years, 0) * $$wt_disease_exp) + (COALESCE(norm_recentness_of_activity, 0) * $$wt_recent_trial) + (COALESCE(norm_current_workload, 0) * $$wt_ongoing_trial) + (COALESCE(normalized_phase_experience_year, 0) * $$wt_phase_exp) + (COALESCE(norm_years_of_experience, 0) * $$wt_years_exp)) AS tier_score , Dense_rank() OVER ( ORDER BY ((COALESCE(normalized_total_years_experience, 0) * $$wt_prior_exp) + (COALESCE(norm_disease_experience_years, 0) * $$wt_disease_exp) + (COALESCE(norm_recentness_of_activity, 0) * $$wt_recent_trial) + (COALESCE(norm_current_workload, 0) * $$wt_ongoing_trial) + (COALESCE(normalized_phase_experience_year, 0) * $$wt_phase_exp) + (COALESCE(norm_years_of_experience, 0) * $$wt_years_exp)) DESC ) inv_rank FROM inv_norm )SELECT inv_rank AS rank , a.ctfo_investigator_id , investigator_full_nm , investigator_specialty , investigator_address , investigator_phone , investigator_email , investigator_city , investigator_state , investigator_country , region , disease_experience_years , recentness_of_activity , years_of_experience , current_workload , sponsor_experience , phase_experience , a.tier_score , COALESCE(tier_5.tier, '5') AS global_tier , Ntile(4) OVER ( partition BY investigator_country ORDER BY inv_rank ) local_tier , '$$user_id' AS user_id , 't'::boolean AS active_flag , now()::timestamp AS created_timestamp , '$$landscape_id$$' AS landscape_id, affinity_score , kol_score , in_network_patient_count , in_network_physician_access FROM inv_rank a LEFT JOIN ( SELECT ctfo_investigator_id , tier_score , ntile(4) OVER ( ORDER BY tier_score DESC ) AS tier FROM inv_rank WHERE tier_score IS NOT NULL AND tier_score <> 0 ) tier_5 ON a.ctfo_investigator_id = tier_5.ctfo_investigator_id GROUP BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 ORDER BY inv_rank )",
        "site_tier_inv_exp_view_query": "WITH temp_investigator_id AS( SELECT ctfo_investigator_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv b ON a.ctfo_trial_id = b.ctfo_trial_id where $$ta_conditions $$disease_conditions $$country_conditions $$region_conditions $$patient_conditions $$trialtitle_conditions) SELECT rank, ctfo_investigator_id AS investigator_id, investigator_full_nm, investigator_state, investigator_country, sponsor_experience AS prior_experience, disease_experience_years, recentness_of_activity AS recent_trials, years_of_experience, phase_experience, global_tier, local_tier, current_workload AS ongoing_trials FROM $$schema$$.f_rpt_investigator_site_tiering_landscape_exp tier WHERE user_id = '$$user_id' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' AND EXISTS( SELECT DISTINCT ctfo_investigator_id FROM temp_investigator_id WHERE tier.ctfo_investigator_id = temp_investigator_id.ctfo_investigator_id $$conditionsinv GROUP BY 1 ) $$order$$ $$limit$$ $$offset$$ ",
        "delete_sitetiering": "delete from $$schema$$.f_rpt_site_tiering_landscape where user_id = '$$user_id' and landscape_id = '$$landscape_id$$'",
        "delete_sitetiering_exp": "delete from $$schema$$.f_rpt_site_tiering_landscape_exp where user_id = '$$user_id' and landscape_id = '$$landscape_id$$'",
        "delete_sitetiering_inv": "delete from $$schema$$.f_rpt_investigator_site_tiering_landscape where user_id = '$$user_id' and landscape_id = '$$landscape_id$$'",
        "delete_sitetiering_inv_exp": "delete from $$schema$$.f_rpt_investigator_site_tiering_landscape_exp where user_id = '$$user_id' and landscape_id = '$$landscape_id$$' ",
        "sitemap_query": "WITH temp_site_id AS ( SELECT ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE $$patient_segment$$ $$trial_title$$ ) SELECT site_country, COUNT(DISTINCT tier.ctfo_site_id) AS number_of_sites, COUNT( DISTINCT CASE WHEN global_tier = 1 THEN tier.ctfo_site_id END ) AS tier1_count, COUNT( DISTINCT CASE WHEN global_tier = 2 THEN tier.ctfo_site_id END ) AS tier2_count, COUNT( DISTINCT CASE WHEN global_tier = 3 THEN tier.ctfo_site_id END ) AS tier3_count, COUNT( DISTINCT CASE WHEN global_tier = 4 THEN tier.ctfo_site_id END ) AS tier4_count, COUNT( DISTINCT CASE WHEN global_tier = 5 THEN tier.ctfo_site_id END ) AS tier5_count FROM $$schema$$.f_rpt_site_tiering_landscape tier WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' AND $$site_tier$$ $$site_type$$ $$site_nm$$ AND EXISTS ( SELECT ctfo_site_id FROM temp_site_id WHERE tier.ctfo_site_id = temp_site_id.ctfo_site_id GROUP BY 1 ) GROUP BY site_country",
        "invmap_query": "WITH temp_inv_fsetup AS( SELECT geo.ctfo_investigator_id ,si.country AS investigator_country FROM $$schema_reporting$$.f_rpt_investigator_site_study_details geo inner JOIN ( SELECT * FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE $$country$$ $$region$$) si ON geo.trial_site_inv_id = si.trial_site_inv_id WHERE EXISTS ( SELECT b.trial_site_inv_id FROM $$schema_reporting$$.f_Rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE b.trial_site_inv_id = geo.trial_site_inv_id AND $$TA$$ $$DA$$ $$patient_segment$$ $$trial_title$$ GROUP BY 1 ) GROUP BY 1 ,2 ) SELECT abc.investigator_country AS investigator_country ,count(DISTINCT tosr.ctfo_investigator_id) AS number_of_investigators ,count(DISTINCT CASE WHEN global_tier = 1 THEN tosr.ctfo_investigator_id END) AS tier1_count ,count(DISTINCT CASE WHEN global_tier = 2 THEN tosr.ctfo_investigator_id END) AS tier2_count ,count(DISTINCT CASE WHEN global_tier = 3 THEN tosr.ctfo_investigator_id END) AS tier3_count ,count(DISTINCT CASE WHEN global_tier = 4 THEN tosr.ctfo_investigator_id END) AS tier4_count ,count(DISTINCT CASE WHEN global_tier = 5 THEN tosr.ctfo_investigator_id END) AS tier5_count FROM $$schema$$.f_rpt_investigator_site_tiering_landscape tosr INNER JOIN temp_inv_fsetup abc ON tosr.ctfo_investigator_id = abc.ctfo_investigator_id WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' $$inv_nm$$ $$inv_tier$$ GROUP BY abc.investigator_country",
        "sitemetric_trial_query": "SELECT site_nm ,total_trials ,matching_trials_count_by_year ,trial_year FROM $$schema$$.f_rpt_site_landscape_site_detail_temp where user_id = '$$user_id$$' and landscape_id = '$$landscape_id$$' GROUP BY 1 ,2 ,3 ,4 ORDER BY 1",
        "sitemetric_trial_query_insert": "WITH temp_site_filter AS( SELECT ctfo_trial_id, ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE EXISTS( SELECT ctfo_site_id FROM $$schema$$.f_rpt_site_tiering_landscape tier WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = true AND f_rpt_filters_site_inv.ctfo_site_id = tier.ctfo_site_id $$country$$ $$region$$ $$site_type$$ $$site_tier$$ $$site_nm$$)), temp_site_filter_2 AS( select * from temp_site_filter f where EXISTS ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all tier WHERE true $$TA$$ $$DA$$ $$patient_segment$$ $$trial_title$$ AND f.ctfo_trial_id = tier.ctfo_trial_id ) ), site_info AS ( SELECT ctfo_site_id, count(DISTINCT ctfo_trial_id) AS total_trials FROM $$schema_reporting$$.f_rpt_site_study_details GROUP BY ctfo_site_id ), site_nm_info AS ( SELECT ctfo_site_id, site_nm FROM $$schema_reporting$$.f_rpt_site_study_details sd WHERE EXISTS ( SELECT ctfo_site_id FROM temp_site_filter_2 a WHERE sd.ctfo_site_id = a.ctfo_site_id ) GROUP BY 1, 2 ), site_details AS ( SELECT ctfo_site_id, trial_year, count(DISTINCT ctfo_trial_id) AS matching_trials_count_by_year FROM ( SELECT ctfo_site_id, ctfo_trial_id, cast( extract( year FROM trial_start_dt ) AS BIGINT ) AS trial_year FROM $$schema_reporting$$.f_rpt_site_study_details sd WHERE EXISTS ( SELECT ctfo_trial_id FROM temp_site_filter_2 a WHERE sd.ctfo_trial_id = a.ctfo_trial_id AND sd.ctfo_site_id = a.ctfo_site_id ) AND extract( year FROM trial_start_dt ) > extract( year FROM CURRENT_DATE ) -5 ) a GROUP BY 1, 2 ), site_details_final AS ( SELECT sni.ctfo_site_id, sni.site_nm, si.total_trials, sd.matching_trials_count_by_year, sd.trial_year FROM site_nm_info sni LEFT JOIN site_info si ON sni.ctfo_site_id = si.ctfo_site_id LEFT JOIN site_details sd ON sni.ctfo_site_id = sd.ctfo_site_id ORDER BY sni.site_nm ) INSERT INTO $$schema$$.f_rpt_site_landscape_site_detail_temp ( site_nm, total_trials, matching_trials_count_by_year, trial_year, landscape_id, user_id, active_flag, created_timestamp, updated_timestamp ) ( SELECT site_nm, total_trials, matching_trials_count_by_year, trial_year, '$$landscape_id$$' as landscape_id, '$$user_id$$' as user_id, '$$active_flag$$' as active_flag, '$$current_timestamp$$' as current_timestamp, '$$updated_timestamp$$' as updated_timestmp FROM site_details_final GROUP BY 1, 2, 3, 4 ORDER BY 1 ) ",
        "sitemetric_inv_query": "SELECT site_nm,  total_investigators FROM $$schema$$.f_rpt_site_landscape_site_inv_detail_temp where user_id = '$$user_id$$' and landscape_id = '$$landscape_id$$'",
        "sitemetric_inv_query_insert": "WITH temp_inv_filter AS( SELECT ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE exists ( SELECT ctfo_site_id FROM $$schema$$.f_rpt_site_tiering_landscape tier WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = true and f_rpt_filters_site_inv.ctfo_site_id = tier.ctfo_site_id $$site_tier$$ $$site_type$$ $$site_nm$$) AND exists ( select ctfo_trial_id from $$schema_reporting$$.f_rpt_filters_setup_all tier where f_rpt_filters_site_inv.ctfo_trial_id = tier.ctfo_trial_id $$patient_segment$$ $$trial_title$$ ) ) INSERT INTO $$schema$$.f_rpt_site_landscape_site_inv_detail_temp ( site_nm, total_investigators, landscape_id, user_id, active_flag, created_timestamp, updated_timestamp ) ( SELECT site_nm, Count(DISTINCT ctfo_investigator_id) AS total_investigators, '$$landscape_id$$' as landscape_id, '$$user_id$$' as user_id, '$$active_flag$$' as active_flag, '$$current_timestamp$$' as current_timestamp, '$$updated_timestamp$$' as updated_timestmp FROM $$schema_reporting$$.f_rpt_investigator_site_study_details sd WHERE sd.ctfo_site_id = ANY ( SELECT * FROM temp_inv_filter ) GROUP BY site_nm ORDER BY count(DISTINCT ctfo_investigator_id) DESC ) ",
        "invmetric_query": "SELECT ctfo_investigator_id, investigator_full_nm, total_trials ,matching_trials_count_by_year ,trial_year FROM $$schema$$.f_rpt_site_landscape_investigator_detail_temp where user_id = '$$user_id$$' and landscape_id = '$$landscape_id$$'",
        "invmetric_query_insert": "WITH filter_set AS( SELECT ctfo_investigator_id FROM $$schema$$.f_rpt_investigator_site_tiering_landscape geo WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'Y' $$inv_tier$$ $$inv_nm$$ and exists ( select ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv inv inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on ps.ctfo_trial_id = inv.ctfo_trial_id WHERE inv.ctfo_investigator_id = geo.ctfo_investigator_id $$TA$$ $$DA$$ $$country$$ $$region$$ $$patient_segment$$ $$trial_title$$) GROUP BY 1) ,inv_info AS ( SELECT ctfo_investigator_id ,investigator_full_nm ,COUNT(DISTINCT ctfo_trial_id) AS total_trials FROM $$schema_reporting$$.f_rpt_investigator_site_study_details finv WHERE ctfo_investigator_id IN ( SELECT ctfo_investigator_id FROM filter_set ) GROUP BY investigator_full_nm ,ctfo_investigator_id ) ,inv_details AS ( SELECT ctfo_investigator_id ,trial_year ,COUNT(DISTINCT ctfo_trial_id) AS matching_trials_count_by_year FROM ( SELECT ctfo_investigator_id ,ctfo_trial_id ,EXTRACT(YEAR FROM trial_start_dt) AS trial_year FROM $$schema_reporting$$.f_rpt_investigator_site_study_details sd WHERE ctfo_investigator_id IN ( SELECT ctfo_investigator_id FROM filter_set ) AND EXISTS ( SELECT setup.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all setup INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv si ON setup.ctfo_trial_id = si.ctfo_trial_id WHERE EXTRACT(YEAR FROM trial_start_dt) > EXTRACT(YEAR FROM CURRENT_DATE) - 5 AND sd.ctfo_investigator_id = si.ctfo_investigator_id AND sd.ctfo_trial_id = si.ctfo_trial_id ) ) a GROUP BY ctfo_investigator_id ,trial_year )INSERT INTO  $$schema$$.f_rpt_site_landscape_investigator_detail_temp (ctfo_investigator_id, investigator_full_nm, total_trials ,matching_trials_count_by_year ,trial_year, landscape_id, user_id, active_flag, created_timestamp, updated_timestamp) (SELECT sni.ctfo_investigator_id ,si.investigator_full_nm ,si.total_trials ,sd.matching_trials_count_by_year ,sd.trial_year,  '$$landscape_id$$' as landscape_id, '$$user_id$$' as user_id, '$$active_flag$$' as active_flag, '$$current_timestamp$$' as current_timestamp, '$$updated_timestamp$$' as updated_timestmp FROM filter_set sni left JOIN inv_info si ON sni.ctfo_investigator_id = si.ctfo_investigator_id left JOIN inv_details sd ON sd.ctfo_investigator_id = sni.ctfo_investigator_id GROUP BY 1 ,2 ,3 ,4 ,5 ORDER BY si.investigator_full_nm)",
        "delete_site_details_query": "DELETE FROM $$schema$$.f_rpt_site_landscape_site_detail_temp where user_id='$$user_id$$' and landscape_id='$$landscape_id$$'",
        "delete_site_inv_details_query": "DELETE FROM $$schema$$.f_rpt_site_landscape_site_inv_detail_temp where user_id='$$user_id$$' and landscape_id='$$landscape_id$$'",
        "delete_inv_details_query": "DELETE FROM $$schema$$.f_rpt_site_landscape_investigator_detail_temp where user_id='$$user_id$$' and landscape_id='$$landscape_id$$'",
        "site_detail_query": "SELECT geo.ctfo_site_id AS site_id ,site_nm ,global_tier AS site_global_tier ,local_tier AS site_local_tier ,site_country ,site_state ,site_city FROM $$schema$$.f_rpt_site_tiering_landscape geo WHERE user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' $$site_tier$$ $$site_type$$ $$site_nm$$ and exists( select ctfo_site_id from $$schema_reporting$$.f_rpt_filters_site_inv inv inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on ps.ctfo_trial_id = inv.ctfo_trial_id WHERE inv.ctfo_site_id = geo.ctfo_site_id $$country$$ $$region$$ $$TA$$ $$DA$$ $$patient_segment$$ $$trial_title$$) ORDER BY $$order_by$$ $$order_dir$$ limit $$LIMIT$$ offset $$OFFSET$$",
        "inv_detail_query": "SELECT DISTINCT geo.ctfo_investigator_id AS investigator_id , rank, investigator_full_nm ,global_tier AS inv_global_tier ,local_tier AS inv_local_tier ,investigator_country ,investigator_state ,investigator_city ,investigator_phone ,investigator_email ,NULL AS pi_affinity_score ,NULL AS kol_influencer_score FROM $$schema$$.f_rpt_investigator_site_tiering_landscape geo where user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' $$inv_tier$$ $$inv_nm$$ and exists( select ctfo_investigator_id from $$schema_reporting$$.f_rpt_filters_site_inv inv inner join $$schema_reporting$$.f_rpt_filters_setup_all ps on ps.ctfo_trial_id = inv.ctfo_trial_id WHERE inv.ctfo_investigator_id = geo.ctfo_investigator_id $$TA$$ $$DA$$ $$country$$ $$region$$ $$patient_segment$$ $$trial_title$$) ORDER BY $$order_by$$ $$order_dir$$ limit $$LIMIT$$ offset $$OFFSET$$",
        "site_flyout": {
          "site_trial_trend": "SELECT '$$site_nm$$' AS site_nm, count(DISTINCT ctfo_trial_id) AS total_trials ,date_part('year', trial_start_dt)::INT AS trial_year FROM $$schema_reporting$$.f_rpt_site_study_details WHERE ctfo_site_id = '$$ctfo_site_id$$' AND EXTRACT(YEAR FROM trial_start_dt) > 1999 GROUP BY trial_year, site_nm",
          "site_profile": "WITH site_info AS( SELECT ctfo_site_id ,site_nm ,site_supporting_urls ,site_country ,site_city ,site_address ,MAX(trial_start_dt) AS last_trial_start_date ,MIN(trial_start_dt) AS first_trial_start_date FROM $$schema_reporting$$.f_rpt_site_study_details WHERE ctfo_site_id = '$$ctfo_site_id$$' GROUP BY 1 ,2 ,3 ,4 ,5 ,6) ,total_count AS ( SELECT ctfo_site_id ,COUNT(DISTINCT ctfo_investigator_id) AS total_investigators ,COUNT(DISTINCT ctfo_trial_id) AS total_trials FROM $$schema_reporting$$.f_rpt_filters_site_inv WHERE ctfo_site_id = '$$ctfo_site_id$$' GROUP BY ctfo_site_id ) ,matching_count AS ( SELECT ctfo_site_id ,COUNT(DISTINCT ctfo_trial_id) AS matching_trials FROM ( SELECT ctfo_site_id ,ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details sd WHERE EXISTS ( SELECT setup.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all setup INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv si ON setup.ctfo_trial_id = si.ctfo_trial_id WHERE $$TA$$ $$DA$$ AND ctfo_site_id = '$$ctfo_site_id$$' AND sd.ctfo_trial_id = si.ctfo_trial_id AND sd.ctfo_site_id = si.ctfo_site_id ) ) a GROUP BY 1 ) ,ta AS ( SELECT therapeutic_area ,ctfo_site_id FROM $$schema_reporting$$.f_rpt_site_study_details b join $$schema_reporting$$.f_rpt_filters_setup_all a on a.ctfo_trial_id=b.ctfo_trial_id WHERE ctfo_site_id = '$$ctfo_site_id$$' GROUP BY 1 ,2 ) ,mi AS ( SELECT count(DISTINCT ctfo_investigator_id) AS matching_investigators ,ctfo_site_id FROM $$schema_reporting$$.f_rpt_investigator_site_study_details sd WHERE ctfo_site_id = '$$ctfo_site_id$$' AND EXISTS ( SELECT setup.ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all setup INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv si ON setup.ctfo_trial_id = si.ctfo_trial_id WHERE $$TA$$ $$DA$$ AND ctfo_site_id = '$$ctfo_site_id$$' AND sd.trial_site_inv_id  = si.trial_site_inv_id  ) GROUP BY 2 ) SELECT '$$site_nm$$' AS site_nm ,site_supporting_urls ,site_country ,site_city ,site_address ,last_trial_start_date ,first_trial_start_date ,matching_trials ,matching_investigators ,total_investigators ,total_trials ,string_agg(DISTINCT therapeutic_area, '|') AS therapeutic_area FROM site_info a LEFT OUTER JOIN total_count b ON a.ctfo_site_id = b.ctfo_site_id LEFT OUTER JOIN matching_count c ON c.ctfo_site_id = a.ctfo_site_id LEFT OUTER JOIN ta d ON c.ctfo_site_id = d.ctfo_site_id LEFT OUTER JOIN mi x ON c.ctfo_site_id = x.ctfo_site_id GROUP BY 1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11",
          "site_sponsor_exp": "SELECT coalesce(sponsor, 'Other') AS sponsor ,max(trial_start_dt) AS sponsor_last_trial_start_date ,count(DISTINCT ctfo_trial_id) AS sponsor_total_trials FROM( SELECT unnest(string_to_array(sponsor, '|')) AS sponsor ,trial_start_dt ,ctfo_trial_id FROM $$schema_reporting$$.f_rpt_site_study_details WHERE (ctfo_site_id) IN ( SELECT ctfo_site_id FROM $$schema_reporting$$.f_rpt_filters_site_inv si INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all sa ON si.ctfo_trial_id = sa.ctfo_trial_id WHERE $$TA$$ $$DA$$ AND ctfo_site_id = '$$ctfo_site_id$$') ) aa GROUP BY 1 ORDER BY $$ORDER_BY$$ $$ORDER_DIR$$ LIMIT $$LIMIT$$ OFFSET $$OFFSET$$",
          "site_trials": "SELECT coalesce(nct_id, ctfo_trial_id) AS ctfo_trial_id ,study_name AS tittle ,trial_status ,cast(date_part('year', trial_start_dt) AS BIGINT) AS trial_start_year ,cast(date_part('year', trial_end_dt::date) AS BIGINT) AS trial_end_year ,total_recruitment_months AS enrollment_duration ,randomization_rate AS enrollment_rate FROM $$schema_reporting$$.f_rpt_site_study_details AS tier WHERE ctfo_site_id = '$$ctfo_site_id$$' AND ctfo_trial_id IN( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all WHERE $$TA$$ $$DA$$ $$trial_title$$) ORDER BY $$ORDER_BY$$ $$ORDER_DIR$$ LIMIT $$LIMIT$$ offset $$OFFSET$$",
          "site_affilated_investigators": "WITH tt AS( SELECT Rank ,investigator_name ,investigator_tier ,investigator_tier_score ,investigator_address ,investigator_city ,investigator_country ,investigator_contact ,country_tier ,screen_failure_rate ,ctfo_investigator_id ,median(lot.lost_opportunity_time) AS lost_opportunity_time ,years_of_activity ,enrollment_rate ,current_workload ,recentness_of_activity FROM ( SELECT row_number() OVER ( ORDER BY rank) Rank ,investigator_full_nm AS investigator_name ,global_tier AS investigator_tier ,tier_score AS investigator_tier_score ,investigator_address ,investigator_city ,investigator_country ,ctfo_investigator_id ,split_part(investigator_phone, '|', '1') AS investigator_contact ,local_tier AS country_tier ,screen_failure_rate_median AS screen_failure_rate ,disease_experience_years AS years_of_activity ,enrollment_rate_median AS enrollment_rate ,current_workload ,recentness_of_activity FROM $$schema$$.f_rpt_investigator_site_tiering_landscape AS tier WHERE ctfo_investigator_id IN ( SELECT ctfo_investigator_id FROM $$schema_reporting$$.f_rpt_filters_site_inv geo INNER JOIN $$schema_reporting$$.f_rpt_filters_setup_all ps ON geo.ctfo_trial_id = ps.ctfo_trial_id WHERE geo.ctfo_site_id = '$$ctfo_site_id$$' GROUP BY 1 ) AND user_id = '$$user_id$$' AND landscape_id = '$$landscape_id$$' AND active_flag = 'true' ) AS abc INNER JOIN $$schema_reporting$$.f_rpt_site_study_details lot ON abc.investigator_country = lot.site_country GROUP BY 1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10 ,11 ,13 ,14 ,15 ,16 ORDER BY investigator_tier limit 10 offset 0 ) ,mtt AS ( SELECT ctfo_investigator_id ,count(DISTINCT (a.ctfo_trial_id)) AS similar_trials_experience FROM $$schema_reporting$$.f_rpt_filters_setup_all a INNER JOIN $$schema_reporting$$.f_rpt_filters_site_inv b ON a.ctfo_trial_id = b.ctfo_trial_id WHERE ctfo_site_id = '$$ctfo_site_id$$' AND ctfo_investigator_id IS NOT NULL GROUP BY 1 ) SELECT tt.Rank ,tt.investigator_name ,tt.investigator_tier ,tt.investigator_tier_score ,tt.investigator_address ,tt.investigator_city ,tt.investigator_country ,tt.investigator_contact ,tt.country_tier ,tt.screen_failure_rate ,tt.lost_opportunity_time ,tt.years_of_activity ,tt.enrollment_rate ,tt.current_workload ,tt.recentness_of_activity ,mtt.similar_trials_experience ,mtt.ctfo_investigator_id FROM tt LEFT JOIN mtt ON tt.ctfo_investigator_id = mtt.ctfo_investigator_id ORDER BY $$ORDER_BY$$ limit $$LIMIT$$ offset $$OFFSET$$"
        }
      },
      "qualtrics": {
        "insert_survey_dtl_query": "insert into $$schema$$.f_rpt_user_scenario_survey_dtl( theme_id, scenario_id, scenario_version, survey_id, survey_version, survey_requester, survey_type, survey_dtl_version, survey_status, survey_creation_requested_date, created_by, created_time, last_updated_by, last_updated_time, is_active, mailing_list_id, confidential_flag, is_ecda, qualtrics_user ) select theme_id, scenario_id, NULL as scenario_version, '$$survey_id$$' as survey_id, '$$survey_version$$' as survey_version, '$$survey_requester$$' as survey_requester, '$$survey_type$$' as survey_type, $$survey_dtl_version$$ as survey_dtl_version, '$$survey_status$$' as survey_status, '$$survey_creation_requested_date$$' as survey_creation_requested_date, '$$created_by$$' as created_by, '$$created_time$$' as created_time, '$$last_updated_by$$' as last_updated_by, '$$last_updated_time$$' as last_updated_time, '$$is_active$$' as is_active, '$$mailing_list_id$$' as mailing_list_id, '$$confidential_flag$$' as confidential_flag, $$is_ecda$$ as is_ecda, '$$qualtrics_user$$' as qualtrics_user from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = '$$scenario_id$$'",
        "country_survey_dtl_query": "select country_head_first_name as first_name, country_head_last_name as last_name, SPLIT_PART(country_head_phone, '|', 1) as phone, SPLIT_PART(country_head_email, '|', 1) as email, country_name, country_head_email_secondary as secondary_email from $$schema$$.f_rpt_user_scenario_survey_country_dtl where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and survey_id = '$$survey_id$$' and country_name = '$$country_name$$' and is_active = 'True'",
        "mailing_list_id": "select distinct mailing_list_id from $$schema$$.f_rpt_user_scenario_survey_dtl where survey_id = '$$survey_id$$' and scenario_id='$$scenario_id$$'",
        "check_survey_id": "select distinct survey_id from $$schema$$.f_rpt_user_scenario_survey_dtl where scenario_id = '$$scenario_id$$'",
        "update_country_site_dtl_query": "update $$schema$$.$$table$$ set survey_id = '$$survey_id$$', $$version_column$$=$$survey_version$$, last_updated_by='$$user_id$$', last_updated_time='$$last_updated_time$$' where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and is_active='True'",
        "update_country_contact_id_query": "update $$schema$$.$$table$$ SET qualtrics_contact_id = %(contactId)s, survey_country_version='$$survey_country_version$$', last_updated_by='$$user_id$$', last_updated_time='$$last_updated_time$$' WHERE country_head_email = %(email)s and country_head_first_name = %(first_name)s and country_head_last_name = %(last_name)s and country_name = '$$country$$' and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and survey_id = '$$survey_id$$' and is_active = 'True'",
        "update_distribution_link_query": "UPDATE $$schema$$.$$table$$ SET recipient_personalized_link = %(link)s, survey_country_version='$$survey_country_version$$', last_updated_by='$$user_id$$', last_updated_time='$$last_updated_time$$' WHERE trim(country_head_first_name) = %(firstName)s and trim(country_head_last_name) = %(lastName)s and qualtrics_contact_id = %(contactId)s and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and survey_id = '$$survey_id$$' and recipient_personalized_link is null and is_active = 'True'",
        "get_email_details": "select smry.scenario_id as scenario_id, smry.study_code, smry.description as study_name, smry.therapeutic_area as ta_name, country_name, recipient_personalized_link, salutation, country_head_first_name as country_head_name, country_head_email, country_head_email_secondary as secondary_email, smry.manual_mail_subject from $$schema$$.$$table$$ as cnt inner join $$schema$$.f_rpt_scenario_stdy_sumry smry on smry.scenario_id = cnt.scenario_id and smry.theme_id = cnt.theme_id where cnt.scenario_id = '$$scenario_id$$' and cnt.survey_id = '$$survey_id$$' and cnt.theme_id = '$$theme_id$$' and cnt.country_name = '$$country_name$$' and cnt.is_active = 'True' and active_flag = 'Y' and study_code = '$$study_code$$'",
        "insert_country_survey_email_dtl": "insert into $$schema$$.log_scenario_survey_email_dtl select '$$scenario_id$$','$$survey_id$$','$$email_type$$','$$sender$$','$$country_head_email$$','','','','$$subject$$','$$body$$',NULL,'$$created_by$$','$$created_time$$','$$last_updated_by$$','$$last_updated_time$$','$$country_name$$','$$theme_id$$','','',NULL,'$$survey_version$$' from (select '$$scenario_id$$','$$survey_id$$','$$email_type$$','$$sender$$','$$country_head_email$$','','','','$$subject$$','$$body$$',NULL,'$$created_by$$','$$created_time$$','$$last_updated_by$$','$$last_updated_time$$','$$country_name$$','$$theme_id$$','','',NULL,'$$survey_version$$') as chk where not exists (select * from $$schema$$.log_scenario_survey_email_dtl where scenario_id = '$$scenario_id$$' and survey_id = '$$survey_id$$' and recipient_list='$$country_head_email$$' and theme_id='$$theme_id$$' and country_name='$$country_name$$')",
        "update_country_survey_dtl": "update $$schema$$.f_rpt_user_scenario_survey_country_dtl set survey_sent_date='$$survey_sent_date$$', survey_country_version='$$survey_country_version$$', last_updated_by='$$user_id$$', last_updated_time='$$last_updated_time$$' where scenario_id='$$scenario_id$$' and survey_id='$$survey_id$$' and theme_id='$$theme_id$$' and country_name='$$country_name$$' and is_active = True",
        "get_site_investigator_list_query": "SELECT site_country AS country_name ,ctfo_site_id ,site_nm, investigator_id ,investigator_first_name AS first_name ,investigator_last_name AS last_name ,SPLIT_PART(investigator_email, '|', 1) AS email ,SPLIT_PART(investigator_phone, '|', 1) AS phone ,CONCAT( ctfo_site_id ,investigator_id) AS extref ,ctfo_inv_email_secondary AS secondary_email ,is_ecda ,is_manual FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND survey_id = '$$survey_id$$' AND theme_id = '$$theme_id$$' AND investigator_id = '$$ctfo_inv_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND is_active = 'True' LIMIT 1 ",
        "update_site_inv_contact_id_query": "update $$schema$$.$$table$$ SET qualtrics_contact_id = %(contactId)s, survey_site_investigator_version='$$survey_site_investigator_version$$', last_updated_by='$$user_id$$', last_updated_time='$$last_updated_time$$' WHERE scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and survey_id = '$$survey_id$$' and is_active = 'True' and ctfo_site_id = %(ctfo_site_id)s and investigator_id = %(investigator_id)s",
        "update_inv_distribution_link_query": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET recipient_personalized_link = %(link)s, survey_site_investigator_version='$$survey_site_investigator_version$$', last_updated_by='$$user_id$$', last_updated_time='$$last_updated_time$$' WHERE trim(investigator_first_name) = %(firstName)s and trim(investigator_last_name) = %(lastName)s and scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and survey_id = '$$survey_id$$' and qualtrics_contact_id = %(contactId)s and recipient_personalized_link is null and is_active = 'True'",
        "get_inv_email_details": "SELECT smry.scenario_id, smry.study_code, regexp_replace( smry.description, Chr(39), '' ) as study_name, smry.therapeutic_area as ta_name, site.site_country AS country_name, site.ctfo_site_id, site.investigator_id, site.recipient_personalized_link, site.investigator_last_name AS investigator_name, site.investigator_email, COALESCE(site.site_alias_primary, site.site_nm) as site_nm, con.country_head_email AS cc_email_id, con.country_head_email_secondary AS country_secondary_email, site.ctfo_inv_email_secondary as secondary_email, con.country_head_name AS country_head_name, site.salutation, smry.manual_mail_subject FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl site INNER JOIN $$schema$$.f_rpt_user_scenario_survey_country_dtl con ON lower(site.site_country) = lower(con.country_name) AND site.scenario_id = con.scenario_id INNER JOIN $$schema$$.f_rpt_scenario_stdy_sumry smry on site.scenario_id = smry.scenario_id where smry.study_code = '$$study_code$$' and smry.active_flag = 'Y' and site.scenario_id = '$$scenario_id$$' AND site.survey_id = '$$survey_id$$' AND site.theme_id = '$$theme_id$$' AND site.investigator_id = '$$ctfo_inv_id$$' AND site.ctfo_site_id = '$$ctfo_site_id$$' AND site.is_active = 'True' and con.is_active = 'True' limit 1",
        "get_inv_email_details_country_table": "SELECT distinct smry.scenario_id as scenario_id, smry.study_code, regexp_replace( smry.description, Chr(39), '' ) as study_name, smry.therapeutic_area as ta_name, site.site_country AS country_name, site.ctfo_site_id, site.investigator_id, site.recipient_personalized_link, site.investigator_last_name AS investigator_name, site.investigator_email, COALESCE(site.site_alias_primary, site.site_nm) as site_nm, site.ctfo_inv_email_secondary as secondary_email, con.country_head_email AS cc_email_id, con.country_head_name AS country_head_name, smry.manual_mail_subject, site.salutation FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl site INNER JOIN $$schema_reporting$$.f_rpt_study_country_details con ON lower(site.site_country) = lower(con.standard_country) INNER JOIN $$schema$$.f_rpt_scenario_stdy_sumry smry on site.scenario_id = smry.scenario_id where smry.study_code = '$$study_code$$' and smry.active_flag = 'Y' and site.scenario_id = '$$scenario_id$$' AND site.survey_id = '$$survey_id$$' AND site.theme_id = '$$theme_id$$' AND site.investigator_id = '$$ctfo_inv_id$$' AND site.ctfo_site_id = '$$ctfo_site_id$$' AND site.is_active = 'True' AND con.study_code = '$$study_code$$'",
        "insert_site_survey_email_dtl": "insert into $$schema$$.log_scenario_survey_email_dtl select '$$scenario_id$$','$$survey_id$$','$$email_type$$','$$sender$$','$$investigator_email$$','','','','$$subject$$','$$body$$',NULL,'$$created_by$$','$$created_time$$','$$last_updated_by$$','$$last_updated_time$$','$$country_name$$','$$theme_id$$','$$ctfo_site_id$$','$$investigator_id$$',NULL,'$$survey_version$$' from (select '$$scenario_id$$','$$survey_id$$','$$email_type$$','$$sender$$','$$investigator_email$$','','','','$$subject$$','$$body$$',NULL,'$$created_by$$','$$created_time$$','$$last_updated_by$$','$$last_updated_time$$','$$country_name$$','$$theme_id$$','$$ctfo_site_id$$','$$investigator_id$$',NULL,'$$survey_version$$') as chk where not exists (select * from $$schema$$.log_scenario_survey_email_dtl where scenario_id = '$$scenario_id$$' and survey_id = '$$survey_id$$' and recipient_list='$$investigator_email$$' and theme_id='$$theme_id$$' and investigator_id='$$investigator_id$$')",
        "update_site_survey_dtl": "update $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl set survey_sent_date = '$$survey_sent_date$$', survey_site_investigator_version = '$$survey_site_investigator_version$$', last_updated_by = '$$user_id$$', last_updated_time = '$$last_updated_time$$' where scenario_id = '$$scenario_id$$' and survey_id = '$$survey_id$$' and theme_id = '$$theme_id$$' and investigator_id = '$$investigator_id$$' and ctfo_site_id = '$$ctfo_site_id$$' and is_active = True",
        "search_result_country_query": "SELECT sscd.country_name AS country_name, sscd.scenario_id AS scenario_id, sscd.survey_id AS survey_id, sscd.country_head_name AS country_head_name, sscd.survey_sent_date AS survey_sent_date, sscd.progress_percentage AS progress_percentage, sed.reminder_sent_date AS reminder_sent_date, sscd.survey_completed_date AS survey_completed_date, sscd.include_in_trial AS include_in_trial, sscd.feasibility_or_protocol_fit AS feasibility_or_protocol_fit, sscd.cost_per_patient AS cost_per_patient, sscd.degree_of_compliance AS degree_of_compliance, sscd.patients_committed AS patients_committed, sed.reminder_count AS reminder_count, sscd.country_head_email AS country_head_email, sscd.country_head_phone AS country_head_phone, sscd.survey_version AS survey_version, sscd.last_updated_time AS survey_last_updated_date, sscd.response_id AS response_id, uss.no_of_sites AS no_sites, sscd.reason_for_inclusion_exclusion AS reason_for_inclusion_exclusion, sscd.turn_around_time AS turn_around_time, sscd.is_ecda FROM ( SELECT country, scenario_id, country_code, no_of_sites, theme_id FROM $$schema$$.f_rpt_scenario_country_ranking WHERE active_flag = 'Y' AND survey_flag = true AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' $$narrow_result_condition$$ ) AS uss INNER JOIN ( SELECT country_name, country_head_name, country_head_email, country_head_phone, survey_version, last_updated_time, scenario_id, survey_id, recipient_personalized_link, survey_sent_date, progress_percentage, survey_completed_date, include_in_trial, feasibility_or_protocol_fit, cost_per_patient, degree_of_compliance, patients_committed, response_id, theme_id, reason_for_inclusion_exclusion, ( ( survey_completed_date :: DATE - survey_sent_date :: DATE )+ 1 ) as turn_around_time, is_ecda FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND $$search_clause$$ $$filter_condition$$ ) AS sscd ON uss.scenario_id = sscd.scenario_id AND uss.country = sscd.country_name AND uss.theme_id = sscd.theme_id LEFT JOIN ( SELECT Count(reminder_sent_date) AS reminder_count, Max(reminder_sent_date) AS reminder_sent_date, country_name, scenario_id, theme_id, survey_id, recipient_list FROM $$schema$$.log_scenario_survey_email_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND $$search_clause$$ GROUP BY 3, 4, 5, 6, 7 ) AS sed ON sscd.scenario_id = sed.scenario_id AND sscd.country_name = sed.country_name AND sscd.theme_id = sed.theme_id AND sscd.survey_id = sed.survey_id AND sscd.country_head_email = sed.recipient_list $$order_by_clause$$ $$order_type$$ limit $$limit$$ offset $$offset$$",
        "get_country_survey_status": "SELECT survey_status, scenario_id, theme_id, survey_id, last_updated_time, max(survey_dtl_version) as survey_dtl_version FROM $$schema$$.f_rpt_user_scenario_survey_dtl WHERE scenario_id='$$scenario_id$$' AND theme_id = '$$theme_id$$' and survey_type='$$source$$' and is_active=True group by 1,2,3,4,5",
        "search_result_site_query": "SELECT sscd.ctfo_site_id as ctfo_site_id, sscd.rank as site_rank, sscd.site_country as site_country, sscd.site_nm as site_nm, sscd.investigator_name as investigator_name, sscd.investigator_email as investigator_email, sscd.investigator_phone as investigator_phone, sscd.survey_sent_date as survey_sent_date, sscd.progress_percentage as progress_percentage, sscd.survey_completed_date as survey_completed_date, sed.reminder_sent_date as reminder_sent_date, sed.reminder_count as number_of_remainders_sent, sscd.response_id as response_id, sscd.include_in_trial as include_in_trial, sscd.feasibility_or_protocol_fit as feasibility_or_protocol_fit, sscd.degree_of_compliance as degree_of_compliance, sscd.patients_committed as patients_committed, sscd.enrollment_duration_committed as enroll_duration_committed, sscd.investigator_id as investigator_id, sscd.site_alias AS site_alias, sscd.site_alias_primary AS site_alias_primary, sscd.reason_for_inclusion_exclusion AS reason_for_inclusion_exclusion, sscd.turn_around_time AS turn_around_time, sscd.is_ecda as is_ecda FROM ( SELECT rank, scenario_id, theme_id, site_country, survey_id, survey_version, ctfo_site_id, site_nm, investigator_name, investigator_email, investigator_phone, include_in_trial, survey_sent_date, progress_percentage, investigator_id, survey_completed_date, feasibility_or_protocol_fit, degree_of_compliance, patients_committed, enrollment_duration_committed, response_id, recipient_personalized_link, COALESCE(NULLIF(site_alias, ''), site_nm) AS site_alias, COALESCE(NULLIF(site_alias_primary, ''), site_nm) AS site_alias_primary, is_ecda, reason_for_inclusion_exclusion, ( ( survey_completed_date :: DATE - survey_sent_date :: DATE )+ 1 ) as turn_around_time FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND $$search_clause$$ $$tag_clause$$ $$filter_condition$$ ) AS sscd LEFT JOIN ( SELECT Count(reminder_sent_date) AS reminder_count, max(reminder_sent_date) AS reminder_sent_date, scenario_id, ctfo_site_id, theme_id, survey_id, investigator_id, recipient_list FROM $$schema$$.log_scenario_survey_email_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' GROUP BY 3, 4, 5, 6, 7, 8 ) AS sed ON sscd.scenario_id = sed.scenario_id AND sscd.ctfo_site_id = sed.ctfo_site_id AND sscd.theme_id = sed.theme_id AND sscd.investigator_id = sed.investigator_id AND sscd.survey_id = sed.survey_id AND sscd.investigator_email = sed.recipient_list $$order_by_clause$$ $$order_type$$ $$limit$$ $$offset$$",
        "get_investigator_details": "SELECT ctfo_inv_id, ctfo_inv_name, ctfo_inv_phone, ctfo_inv_email, ctfo_site_id, ctfo_inv_email_secondary, salutation FROM ( SELECT inv_list.ctfo_inv_id AS ctfo_inv_id, COALESCE( outreach_inv_list.investigator_name, inv_list.ctfo_inv_name ) AS ctfo_inv_name, COALESCE( outreach_inv_list.investigator_phone, inv_list.ctfo_inv_phone ) AS ctfo_inv_phone, COALESCE( outreach_inv_list.investigator_email, inv_list.ctfo_inv_email ) AS ctfo_inv_email, inv_list.ctfo_site_id AS ctfo_site_id, outreach_inv_list.ctfo_inv_email_secondary as ctfo_inv_email_secondary, COALESCE( outreach_inv_list.salutation, 'Dr.' ) as salutation FROM ( SELECT ctfo_investigator_id AS ctfo_inv_id, investigator_full_nm AS ctfo_inv_name, investigator_phone AS ctfo_inv_phone, investigator_email AS ctfo_inv_email, '$$ctfo_site_id$$' AS ctfo_site_id FROM $$schema$$.f_rpt_scenario_highest_investigator WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND active_flag = 'Y' ) inv_list LEFT JOIN ( SELECT investigator_id, investigator_name, investigator_phone, investigator_email, ctfo_site_id, ctfo_inv_email_secondary, salutation FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND is_active = True ) outreach_inv_list ON inv_list.ctfo_inv_id = outreach_inv_list.investigator_id AND inv_list.ctfo_site_id = outreach_inv_list.ctfo_site_id ) a UNION SELECT ctfo_inv_id, ctfo_inv_name, ctfo_inv_phone, ctfo_inv_email, ctfo_site_id, ctfo_inv_email_secondary, salutation FROM ( SELECT investigator_id AS ctfo_inv_id, investigator_name AS ctfo_inv_name, investigator_phone AS ctfo_inv_phone, investigator_email AS ctfo_inv_email, ctfo_site_id, ctfo_inv_email_secondary, salutation, MAX( survey_site_investigator_version ) FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND is_manual = True GROUP BY 1, 2, 3, 4, 5, 6, 7 ) b",
        "get_investigator_details_nd": "Select ctfo_site_id, investigator_full_nm, investigator_phone as ctfo_inv_phone, investigator_email as ctfo_inv_email, salutation, ctfo_inv_email_secondary, ctfo_investigator_id as ctfo_inv_id FROM $$schema$$.f_rpt_scenario_highest_investigator WHERE theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' and ctfo_site_id = '$$ctfo_site_id$$'",
        "survey_sent_inv_ids": "select distinct investigator_id from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' and survey_sent_date is not null",
        "fetch_previous_record_country": "SELECT * from $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND country_name = '$$country_name$$' AND theme_id = '$$theme_id$$' AND is_active = true",
        "insert_new_record_country": "insert into $$schema$$.f_rpt_user_scenario_survey_country_dtl (%s) values %s",
        "update_previous_false_country": "UPDATE $$schema$$.f_rpt_user_scenario_survey_country_dtl set is_active = false,last_updated_by ='$$user_id$$',last_updated_time='$$last_updated_time$$' WHERE scenario_id = '$$scenario_id$$' AND country_name = '$$country_name$$' AND theme_id = '$$theme_id$$' AND is_active = true",
        "update_all_details_inv_bfr_update": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET investigator_first_name = '$$investigator_first_name$$', investigator_last_name = '$$investigator_last_name$$', investigator_name = '$$investigator_name$$', investigator_email = '$$investigator_email$$', investigator_phone = '$$investigator_phone$$', ctfo_inv_email_secondary = '$$investigator_secondary_email$$', survey_site_investigator_version = '$$survey_version$$', salutation = '$$salutation$$' WHERE scenario_id = '$$scenario_id$$' AND site_country = '$$site_country$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND theme_id = '$$theme_id$$' AND is_active = 'true'",
        "get_country_details": "SELECT country_name, country_head_first_name, country_head_last_name, country_head_name, country_head_email, country_head_phone, country_head_email_secondary, salutation from $$schema$$.f_rpt_user_scenario_survey_country_dtl where scenario_id = '$$scenario_id$$' AND country_name = '$$country_name$$' AND theme_id = '$$theme_id$$' AND is_active = true",
        "fetch_previous_record_inv": "SELECT * from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND site_country = '$$site_country$$' AND ctfo_site_id = '$$ctfo_site_id$$'  AND theme_id = '$$theme_id$$' AND is_active = true",
        "update_previous_false_inv": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET is_active = False,last_updated_by ='$$user_id$$',last_updated_time='$$last_updated_time$$' WHERE scenario_id = '$$scenario_id$$' AND site_country = '$$site_country$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND theme_id = '$$theme_id$$' AND is_active = true",
        "insert_new_record_inv": "insert into $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl (%s) values %s",
        "get_survey_details": "SELECT survey_id,survey_version,survey_status, is_ecda from $$schema$$.f_rpt_user_scenario_survey_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND survey_type ='$$source$$' AND is_active = true",
        "country_prioritization_flyout_details": "WITH f1 AS( SELECT site_country AS country, SUM( CASE WHEN degree_of_interest_scientific = 'No' THEN 1 END ) AS dois_none_count, SUM( CASE WHEN degree_of_interest_scientific = 'High' THEN 1 END ) AS dois_high_count, SUM( CASE WHEN degree_of_interest_scientific = 'Moderate' THEN 1 END ) AS dois_moderate_count, SUM( CASE WHEN degree_of_interest_scientific = 'Low' THEN 1 END ) AS dois_low_count, SUM( CASE WHEN degree_of_interest_medical = 'No' THEN 1 END ) AS doim_none_count, SUM( CASE WHEN degree_of_interest_medical = 'High' THEN 1 END ) AS doim_high_count, SUM( CASE WHEN degree_of_interest_medical = 'Moderate' THEN 1 END ) AS doim_moderate_count, SUM( CASE WHEN degree_of_interest_medical = 'Low' THEN 1 END ) AS doim_low_count, SUM( CASE WHEN degree_of_burden_operation = 'No' THEN 1 END ) AS dobo_none_count, SUM( CASE WHEN degree_of_burden_operation = 'High' THEN 1 END ) AS dobo_high_count, SUM( CASE WHEN degree_of_burden_operation = 'Moderate' THEN 1 END ) AS dobo_moderate_count, SUM( CASE WHEN degree_of_burden_operation = 'Low' THEN 1 END ) AS dobo_low_count, SUM( CASE WHEN degree_of_burden_patient = 'No' THEN 1 END ) AS dobp_none_count, SUM( CASE WHEN degree_of_burden_patient = 'High' THEN 1 END ) AS dobp_high_count, SUM( CASE WHEN degree_of_burden_patient = 'Moderate' THEN 1 END ) AS dobp_moderate_count, SUM( CASE WHEN degree_of_burden_patient = 'Low' THEN 1 END ) AS dobp_low_count FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f2 AS ( SELECT site_country AS country, AVG( percentage_of_patients_contacted_white ) AS percentage_of_patients_contacted_white, AVG( percentage_of_patients_contacted_black_afro_american ) AS percentage_of_patients_contacted_black_afro_american, AVG( percentge_of_patients_contacted_asian ) AS percentge_of_patients_contacted_asian, AVG( percentge_of_patients_contacted_hispanic ) AS percentge_of_patients_contacted_hispanic, AVG( percentage_of_patients_contacted_american_indian_alaskan_native ) AS percentage_of_patients_contacted_american_indian_alaskan_native, AVG( percentge_of_patients_contacted_native_hawaiian_other_pacific ) AS percentge_of_patients_contacted_native_hawaiian_other_pacific, AVG( percentge_of_patients_contacted_other ) AS percentge_of_patients_contacted_other FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f3 AS ( SELECT DISTINCT country_name AS country, recruitment_duration AS recruitment_duration, screen_failure_rate, dropout_rate, timeline_fsi_date, timeline_50_si_date, timeline_all_si_date, timeline_fpi_date, timeline_lpi_date, avg_si_to_fp_in, patients_committed FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE is_Active = true AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND country_name = '$$country_name$$' ), f4 AS ( SELECT site_country AS country, COUNT(1) AS num_of_site_surveys_sent FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND survey_sent_date IS NOT NULL AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f5 AS ( SELECT site_country AS country, COUNT(1) AS num_of_site_survey_responses FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND survey_completed_date IS NOT NULL AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f6 AS ( SELECT site_country AS country, COUNT(1) AS num_of_sites_interested FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND lower(interested_in_study) IN ( 'yes, highly interested', 'yes, moderately interested' ) AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f7 AS ( SELECT site_country AS country, COUNT(1) AS num_of_sites_not_interested FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND lower(interested_in_study) = 'no' AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f8 AS ( SELECT site_country AS country, median(enrollment_rate) AS enrollment_rate FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND lower(interested_in_study) = 'no' AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country ), f9 AS ( SELECT standard_country AS country, cost_patient_euro AS cost_per_patient FROM $$schema_reporting$$.f_rpt_study_country_details WHERE standard_country = '$$country_name$$' AND study_code = '$$study_code$$' GROUP BY 1, 2 ) SELECT a.country, z.dois_none_count, z.dois_high_count, z.dois_moderate_count, z.dois_low_count, z.doim_none_count, z.doim_high_count, z.doim_moderate_count, z.doim_low_count, z.dobo_none_count, z.dobo_high_count, z.dobo_moderate_count, z.dobo_low_count, z.dobp_none_count, z.dobp_high_count, z.dobp_moderate_count, z.dobp_low_count, b.percentage_of_patients_contacted_white, b.percentage_of_patients_contacted_black_afro_american, b.percentge_of_patients_contacted_asian, b.percentge_of_patients_contacted_hispanic, b.percentage_of_patients_contacted_american_indian_alaskan_native, b.percentge_of_patients_contacted_native_hawaiian_other_pacific, b.percentge_of_patients_contacted_other, a.recruitment_duration, a.screen_failure_rate, a.dropout_rate, a.timeline_fsi_date, a.timeline_50_si_date, a.timeline_all_si_date, a.timeline_fpi_date, a.timeline_lpi_date, c.cost_per_patient, a.avg_si_to_fp_in, d.num_of_site_surveys_sent, e.num_of_site_survey_responses, f.num_of_sites_interested, g.num_of_sites_not_interested, h.enrollment_rate, a.patients_committed FROM f3 a LEFT JOIN f9 c ON a.country = c.country LEFT JOIN f2 b ON a.country = b.country LEFT JOIN f4 d ON a.country = d.country LEFT JOIN f5 e ON a.country = e.country LEFT JOIN f6 f ON a.country = f.country LEFT JOIN f7 g ON a.country = g.country LEFT JOIN f8 h ON a.country = h.country LEFT JOIN f1 z ON a.country = z.country",
        "country_flyout_bar_graph_query" : "SELECT site_country , SUM(CASE WHEN reason_for_not_interested LIKE '%Unable to manage this trial because of Covid-19 crisis%' THEN 1 END) AS r1_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Not enough potential patients due to inclusion / exclusion criteria%' THEN 1 END ) AS r2_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Low scientific interest%' THEN 1 END ) AS r3_count , SUM(CASE WHEN reason_for_not_interested LIKE '%High operational burden for the investigator%' THEN 1 END ) AS r4_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Low medical interest for patients%' THEN 1 END ) AS r5_count , SUM(CASE WHEN reason_for_not_interested LIKE '%High patient burden%' THEN 1 END ) AS r6_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Site not capable of running the study - equipment not available or not able to perform procedures%' THEN 1 END ) AS r7_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Lack of resources%' THEN 1 END ) AS r8_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Competing trials in similar patient population%' THEN 1 END ) AS r9_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Protocol not in line with routine clinical practice%' THEN 1 END ) AS r10_count , SUM(CASE WHEN reason_for_not_interested LIKE '%Other%' THEN 1 END ) AS r11_count FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE is_Active = true AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_country = '$$country_name$$' GROUP BY site_country",
        "site_prioritization_flyout_details": "SELECT site_nm AS site_name,patients_committed AS patients_commited_current,patients_commited_median,timeline_fsi_date AS first_site_initiation_date,timeline_fpi_date AS first_patient_in,timeline_lpi_date AS last_patient_in,timeline_lpv_date AS last_patient_visit,degree_of_interest_scientific AS scientific_interest,degree_of_interest_medical AS medical_interest,degree_of_burden_operation AS operation_burden,degree_of_burden_patient AS patient_burden,number_of_patients_contacted_white AS White,number_of_patients_contacted_black_afro_american AS Black_or_African_American,number_of_patients_contacted_asian AS Hispanic,number_of_patients_contacted_hispanic AS Asian,number_of_patients_contacted_american_indian_alaskan_native AS Native_Hawaiian_or_Other_Pacific_Islander,number_of_patients_contacted_native_hawaiian_other_pacific AS American_Indian_or_Alaskan_Native,number_of_patients_contacted_other AS others FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE ctfo_site_id = '$$ctfo_site_id$$' AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true",
        "color_result_country_query": "select rank.country,sur.cost_per_patient,sur.degree_of_compliance,sur.patients_committed,rank.no_of_sites as sites from $$schema$$.f_rpt_user_scenario_survey_country_dtl as sur inner join $$schema$$.f_rpt_scenario_country_ranking as rank on sur.scenario_id=rank.scenario_id and sur.theme_id=rank.theme_id  AND sur.country_name = rank.country where sur.is_active=true and sur.scenario_id='$$scenario_id$$' and sur.theme_id='$$theme_id$$' group by 1,2,3,4,5",
        "color_result_site_query": "select * from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where is_active=true and scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$'",
        "survey_id_ecda_flag_details": "select survey_id,is_ecda,survey_status from $$schema$$.f_rpt_user_scenario_survey_dtl where survey_id in {}",
        "get_site_inv_details_if_no_country_detail": "SELECT smry.scenario_id as scenario_id, smry.study_code, regexp_replace( smry.description, Chr(39), '' ) as study_name, smry.therapeutic_area as ta_name, site.site_country AS country_name, site.ctfo_site_id, site.investigator_id, site.recipient_personalized_link, site.investigator_last_name AS investigator_name, site.investigator_email, COALESCE(site.site_alias_primary, site.site_nm) as site_nm, site.ctfo_inv_email_secondary as secondary_email, '' AS cc_email_id, '' AS country_head_name, smry.manual_mail_subject, site.salutation FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl site INNER JOIN $$schema$$.f_rpt_scenario_stdy_sumry smry on site.scenario_id = smry.scenario_id where smry.study_code = '$$study_code$$' and smry.active_flag = 'Y' and site.scenario_id = '$$scenario_id$$' AND site.survey_id = '$$survey_id$$' AND site.theme_id = '$$theme_id$$' AND site.investigator_id = '$$ctfo_inv_id$$' AND site.ctfo_site_id = '$$ctfo_site_id$$' AND site.is_active = 'True'",
        "update_previous_investigator_flag": "UPDATE $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl SET is_active = true,last_updated_by ='$$user_id$$', last_updated_time='$$last_updated_time$$', survey_site_investigator_version = '$$survey_version$$' WHERE scenario_id = '$$scenario_id$$' AND site_country = '$$site_country$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND theme_id = '$$theme_id$$' AND investigator_id = '$$inv_id$$' AND last_updated_time in (SELECT MAX(last_updated_time) FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND site_country = '$$site_country$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND theme_id = '$$theme_id$$' AND investigator_id = '$$inv_id$$')",
        "get_prev_existing_inv_details": "select * from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' and ctfo_site_id = '$$ctfo_site_id$$' AND investigator_id = '$$inv_id$$' AND last_updated_time IN (SELECT MAX(last_updated_time) FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND ctfo_site_id = '$$ctfo_site_id$$' AND investigator_id = '$$inv_id$$')",
        "country_study_code" : "select study_code from $$schema$$.f_rpt_scenario_stdy_sumry where theme_id = '$$theme_id$$' and scenario_id = '$$scenario_id$$' AND active_flag = 'Y'",
        "fetch_qualtrics_user": "select * from $$schema$$.f_rpt_api_key_store where user_id = '$$user_id$$'",
        "fetch_survey_keys": "select key.user_id, key.key as api_token, key.account_id as account_id, survey.survey_id from $$schema$$.f_rpt_api_key_store key LEFT JOIN $$schema$$.f_rpt_user_scenario_survey_dtl survey ON key.user_id = survey.qualtrics_user where scenario_id = '$$scenario_id$$' and is_active",
        "count_country_surveys_sent": "select count(country_name) as count from $$schema$$.f_rpt_user_scenario_survey_country_dtl where scenario_id = '$$scenario_id$$' and is_active and survey_sent_date is not null",
        "count_site_surveys_sent": "select count(site_nm) as count from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where scenario_id = '$$scenario_id$$' and is_active and survey_sent_date is not null",
        "site_preview_data": "select smry.study_code as study_code, site.site_country as Country, site.site_nm as site_name, site.investigator_name as investigator_name, site.survey_id as survey_id, site.response_id as response_id from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl site inner join $$schema$$.f_rpt_scenario_stdy_sumry smry ON smry.scenario_id = site.scenario_id and site.scenario_id = '$$scenario_id$$' and smry.active_flag = 'Y' and site.is_active and site.progress_percentage = 100 and site.is_ecda = 'true'"
      },
      "final_list": {
        "get_final_list_site_view": "SELECT * FROM $$schema$$.f_rpt_scenario_site_ranking_final where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and final_list_id='$$final_list_id$$' and active_flag='Y' order by rank limit $$limit$$ offset $$offset$$",
        "get_final_list_investigator_view": "SELECT * FROM $$schema$$.f_rpt_scenario_investigator_ranking_final where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and final_list_id='$$final_list_id$$' and active_flag='Y' order by rank limit $$limit$$ offset $$offset$$",
        "get_final_list_view": "select * from $$schema$$.$$table$$ where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and final_list_id='$$final_list_id$$' and active_flag= 'Y' $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$",
        "get_narrow_result_priortization": "select * from $$schema$$.$$table$$ where $$condition$$ and active_flag='Y' limit $$limit$$ offset $$offset$$",
        "get_final_count_prioritization": "select count(*) from $$schema$$.$$table$$ where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and final_list_id='$$final_list_id$$' and active_flag= 'Y'",
        "get_final_count_site_prioritization": "select count(*) from $$schema$$.f_rpt_scenario_site_ranking_final where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and final_list_id='$$final_list_id$$' and active_flag='Y'",
        "get_final_count_investigator_prioritization": "select count(*) from $$schema$$.f_rpt_scenario_investigator_ranking_final where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and final_list_id='$$final_list_id$$' and active_flag='Y'",
        "check_final_list_id_query": "SELECT distinct final_list_id FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y'",
        "update_site_rank_final_records_query": "UPDATE $$schema$$.f_rpt_scenario_site_ranking_final SET active_flag = 'N', updated_timestamp = '$$updated_timestamp$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND final_list_id = '$$final_list_id$$' AND active_flag = 'Y'",
        "update_country_rank_final_records_query": "UPDATE $$schema$$.f_rpt_scenario_country_ranking_final SET active_flag = 'N', updated_timestamp = '$$updated_timestamp$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND final_list_id = '$$final_list_id$$' AND active_flag = 'Y'",
        "update_inv_rank_final_records_query": "UPDATE $$schema$$.f_rpt_scenario_investigator_ranking_final SET active_flag = 'N', updated_timestamp = '$$updated_timestamp$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND final_list_id = '$$final_list_id$$' AND active_flag = 'Y'",
        "check_site_ranking_data_query": "SELECT * FROM $$schema$$.f_rpt_scenario_site_ranking WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_list_id = '$$site_list_id$$' AND active_flag = 'Y' AND is_constraint = 'false'",
        "get_final_site_list_query": "SELECT site_ranking_dtl.active_flag AS active_flag, site_ranking_dtl.average_startup_time_median AS average_startup_time_median, site_ranking_dtl.comment AS comment, site_ranking_dtl.competitor_experience AS competitor_experience, site_ranking_dtl.completed_trials AS completed_trials, site_ranking_dtl.country_code AS country_code, site_ranking_dtl.country_tier AS country_tier, site_ranking_dtl.ctfo_site_id AS ctfo_site_id, site_ranking_dtl.current_workload AS current_workload, site_ranking_dtl.current_workload_ta AS current_workload_ta, site_ranking_dtl.curr_optimisation_flag AS curr_optimisation_flag, site_ranking_dtl.disease_experience_year AS disease_experience_year, site_ranking_dtl.global_tier AS global_tier, site_ranking_dtl.include_exclude AS include_exclude, site_ranking_dtl.is_constraint AS is_constraint, site_ranking_dtl.lost_opportunity_time_median AS lost_opportunity_time_median, site_ranking_dtl.prev_optimisation_flag AS prev_optimisation_flag, site_ranking_dtl.randomization_rate_median AS randomization_rate_median, site_ranking_dtl.rank AS rank, site_ranking_dtl.reason AS reason, site_ranking_dtl.recentness_trials AS recentness_trials, site_ranking_dtl.region AS region, site_ranking_dtl.region_code AS region_code, site_ranking_dtl.screen_failure_rate_median AS screen_failure_rate_median, site_ranking_dtl.similar_trials_experience AS similar_trials_experience, site_ranking_dtl.site_address AS site_address, site_ranking_dtl.site_alias AS site_alias, site_ranking_dtl.site_city AS site_city, site_ranking_dtl.site_country AS site_country, site_ranking_dtl.site_list_id AS site_list_id, site_ranking_dtl.site_nm AS site_nm, site_ranking_dtl.site_state AS site_state, site_ranking_dtl.sponsor_experience AS sponsor_experience, site_ranking_dtl.survey_flag AS survey_flag, site_ranking_dtl.tags AS tags, site_ranking_dtl.tier_score AS tier_score, site_ranking_dtl.version AS version, site_ranking_dtl.scenario_id AS scenario_id, site_ranking_dtl.theme_id AS theme_id, site_ranking_dtl.site_zip_code AS site_zip_code FROM ( SELECT active_flag, average_startup_time_median, comment, competitor_experience, completed_trials, country_code, country_tier, ctfo_site_id, current_workload, current_workload_ta, curr_optimisation_flag, disease_experience_year, global_tier, include_exclude, is_constraint, lost_opportunity_time_median, prev_optimisation_flag, randomization_rate_median, rank, reason, recentness_trials, region, region_code, screen_failure_rate_median, similar_trials_experience, site_address, site_alias, site_city, site_country, site_list_id, site_nm, site_state, sponsor_experience, survey_flag, tags, tier_score, version, scenario_id, theme_id, site_zip_code FROM $$schema$$.$$table_name$$ WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND site_list_id = '$$site_list_id$$' AND survey_flag = true AND active_flag = 'Y' AND is_constraint = 'false' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 ) AS site_ranking_dtl INNER JOIN ( SELECT rank, scenario_id, theme_id, ctfo_site_id, investigator_id, include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(include_in_trial) = 'yes' AND is_active = true GROUP BY 1, 2, 3, 4, 5, 6 ) survey_site_inv_dtl ON site_ranking_dtl.ctfo_site_id = survey_site_inv_dtl.ctfo_site_id where site_ranking_dtl.ctfo_site_id in ( select distinct ctfo_site_id from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(include_in_trial) = 'yes' AND is_active = true except select distinct ctfo_site_id from $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(include_in_trial) = 'yes' AND is_active = true AND lower(site_country) in ( select distinct lower(country_name) as country_name from $$schema$$.f_rpt_user_scenario_survey_country_dtl where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(include_in_trial) = 'no' AND is_active = true ) )",
        "insert_final_site_list_query": "INSERT INTO $$schema$$.f_rpt_scenario_site_ranking_final( active_flag, average_startup_time_median, comment, competitor_experience, completed_trials, country_code, country_tier, created_by, created_timestamp, ctfo_site_id, current_workload, current_workload_ta, curr_optimisation_flag, disease_experience_year, global_tier, include_exclude, is_constraint, lost_opportunity_time_median, prev_optimisation_flag, randomization_rate_median, rank, reason, recentness_trials, region, region_code, scenario_id, screen_failure_rate_median, similar_trials_experience, site_address, site_alias, site_city, site_country, site_list_id, site_nm, site_state, sponsor_experience, survey_flag, tags, theme_id, tier_score, updated_by, updated_timestamp, version, final_list_id, site_zip_code) VALUES",
        "check_country_ranking_data_query": "SELECT * FROM $$schema$$.f_rpt_scenario_country_ranking WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y'",
        "get_final_country_list_query": "SELECT country_ranking_dtl.active_flag AS active_flag, country_ranking_dtl.approved_targeted_treatment AS approved_targeted_treatment, country_ranking_dtl.completed_closed_trial AS completed_closed_trial, country_ranking_dtl.country AS country, country_ranking_dtl.country_code AS country_code, country_ranking_dtl.country_list_id AS country_list_id, country_ranking_dtl.curr_optimisation_flag AS curr_optimisation_flag, country_ranking_dtl.high_perf_investigators AS high_perf_investigators, country_ranking_dtl.high_perf_sites AS high_perf_sites, country_ranking_dtl.market_launch_flag AS market_launch_flag, country_ranking_dtl.median_average_startup_time AS median_average_startup_time, country_ranking_dtl.median_enrollment_rate AS median_enrollment_rate, country_ranking_dtl.median_screen_failure_rate AS median_screen_failure_rate, country_ranking_dtl.no_of_investigators AS no_of_investigators, country_ranking_dtl.no_of_sites AS no_of_sites, country_ranking_dtl.ongoing_trials_country AS ongoing_trials_country, country_ranking_dtl.patient_planned AS patient_planned, country_ranking_dtl.patient_prevalance AS patient_prevalance, country_ranking_dtl.patient_retention AS patient_retention, country_ranking_dtl.patients_enrolled AS patients_enrolled, country_ranking_dtl.perc_completed_trials AS perc_completed_trials, country_ranking_dtl.planned_fpfv_deviation AS planned_fpfv_deviation, country_ranking_dtl.planned_fsiv_deviation AS planned_fsiv_deviation, country_ranking_dtl.planned_patient_deviation AS planned_patient_deviation, country_ranking_dtl.post_trial_details AS post_trial_details, country_ranking_dtl.post_trial_flag AS post_trial_flag, country_ranking_dtl.prev_optimisation_flag AS prev_optimisation_flag, country_ranking_dtl.rank AS rank, country_ranking_dtl.recent_trials_country AS recent_trials_country, country_ranking_dtl.region AS region, country_ranking_dtl.regulatory_iec_timeline AS regulatory_iec_timeline, country_ranking_dtl.survey_flag AS survey_flag, country_ranking_dtl.tier AS tier, country_ranking_dtl.tier_score AS tier_score, country_ranking_dtl.total_trials AS total_trials, country_ranking_dtl.version AS version FROM ( SELECT active_flag, approved_targeted_treatment, completed_closed_trial, country, country_code, country_list_id, curr_optimisation_flag, high_perf_investigators, high_perf_sites, market_launch_flag, median_average_startup_time, median_enrollment_rate, median_screen_failure_rate, no_of_investigators, no_of_sites, ongoing_trials_country, patient_planned, patient_prevalance, patient_retention, patients_enrolled, perc_completed_trials, planned_fpfv_deviation, planned_fsiv_deviation, planned_patient_deviation, post_trial_details, post_trial_flag, prev_optimisation_flag, rank, recent_trials_country, region, regulatory_iec_timeline, survey_flag, tier, tier_score, total_trials, version FROM $$schema$$.$$table_name$$ WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND country_list_id = '$$country_list_id$$' AND active_flag = 'Y' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,27,28,29,30,31,32,33,34,35,36 ) AS country_ranking_dtl INNER JOIN ( SELECT country_code FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' group by 1 ) AS site_rank_final ON country_ranking_dtl.country_code = site_rank_final.country_code",
        "insert_final_country_list_query": "INSERT INTO $$schema$$.f_rpt_scenario_country_ranking_final (active_flag, approved_targeted_treatment, completed_closed_trial, country, country_code, country_list_id, created_by, created_timestamp, curr_optimisation_flag, final_list_id, high_perf_investigators, high_perf_sites, market_launch_flag, median_average_startup_time, median_enrollment_rate, median_screen_failure_rate, no_of_investigators, no_of_sites, ongoing_trials_country, patient_planned, patient_prevalance, patient_retention, patients_enrolled, perc_completed_trials, planned_fpfv_deviation, planned_fsiv_deviation, planned_patient_deviation, post_trial_details, post_trial_flag, prev_optimisation_flag, rank, recent_trials_country, region, regulatory_iec_timeline, scenario_id, survey_flag, theme_id, tier, tier_score, total_trials, updated_by, updated_timestamp, version) VALUES ",
        "check_investigator_ranking_data_query": "SELECT * FROM $$schema$$.f_rpt_scenario_investigator_ranking WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND inv_list_id = '$$inv_list_id$$' AND active_flag = 'Y'",
        "get_final_investigator_list_query": "SELECT inv_ranking_dtl.active_flag AS active_flag, inv_ranking_dtl.completed_trials AS completed_trials, inv_ranking_dtl.country_code AS country_code, inv_ranking_dtl.ctfo_investigator_id AS ctfo_investigator_id, inv_ranking_dtl.current_workload AS current_workload, inv_ranking_dtl.disease_experience_years AS disease_experience_years, inv_ranking_dtl.enrollment_rate_median AS enrollment_rate_median, inv_ranking_dtl.global_tier AS global_tier, inv_ranking_dtl.investigator_address AS investigator_address, inv_ranking_dtl.investigator_city AS investigator_city, inv_ranking_dtl.investigator_country AS investigator_country, inv_ranking_dtl.investigator_full_nm AS investigator_full_nm, regexp_replace( inv_ranking_dtl.investigator_phone, Chr(39), '' ) AS investigator_phone, inv_ranking_dtl.investigator_specialty AS investigator_specialty, inv_ranking_dtl.investigator_state AS investigator_state, inv_ranking_dtl.inv_list_id AS inv_list_id, inv_ranking_dtl.local_tier AS local_tier, inv_ranking_dtl.phase_experience AS phase_experience, inv_ranking_dtl.rank AS rank, inv_ranking_dtl.recentness_of_activity AS recentness_of_activity, inv_ranking_dtl.region AS region, inv_ranking_dtl.region_code AS region_code, inv_ranking_dtl.screen_failure_rate_median AS screen_failure_rate_median, inv_ranking_dtl.similar_drug_experience AS similar_drug_experience, inv_ranking_dtl.similar_trials_experience AS similar_trials_experience, inv_ranking_dtl.sponsor_experience AS sponsor_experience, inv_ranking_dtl.ta_experience_years AS ta_experience_years, inv_ranking_dtl.tier_score AS tier_score, inv_ranking_dtl.total_trials_all_ta AS total_trials_all_ta, inv_ranking_dtl.version AS version, inv_ranking_dtl.years_of_experience AS years_of_experience FROM ( SELECT site_rank_final.scenario_id AS scenario_id, site_rank_final.theme_id AS theme_id, site_rank_final.rank AS rank, site_rank_final.ctfo_site_id AS ctfo_site_id, site_rank_final.site_nm AS site_nm, site_rank_final.site_country AS site_country, site_inv_filters.ctfo_investigator_id AS ctfo_investigator_id FROM ( SELECT scenario_id, theme_id, rank, ctfo_site_id, site_nm, site_country FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY 1, 2, 3, 4, 5, 6 ) AS site_rank_final LEFT JOIN ( SELECT ctfo_site_id, ctfo_investigator_id, country FROM $$schema_reporting$$.f_rpt_filters_site_inv site_inv INNER JOIN ( SELECT ctfo_trial_id FROM $$schema_reporting$$.f_rpt_filters_setup_all $$where_clause$$ GROUP BY 1 ) AS trail_setup ON site_inv.ctfo_trial_id = trail_setup.ctfo_trial_id where ctfo_investigator_id is not null ) AS site_inv_filters ON site_rank_final.ctfo_site_id = site_inv_filters.ctfo_site_id ) AS site_filters INNER JOIN ( SELECT active_flag, completed_trials, country_code, ctfo_investigator_id, current_workload, disease_experience_years, enrollment_rate_median, global_tier, investigator_address, investigator_city, investigator_country, investigator_full_nm, investigator_phone, investigator_specialty, investigator_state, inv_list_id, local_tier, phase_experience, rank, recentness_of_activity, region, region_code, screen_failure_rate_median, similar_drug_experience, similar_trials_experience, sponsor_experience, ta_experience_years, tier_score, total_trials_all_ta, version, years_of_experience FROM $$schema$$.f_rpt_scenario_investigator_ranking WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 ) AS inv_ranking_dtl ON site_filters.ctfo_investigator_id = inv_ranking_dtl.ctfo_investigator_id GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31",
        "insert_final_investigator_list_query": "INSERT INTO $$schema$$.f_rpt_scenario_investigator_ranking_final (active_flag, completed_trials, country_code, created_by, created_timestamp, ctfo_investigator_id, current_workload, disease_experience_years, enrollment_rate_median, final_list_id, global_tier, investigator_address, investigator_city, investigator_country, investigator_full_nm, investigator_phone, investigator_specialty, investigator_state, inv_list_id, local_tier, phase_experience, rank, recentness_of_activity, region, region_code, scenario_id, screen_failure_rate_median, similar_drug_experience, similar_trials_experience, sponsor_experience, ta_experience_years, theme_id, tier_score, total_trials_all_ta, updated_by, updated_timestamp, version, years_of_experience) VALUES ",
        "update_final_list_id_query": "UPDATE $$schema$$.f_rpt_scenario_stdy_sumry SET scenario_status = 'completed' ,final_list_id = '$$final_list_id$$', lock_status = True, updated_timestamp = '$$updated_timestamp$$', updated_by='$$user_id$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$'  and active_flag='Y' ",
        "get_search_result_priortization": "select * from $$schema$$.$$table$$ where $$condition$$ and lower($$column_key$$) like '%$$search_value$$%'",
        "fetch_site_list_id_query": "SELECT max(site_list_id) as site_list_id from $$schema$$.f_rpt_scenario_site_ranking where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag='Y'",
        "fetch_country_list_id_query": "SELECT max(country_list_id) as country_list_id from $$schema$$.f_rpt_scenario_country_ranking where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag='Y'",
        "fetch_inv_list_id_query": "SELECT max(inv_list_id) as inv_list_id from $$schema$$.f_rpt_scenario_investigator_ranking where scenario_id='$$scenario_id$$' and theme_id='$$theme_id$$' and active_flag='Y'",
        "get_final_list_union_view" : "WITH TEMP AS( SELECT * FROM $$schema$$.$$table$$ where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' AND rank <> 0 $$order_by$$ $$order_dir$$ limit $$limit$$ offset $$offset$$) SELECT * FROM ( SELECT * FROM $$schema$$.$$table$$ where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and final_list_id = '$$final_list_id$$' and active_flag = 'Y' AND rank = 0 UNION ALL SELECT * FROM TEMP ) AS final"
      },
      "region_map_query": "select region,country from  $schema_reporting$$.f_rpt_filters group by region,country;",
      "async_queries": {
        "insert_async_log_query": "INSERT INTO $$schema$$.log_async_service_dtl VALUES ('$$task_id$$', '$$assessment_type$$', '$$status$$', '$$created_time$$', '$$updated_time$$')",
        "update_async_log_query": "UPDATE $$schema$$.log_async_service_dtl SET progress_status = '$$status$$', updated_timestamp = '$$updated_time$$' WHERE task_id = '$$task_id$$'",
        "update_async_log_query_comments": "UPDATE $$schema$$.log_async_service_dtl SET progress_status = '$$status$$', updated_timestamp = '$$updated_time$$',comments = '$$comments$$' WHERE task_id = '$$task_id$$'",
        "select_async_log_query": "SELECT * from $$schema$$.log_async_service_dtl where task_id = '$$task_id$$'",
        "select_async_log_query_multiple_task_id": "SELECT * from $$schema$$.log_async_service_dtl where task_id in ('$$inv_task_id$$','$$site_task_id$$','$$country_task_id$$','$$highest_inv_task_id$$')"
      },
      "project_enrollment_screen": {
        "get_project_enrollment_details": "SELECT scenario_id, enrollment_scenario_id, theme_id, enrollment_scenario_name, enrollment_scenario_identifier, country_name, country_code, region_name, region_code, patient_drop_rate, screen_failure_rate, first_site_initiated, fifty_perc_site_initiated, all_sites_initiated, first_patient_in_date, last_patient_in_date, avg_time_from_site_initiation_to_fpi, no_of_sites, no_of_sites_interested, no_of_patients_aggregated, no_of_patients_committed, cost_per_patient, enrolled_rate_psm, projected_recruitment_duration, regulatory_timeline, include_country_flag, ramp_up_update_flag, updated_sites_committed, updated_patients_committed, planned_recruitment_duration, updated_recruitment_rate, projected_LPI, cost_per_site, total_cost, min_avialable_patients, max_avialable_patients FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_name = '$$enrollment_scenario_name$$' and enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True order by country_name" ,
        "view_dropdown_query": "SELECT DISTINCT enrollment_scenario_name ,enrollment_scenario_id ,enrollment_scenario_identifier ,created_timestamp FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE  scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'True' ORDER BY enrollment_scenario_identifier DESC ,created_timestamp DESC",
        "insert_rampup_factor": "INSERT INTO $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf( scenario_id ,enrollment_scenario_id ,enrollment_scenario_identifier ,country_code ,custom_enrollment_adjustment_factor ,custom_enrollment_site_ramp_up_factor ,month_sequence ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp) VALUES ( '$$scenario_id$$' ,'$$enrollment_scenario_id$$' ,'$$enrollment_scenario_identifier$$' ,'$$country_code$$' ,'$$custom_adjustment_factor$$' ,'$$custom_ramp_up_factor$$' ,'$$month_sequence$$' ,'$$userid$$' ,'$$userid$$' ,'True' ,'$$timestamp$$' ,'$$timestamp$$' )",
        "update_rampup_factor": "UPDATE $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf SET active_flag = False, updated_by = '$$user_id$$' WHERE  scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND country_code = '$$country_code$$'",
        "check_rampup_factor": "select scenario_id, enrollment_scenario_id, enrollment_scenario_identifier, country_code, default_percentage_site_ramp_up_factor, custom_enrollment_adjustment_factor, default_percentage_enrollment_adjustment_factor, custom_enrollment_site_ramp_up_factor, month_sequence, country_name from $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf WHERE scenario_id='$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$' and country_code='$$country_code$$' ",
        "generate_custom_scenario": "INSERT INTO $$schema$$.f_rpt_user_project_enrollment_details( SELECT '$$scenario_id$$' AS scenario_id, $$version$$ AS version, '$$enrollment_scenario_id$$' AS enrollment_scenario_id, '$$enrollment_scenario_name$$' AS enrollment_scenario_name, 'custom' AS enrollment_scenario_identifier, country_code, country_name, region_code, region_name, first_site_initiated, fifty_perc_site_initiated, all_sites_initiated, first_patient_in_date, last_patient_in_date, avg_time_from_site_initiation_to_fpi, no_of_sites, no_of_patients_committed, cost_per_patient, enrolled_rate_psm, projected_recruitment_duration, patient_drop_rate, screen_failure_rate, regulatory_timeline, '$$include_country_flag$$' AS include_country_flag, '$$created_by$$' AS created_by, '$$updated_by$$' AS updated_by, '$$created_timestamp$$' AS created_timestamp, '$$updated_timestamp$$' AS updated_timestamp, '$$active_flag$$' AS active_flag, '$$ramp_up_update_flag$$' as ramp_up_update_flag, theme_id, no_of_sites_interested, no_of_patients_aggregated, active_flag_na, updated_sites_committed, updated_patients_committed, projected_LPI, planned_recruitment_duration, updated_recruitment_rate, cost_per_site, total_cost, min_avialable_patients, max_avialable_patients FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND enrollment_scenario_identifier = 'survey' AND active_flag = 'True') ",
        "check_enrollment_details": "select * from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'",
        "insert_project_enrolment_details": "INSERT INTO $$schema$$.f_rpt_user_project_enrollment_details( SELECT site_ranking.scenario_id ,$$version$$ AS version ,'$$enrollment_scenario_id$$' AS enrollment_scenario_id ,'$$enrollment_scenario_name$$' AS enrollment_scenario_name ,'$$enrollment_scenario_identifier$$' AS enrollment_scenario_identifier ,site_ranking.country_code ,site_ranking.site_country AS country_name ,site_ranking.region_code ,site_ranking.region AS region_name ,survey_country.timeline_fsi_date AS first_site_initiated ,survey_country.timeline_50_si_date AS fifty_perc_site_initiated ,survey_country.timeline_all_si_date AS all_sites_initiated ,to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd') AS first_patient_in_date ,cohort_table.last_patient_in_date ,survey_country.avg_si_to_fp_in AS avg_time_from_site_initiation_to_fpi ,survey_country.number_of_sites_committed AS no_of_sites ,survey_country.patients_committed AS no_of_patients_committed ,study_country.cost_patient_euro AS cost_per_patient ,CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END AS enrolled_rate_psm ,CASE WHEN ((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END)) = 0 THEN 0 ELSE ((survey_country.patients_committed)/((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END))) END AS projected_recruitment_duration ,survey_country.dropout_rate AS patient_drop_rate ,survey_country.screen_failure_rate AS screen_failure_rate ,CASE WHEN country_ranking.regulatory_iec_timeline IS NOT NULL AND cast(country_ranking.regulatory_iec_timeline AS DOUBLE PRECISION) >= 0 THEN cast(country_ranking.regulatory_iec_timeline AS DOUBLE PRECISION) ELSE 0 END AS regulatory_timeline ,'$$include_country_flag$$' AS include_country_flag ,'$$created_by$$' AS created_by ,'$$updated_by$$' AS updated_by ,'$$created_timestamp$$' AS created_timestamp ,'$$updated_timestamp$$' AS updated_timestamp ,'$$active_flag$$' AS active_flag ,'$$ramp_up_update_flag$$' AS ramp_up_update_flag ,site_ranking.theme_id ,survey_site1.no_of_sites_interested ,survey_site2.no_of_patients_aggregated ,null AS active_flag_na ,survey_country.number_of_sites_committed AS updated_sites_activated ,survey_country.patients_committed AS updated_patients_committed ,to_char(((to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd')):: DATE) + interval '1 day' * ((CASE WHEN ((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END)) = 0 THEN 0 ELSE ((survey_country.patients_committed)/((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END)))END)*30.4) ,'yyyy-mm-dd') as projected_LPI ,(cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4 AS planned_recruitment_duration ,CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END AS updated_recruitment_rate ,study_country.cost_site_euro AS cost_per_site ,((study_country.cost_patient_euro :: double precision *survey_country.patients_committed)+(study_country.cost_site_euro*survey_country.number_of_sites_committed)) as total_cost ,survey_site2.min_avialable_patients ,survey_site2.max_avialable_patients FROM ( SELECT site_country ,scenario_id ,country_code ,region_code ,region ,theme_id FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y') AS site_ranking LEFT JOIN ( SELECT timeline_fsi_date ,timeline_50_si_date ,timeline_all_si_date ,timeline_fpi_date ,timeline_lpi_date ,avg_si_to_fp_in ,number_of_sites_committed ,patients_committed ,country_name ,recruitment_duration ,dropout_rate ,screen_failure_rate ,include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS survey_country ON site_ranking.site_country = survey_country.country_name INNER JOIN ( SELECT site_country ,patients_committed FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' ) AS survey_site ON site_ranking.site_country = survey_site.site_country LEFT JOIN ( SELECT site_country ,count(interested_in_study) AS no_of_sites_interested FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE lower(interested_in_study) IN ( 'yes, highly interested' ,'yes, moderately interested' ) AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true GROUP BY site_country ) AS survey_site1 ON survey_site.site_country = survey_site1.site_country LEFT JOIN ( SELECT site_country ,SUM(CEIL((TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 1)), '9G999g999') + TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 2)), '9G999g999')) / 2)) AS no_of_patients_aggregated, sum(TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 1)), '9G999g999')) as min_avialable_patients,sum(TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 2)), '9G999g999')) as max_avialable_patients FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' GROUP BY site_country ) AS survey_site2 ON survey_site.site_country = survey_site2.site_country LEFT JOIN ( SELECT country ,median_enrollment_rate ,regulatory_iec_timeline FROM $$schema$$.f_rpt_scenario_country_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y' ) AS country_ranking ON site_ranking.site_country = country_ranking.country LEFT JOIN ( SELECT DISTINCT standard_country ,cost_patient_euro ,cost_site_euro FROM $$schema_reporting$$.F_RPT_STUDY_COUNTRY_DETAILS where study_code = (select study_code from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$') group by study_code,standard_country,cost_patient_euro ,cost_site_euro ) AS study_country ON site_ranking.site_country = study_country.standard_country LEFT JOIN (select max(last_patient_in) :: text as last_patient_in_date, scenario_id,theme_id from $$schema$$.f_rpt_cohort_scenario_stdy_sumry where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and lower(active_flag) = 'y' group by scenario_id,theme_id) as cohort_table on site_ranking.scenario_id = cohort_table.scenario_id and site_ranking.theme_id = cohort_table.theme_id where ( lower(survey_country.include_in_trial) = 'yes' OR lower(survey_country.include_in_trial) IS NULL ) GROUP BY site_ranking.site_country ,site_ranking.scenario_id ,site_ranking.theme_id ,site_ranking.country_code ,site_ranking.region_code ,site_ranking.region ,survey_country.timeline_fsi_date ,survey_country.timeline_50_si_date ,survey_country.timeline_all_si_date ,survey_country.timeline_fpi_date ,survey_country.timeline_lpi_date ,survey_country.avg_si_to_fp_in ,survey_country.number_of_sites_committed ,survey_country.patients_committed ,study_country.cost_patient_euro ,country_ranking.median_enrollment_rate ,cohort_table.last_patient_in_date ,survey_country.dropout_rate ,survey_country.screen_failure_rate ,country_ranking.regulatory_iec_timeline ,survey_site1.no_of_sites_interested ,survey_site2.no_of_patients_aggregated ,study_country.cost_site_euro ,survey_site2.min_avialable_patients ,survey_site2.max_avialable_patients )",
        "update_enrollment_active_flag": "update $$schema$$.f_rpt_user_project_enrollment_details set active_flag = False , updated_by = '$$updated_by$$' , updated_timestamp='$$updated_timestamp$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and lower(enrollment_scenario_identifier) = 'survey' ",
        "get_country_in_survey_not_in_project_enrollment": "SELECT DISTINCT(site_country) FROM ( select distinct site_ranking.site_country from ( SELECT site_country FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y') AS site_ranking LEFT JOIN ( SELECT country_name,include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS survey_country ON site_ranking.site_country = survey_country.country_name INNER JOIN ( SELECT site_country AS survey_country FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' ) AS survey_site ON site_ranking.site_country = survey_site.survey_country INNER JOIN ( SELECT country FROM $$schema$$.f_rpt_scenario_country_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y' ) AS country_ranking ON site_ranking.site_country = country_ranking.country INNER JOIN ( SELECT DISTINCT standard_country FROM $$schema_reporting$$.F_RPT_STUDY_COUNTRY_DETAILS ) AS study_country ON site_ranking.site_country = study_country.standard_country WHERE ( lower(survey_country.include_in_trial) = 'yes' OR lower(survey_country.include_in_trial) IS NULL ) ) a EXCEPT ( SELECT DISTINCT (country_name) FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE enrollment_scenario_identifier = 'custom' AND active_flag = True )",
        "fetch_distinct_custom_scenario": "SELECT DISTINCT(enrollment_scenario_name) FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE enrollment_scenario_identifier = 'custom' and enrollment_scenario_name is not null and active_flag=True and scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$'" ,
        "insert_country_not_in_project": "INSERT INTO $$schema$$.f_rpt_user_project_enrollment_details( SELECT site_ranking.scenario_id ,$$version$$ AS version ,'$$enrollment_scenario_id$$' AS enrollment_scenario_id ,'$$enrollment_scenario_name$$' AS enrollment_scenario_name ,'custom' AS enrollment_scenario_identifier ,site_ranking.country_code ,site_ranking.site_country AS country_name ,site_ranking.region_code ,site_ranking.region AS region_name ,survey_country.timeline_fsi_date AS first_site_initiated ,survey_country.timeline_50_si_date AS fifty_perc_site_initiated ,survey_country.timeline_all_si_date AS all_sites_initiated ,to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd') AS first_patient_in_date ,cohort_table.last_patient_in_date ,survey_country.avg_si_to_fp_in AS avg_time_from_site_initiation_to_fpi ,survey_country.number_of_sites_committed AS no_of_sites ,survey_country.patients_committed AS no_of_patients_committed ,study_country.cost_patient_euro AS cost_per_patient ,CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END AS enrolled_rate_psm ,CASE WHEN ((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END)) = 0 THEN 0 ELSE ((survey_country.patients_committed)/((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END))) END AS projected_recruitment_duration ,survey_country.dropout_rate AS patient_drop_rate ,survey_country.screen_failure_rate AS screen_failure_rate ,CASE WHEN country_ranking.regulatory_iec_timeline IS NOT NULL AND cast(country_ranking.regulatory_iec_timeline AS DOUBLE PRECISION) >= 0 THEN cast(country_ranking.regulatory_iec_timeline AS DOUBLE PRECISION) ELSE 0 END AS regulatory_timeline ,'$$include_country_flag$$' AS include_country_flag ,'$$created_by$$' AS created_by ,'$$updated_by$$' AS updated_by ,'$$created_timestamp$$' AS created_timestamp ,'$$updated_timestamp$$' AS updated_timestamp ,'$$active_flag$$' AS active_flag ,'$$ramp_up_update_flag$$' AS ramp_up_update_flag ,site_ranking.theme_id ,survey_site1.no_of_sites_interested ,survey_site2.no_of_patients_aggregated ,null AS active_flag_na ,survey_country.number_of_sites_committed AS updated_sites_activated ,survey_country.patients_committed AS updated_patients_committed ,to_char(((to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd')):: DATE) + interval '1 day' * ((CASE WHEN ((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END)) = 0 THEN 0 ELSE ((survey_country.patients_committed)/((survey_country.number_of_sites_committed)*(CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END)))END)*30.4) ,'yyyy-mm-dd') as projected_LPI ,(cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4 AS planned_recruitment_duration ,CASE WHEN ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4) = 0 OR survey_country.number_of_sites_committed = 0 THEN 0 ELSE (survey_country.patients_committed / survey_country.number_of_sites_committed / ((cohort_table.last_patient_in_date::DATE - (to_char(survey_country.timeline_fsi_date::DATE + interval '1 day' * survey_country.avg_si_to_fp_in, 'yyyy-mm-dd'))::DATE) / 30.4)) END AS updated_recruitment_rate ,study_country.cost_site_euro AS cost_per_site ,((study_country.cost_patient_euro :: double precision *survey_country.patients_committed)+(study_country.cost_site_euro*survey_country.number_of_sites_committed)) as total_cost ,survey_site2.min_avialable_patients ,survey_site2.max_avialable_patients FROM ( SELECT site_country ,scenario_id ,country_code ,region_code ,region ,theme_id FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y') AS site_ranking LEFT JOIN ( SELECT timeline_fsi_date ,timeline_50_si_date ,timeline_all_si_date ,timeline_fpi_date ,timeline_lpi_date ,avg_si_to_fp_in ,number_of_sites_committed ,patients_committed ,country_name ,recruitment_duration ,dropout_rate ,screen_failure_rate ,include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS survey_country ON site_ranking.site_country = survey_country.country_name INNER JOIN ( SELECT site_country ,patients_committed FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' ) AS survey_site ON site_ranking.site_country = survey_site.site_country LEFT JOIN ( SELECT site_country ,count(interested_in_study) AS no_of_sites_interested FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE lower(interested_in_study) IN ( 'yes, highly interested' ,'yes, moderately interested' ) AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true GROUP BY site_country ) AS survey_site1 ON survey_site.site_country = survey_site1.site_country LEFT JOIN ( SELECT site_country ,SUM(CEIL((TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 1)), '9G999g999') + TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 2)), '9G999g999')) / 2)) AS no_of_patients_aggregated, sum(TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 1)), '9G999g999')) as min_avialable_patients,sum(TO_NUMBER(TRIM(SPLIT_PART(patients_committed, '-', 2)), '9G999g999')) as max_avialable_patients FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' GROUP BY site_country ) AS survey_site2 ON survey_site.site_country = survey_site2.site_country LEFT JOIN ( SELECT country ,median_enrollment_rate ,regulatory_iec_timeline FROM $$schema$$.f_rpt_scenario_country_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y' ) AS country_ranking ON site_ranking.site_country = country_ranking.country LEFT JOIN ( SELECT DISTINCT standard_country ,cost_patient_euro ,cost_site_euro FROM $$schema_reporting$$.F_RPT_STUDY_COUNTRY_DETAILS where study_code = (select study_code from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$') group by study_code,standard_country,cost_patient_euro ,cost_site_euro ) AS study_country ON site_ranking.site_country = study_country.standard_country LEFT JOIN (select max(last_patient_in) :: text as last_patient_in_date, scenario_id,theme_id from $$schema$$.f_rpt_cohort_scenario_stdy_sumry where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and lower(active_flag) = 'y' group by scenario_id,theme_id) as cohort_table on site_ranking.scenario_id = cohort_table.scenario_id and site_ranking.theme_id = cohort_table.theme_id where ( lower(survey_country.include_in_trial) = 'yes' OR lower(survey_country.include_in_trial) IS NULL ) AND lower(survey_country.country_name) = '$$country$$' GROUP BY site_ranking.site_country ,site_ranking.scenario_id ,site_ranking.theme_id ,site_ranking.country_code ,site_ranking.region_code ,site_ranking.region ,survey_country.timeline_fsi_date ,survey_country.timeline_50_si_date ,survey_country.timeline_all_si_date ,survey_country.timeline_fpi_date ,survey_country.timeline_lpi_date ,survey_country.avg_si_to_fp_in ,survey_country.number_of_sites_committed ,survey_country.patients_committed ,study_country.cost_patient_euro ,country_ranking.median_enrollment_rate ,cohort_table.last_patient_in_date ,survey_country.dropout_rate ,survey_country.screen_failure_rate ,country_ranking.regulatory_iec_timeline ,survey_site1.no_of_sites_interested ,survey_site2.no_of_patients_aggregated ,study_country.cost_site_euro ,survey_site2.min_avialable_patients ,survey_site2.max_avialable_patients )",
        "custom_scenario_country_false": "( SELECT DISTINCT(country_name) FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE enrollment_scenario_identifier = 'custom' AND active_flag = True) EXCEPT SELECT DISTINCT (site_country) FROM ( select distinct site_ranking.site_country from ( SELECT site_country FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y' ) AS site_ranking LEFT JOIN ( SELECT country_name,include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS survey_country ON site_ranking.site_country = survey_country.country_name INNER JOIN ( SELECT site_country AS survey_country FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' ) AS survey_site ON site_ranking.site_country = survey_site.survey_country INNER JOIN ( SELECT country FROM $$schema$$.f_rpt_scenario_country_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y' ) AS country_ranking ON site_ranking.site_country = country_ranking.country INNER JOIN ( SELECT DISTINCT standard_country FROM $$schema_reporting$$.F_RPT_STUDY_COUNTRY_DETAILS ) AS study_country ON site_ranking.site_country = study_country.standard_country WHERE ( lower(survey_country.include_in_trial) = 'yes' OR lower(survey_country.include_in_trial) IS NULL ) ) a",
        "update_active_flag_false_custom": "UPDATE $$schema$$.f_rpt_user_project_enrollment_details SET active_flag = False WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(enrollment_scenario_identifier) = 'custom' AND country_name = '$$country_name$$'",
        "custom_scenario_country_true": "SELECT DISTINCT country_name FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE enrollment_scenario_identifier = 'custom' AND country_name IN(SELECT DISTINCT (site_country) FROM ( select distinct site_ranking.site_country from ( SELECT site_country FROM $$schema$$.f_rpt_scenario_site_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y') AS site_ranking LEFT JOIN ( SELECT country_name,include_in_trial FROM $$schema$$.f_rpt_user_scenario_survey_country_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true ) AS survey_country ON site_ranking.site_country = survey_country.country_name INNER JOIN ( SELECT site_country AS survey_country FROM $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND is_active = true AND lower(include_in_trial) = 'yes' ) AS survey_site ON site_ranking.site_country = survey_site.survey_country INNER JOIN ( SELECT country FROM $$schema$$.f_rpt_scenario_country_ranking_final WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(active_flag) = 'y' ) AS country_ranking ON site_ranking.site_country = country_ranking.country INNER JOIN ( SELECT DISTINCT standard_country FROM $$schema_reporting$$.F_RPT_STUDY_COUNTRY_DETAILS ) AS study_country ON site_ranking.site_country = study_country.standard_country WHERE ( lower(survey_country.include_in_trial) = 'yes' OR lower(survey_country.include_in_trial) IS NULL ) ) a)",
        "get_custom_enrollment_id": "select distinct enrollment_scenario_id, created_timestamp from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and enrollment_scenario_name = '$$custom_scenario$$' and active_flag = True ",
        "get_regulatory_timeline": "select regulatory_timeline from $$schema$$.f_rpt_user_project_enrollment_details WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = True AND country_code = '$$country_code$$'",
        "update_active_flag_true_custom":"UPDATE $$schema$$.f_rpt_user_project_enrollment_details SET active_flag = True WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(enrollment_scenario_identifier) = 'custom' AND country_name = '$$country_name$$'",
        "country_columns_to_update": "select site_ranking.country_code ,site_ranking.site_country AS country_name ,site_ranking.region_code ,site_ranking.region AS region_name FROM $$schema$$.f_rpt_scenario_site_ranking AS site_ranking LEFT JOIN $$schema$$.f_rpt_user_scenario_survey_country_dtl AS survey_country ON site_ranking.site_country = survey_country.country_name AND site_ranking.scenario_id = survey_country.scenario_id AND site_ranking.theme_id = survey_country.theme_id INNER JOIN $$schema$$.f_rpt_user_scenario_survey_site_investigator_dtl AS survey_site ON site_ranking.site_country = survey_site.site_country AND site_ranking.scenario_id = survey_site.scenario_id AND site_ranking.theme_id = survey_site.theme_id INNER JOIN $$schema$$.f_rpt_scenario_country_ranking_final where scenario_id = $$scenario_id$$ AND theme_id = $$theme_id$$",
        "update_country_details": "update $$schema$$.f_rpt_user_project_enrollment_details set country_code = '$$country_code$$', country_name = '$$country_name$$' region_code = '$$region_code$$' region_name = '$$region_name$$' where scenario_id='$$scenario_id$$' and theme_id = '$$theme_id$$' and enrollment_scenario_identifier = 'custom'",
        "insert_na_record_to_PE":"insert into $$schema$$.f_rpt_user_project_enrollment_details(scenario_id,theme_id,created_by,active_flag_na) VALUES('$$scenario_id$$','$$theme_id$$','$$created_by$$','NA')",
        "get_duplicate_custom_enrollment_records": "SELECT * FROM(SELECT *, count(*) OVER (PARTITION BY enrollment_scenario_id, country_name) AS count FROM $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(enrollment_scenario_identifier) = 'custom' and lower(enrollment_scenario_name) = '$$enrollment_scenario_name$$' and active_flag = True ) tableWithCount WHERE tableWithCount.count > 1;",
        "query_to_delete_duplicate_custom_records": "WITH x AS(SELECT enrollment_scenario_id id, country_name country, min(ctid) FROM $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND lower(enrollment_scenario_identifier) = 'custom' and lower(enrollment_scenario_name) = '$$enrollment_scenario_name$$' and active_flag = True GROUP BY 1,2 HAVING count(*) > 1) DELETE FROM $$schema$$.f_rpt_user_project_enrollment_details USING x WHERE enrollment_scenario_id = (id) and country_name = country AND $$schema$$.f_rpt_user_project_enrollment_details.ctid <> x.min RETURNING *;",
        "get_count_country_records": "select count(*) from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and enrollment_scenario_name = '$$custom_scenario_name$$' and enrollment_scenario_id = '$$custom_enrollment_scenario_id$$' and lower(country_name) = '$$country$$'",
        "update_active_flag_true_country_already_exist": "update $$schema$$.f_rpt_user_project_enrollment_details set active_flag = True where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and enrollment_scenario_name = '$$custom_scenario_name$$' and enrollment_scenario_id = '$$custom_enrollment_scenario_id$$' and lower(country_name) = '$$country$$' and updated_timestamp =(select max(updated_timestamp) from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' and theme_id = '$$theme_id$$' and enrollment_scenario_name = '$$custom_scenario_name$$' and enrollment_scenario_id = '$$custom_enrollment_scenario_id$$' and lower(country_name) = '$$country$$')",
        "rampup_flag_false": "SELECT coalesce(custom_enrollment_site_ramp_up_factor, default_percentage_site_ramp_up_factor) AS site_ramp_up_factor ,coalesce(custom_enrollment_adjustment_factor, default_percentage_enrollment_adjustment_factor) AS enrollment_adjustment_factor ,month_sequence AS month FROM $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf a WHERE( country_code ,enrollment_scenario_id ,scenario_id ,enrollment_scenario_identifier) IN ( SELECT country_code ,enrollment_scenario_id ,scenario_id ,enrollment_scenario_identifier FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE ramp_up_update_flag = False ) AND active_flag = True AND scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND country_code ='$$country_code$$' ORDER BY month",
        "get_rampup_eaf_record": "SELECT coalesce(custom_enrollment_site_ramp_up_factor, default_percentage_site_ramp_up_factor) AS site_ramp_up_factor ,coalesce(custom_enrollment_adjustment_factor, default_percentage_enrollment_adjustment_factor) AS enrollment_adjustment_factor ,month_sequence AS month FROM $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf where country_code = '$$country_code$$' AND active_flag = True AND scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' ORDER BY month",
        "get_details_calculate_from_PE": "SELECT updated_patients_committed::DOUBLE PRECISION as no_of_patients_committed ,updated_sites_committed::DOUBLE PRECISION as no_of_sites ,planned_recruitment_duration AS recruitment_duration ,updated_recruitment_rate AS enrolled_rate_psm ,screen_failure_rate ,case WHEN lower(enrollment_scenario_identifier) = 'survey' then cast(( last_patient_in_date :: DATE - all_sites_initiated :: DATE) / 30.4 AS DOUBLE PRECISION) when lower(enrollment_scenario_identifier) = 'custom' then cast(( projected_lpi :: DATE - all_sites_initiated :: DATE ) / 30.4 AS DOUBLE PRECISION ) END as recruitment_duration_ASI_LPI FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE country_code = '$$country_code$$' AND active_flag = True AND scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$'",
        "chek_insert_query_custom": "select * from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' and active_flag = True and enrollment_scenario_name = '$$custom_scenario$$' and enrollment_scenario_id ='$$enrollment_scenario_id$$' and country_name = '$$country$$'",
        "get_protocol_approval_date": "select(CASE WHEN trial_universe_start_date IS NULL THEN '2000-01-01' ELSE trial_universe_start_date END) as protocol_approval_date from $$schema$$.f_rpt_scenario_stdy_sumry where scenario_id= '$$scenario_id$$' and lower(active_flag) = 'y' ",
        "checking_rampup_flag": "select ramp_up_update_flag from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id='$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$' and country_code='$$country_code$$' and country_name='$$country_name$$'",
        "update_rampup_flag": "update $$schema$$.f_rpt_user_project_enrollment_details set ramp_up_update_flag = False where scenario_id='$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$' AND country_code='$$country_code$$' AND country_name='$$country_name$$' ",
        "get_rampup_factor": "select first_patient_in_date,first_site_initiated,fifty_perc_site_initiated,all_sites_initiated,last_patient_in_date,projected_lpi from $$schema$$.f_rpt_user_project_enrollment_details where scenario_id='$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$' and country_code='$$country_code$$' AND active_flag = 'True'",
        "eaf_query": "select enrollment_adjustment_factor,months from $$schema$$.f_rpt_enrollment_adjustment_factor where country_code='$$country_code$$' and country_name='$$country_name$$'",
        "update_enrollment_details": "UPDATE $$schema$$.f_rpt_user_project_enrollment_details SET enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$', country_code = '$$country_code$$', country_name = '$$country_name$$', region_code = '$$region_code$$', region_name = '$$region_name$$', first_site_initiated = '$$first_site_initiated$$', fifty_perc_site_initiated = '$$fifty_perc_site_initiated$$', all_sites_initiated = '$$all_sites_initiated$$', first_patient_in_date = '$$first_patient_in_date$$', last_patient_in_date = '$$last_patient_in_date$$', avg_time_from_site_initiation_to_fpi = $$avg_time_from_site_initiation_to_fpi$$, no_of_sites = $$no_of_sites$$, no_of_patients_committed = $$no_of_patients_committed$$, cost_per_patient = $$cost_per_patient$$, enrolled_rate_psm = $$enrolled_rate_psm$$, projected_recruitment_duration = $$projected_recruitment_duration$$, patient_drop_rate = $$patient_drop_rate$$, screen_failure_rate = $$screen_failure_rate$$, include_country_flag = $$include_country_flag$$, updated_by = '$$updated_by$$', updated_timestamp = '$$updated_timestamp$$', ramp_up_update_flag = '$$ramp_up_update_flag$$', updated_sites_committed = $$updated_sites_committed$$, updated_patients_committed = $$updated_patients_committed$$, planned_recruitment_duration = $$planned_recruitment_duration$$, updated_recruitment_rate = $$updated_recruitment_rate$$, projected_LPI = '$$projected_lpi$$', cost_per_site = $$cost_per_site$$, total_cost = $$total_cost$$ WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND country_code = '$$country_code$$' AND country_name = '$$country_name$$' AND region_code = '$$region_code$$' AND region_name = '$$region_name$$'",
        "sites_activation_graph_study": "SELECT graph_level ,region_name ,enrollment_date ,round(percentage_sites_activated, 0) AS percentage_sites_activated FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND lower(graph_level) = 'study' AND region_name is not null group by graph_level ,region_name ,enrollment_date ,percentage_sites_activated ORDER BY enrollment_date",
        "sites_activation_graph_country": "SELECT graph_level ,country_name ,enrollment_date ,round(percentage_sites_activated, 0) AS percentage_sites_activated FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND lower(graph_level) = 'country' GROUP BY graph_level ,country_name ,enrollment_date ,percentage_sites_activated order by country_name",
        "patient_enrollment_graph": "select graph_level,enrollment_date,region_name,country_name,round(cast(patients_count as numeric),0) as patients_count from $$schema$$.f_rpt_aggregated_results_patients_enrolled where scenario_id='$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$'and active_flag=True order by enrollment_date",
        "check_id_exists_query": "SELECT count(1) FROM $$schema$$.f_rpt_check_download_status WHERE user_id = '$$user_id$$' AND download_id = '$$download_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$'",
        "check_results_exists_site": "SELECT count(*) FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE  scenario_id = '$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' and  active_flag= True ",
        "check_aggregated_sites_activated_details": "SELECT * FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE  enrollment_scenario_id='$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$' and enrollment_scenario_name='$$enrollment_scenario_name$$'  and active_flag='True'",
        "check_results_exists_patient": "SELECT count(*) FROM $$schema$$.f_rpt_aggregated_results_patients_enrolled WHERE  scenario_id = '$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' and active_flag=True",
        "check_aggregated_patients_details": "SELECT * FROM $$schema$$.f_rpt_aggregated_results_patients_enrolled WHERE  enrollment_scenario_id='$$enrollment_scenario_id$$' and enrollment_scenario_identifier='$$enrollment_scenario_identifier$$' and enrollment_scenario_name='$$enrollment_scenario_name$$'  and active_flag='True'",
        "update_patients_active_flag_details":"update $$schema$$.f_rpt_aggregated_results_patients_enrolled set active_flag = False WHERE scenario_id = '$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$' ",
        "update_sites_active_flag_details": "update $$schema$$.f_rpt_aggregated_results_sites_activated set active_flag = False where scenario_id = '$$scenario_id$$' and enrollment_scenario_id='$$enrollment_scenario_id$$'",
        "insert_into_sites_activated_details": "INSERT INTO $$schema$$.f_rpt_aggregated_results_sites_activated( scenario_id, enrollment_scenario_id, enrollment_scenario_name, enrollment_scenario_identifier, region_name, enrollment_date, percentage_sites_activated, created_by, updated_by, created_timestamp, updated_timestamp, active_flag,graph_level) values( '$$scenario_id$$', '$$enrollment_scenario_id$$', '$$enrollment_scenario_name$$', '$$enrollment_scenario_identifier$$', '$$region_name$$', '$$enrollment_date$$', '$$percentage_sites_activated$$', '$$created_by$$', '$$updated_by$$', '$$created_timestamp$$', '$$updated_timestamp$$', 'True','study' )",
        "insert_into_sites_activated_details_country": "INSERT INTO $$schema$$.f_rpt_aggregated_results_sites_activated( scenario_id, enrollment_scenario_id, enrollment_scenario_name, enrollment_scenario_identifier, enrollment_date, percentage_sites_activated, created_by, updated_by, created_timestamp, updated_timestamp, active_flag,graph_level,country_name) values( '$$scenario_id$$', '$$enrollment_scenario_id$$', '$$enrollment_scenario_name$$', '$$enrollment_scenario_identifier$$', '$$enrollment_date$$', '$$percentage_sites_activated$$', '$$created_by$$', '$$updated_by$$', '$$created_timestamp$$', '$$updated_timestamp$$', 'True','country','$$country_name$$' )",
        "insert_into_patients_details_global": "INSERT INTO $$schema$$.f_rpt_aggregated_results_patients_enrolled( scenario_id, enrollment_scenario_id, enrollment_scenario_name, enrollment_scenario_identifier, enrollment_date, patients_count, graph_type, created_by, updated_by, created_timestamp, updated_timestamp, active_flag,graph_level) values( '$$scenario_id$$', '$$enrollment_scenario_id$$', '$$enrollment_scenario_name$$', '$$enrollment_scenario_identifier$$', '$$enrollment_date$$', '$$patients_count$$', 'enrolled', '$$created_by$$', '$$updated_by$$', '$$created_timestamp$$', '$$updated_timestamp$$', 'True','global' )",
        "insert_into_patients_details_region": "INSERT INTO $$schema$$.f_rpt_aggregated_results_patients_enrolled( scenario_id, enrollment_scenario_id, enrollment_scenario_name, enrollment_scenario_identifier, enrollment_date, patients_count, graph_type, created_by, updated_by, created_timestamp, updated_timestamp, active_flag,graph_level,region_name) values( '$$scenario_id$$', '$$enrollment_scenario_id$$', '$$enrollment_scenario_name$$', '$$enrollment_scenario_identifier$$', '$$enrollment_date$$', '$$patients_count$$', 'enrolled', '$$created_by$$', '$$updated_by$$', '$$created_timestamp$$', '$$updated_timestamp$$', 'True','region','$$region_name$$')",
        "insert_into_patients_details_country": "INSERT INTO $$schema$$.f_rpt_aggregated_results_patients_enrolled( scenario_id, enrollment_scenario_id, enrollment_scenario_name, enrollment_scenario_identifier, enrollment_date, patients_count, graph_type, created_by, updated_by, created_timestamp, updated_timestamp, active_flag,graph_level,country_name) values( '$$scenario_id$$', '$$enrollment_scenario_id$$', '$$enrollment_scenario_name$$', '$$enrollment_scenario_identifier$$', '$$enrollment_date$$', '$$patients_count$$', 'enrolled', '$$created_by$$', '$$updated_by$$', '$$created_timestamp$$', '$$updated_timestamp$$', 'True','country','$$country_name$$')",
        "update_download_status_query": "UPDATE $$schema$$.f_rpt_check_download_status SET STATUS = '$$status$$' ,s3_zip_location = '$$s3_zip_location$$' ,s3_presigned_url = '$$s3_presigned_url$$' ,updated_timestamp = '$$updated_time_stamp$$' WHERE user_id = '$$user_id$$' AND download_id = '$$download_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$'",
        "insert_download_status_query": "INSERT INTO $$schema$$.f_rpt_check_download_status values( '$$download_id$$', '$$enrollment_scenario_id$$','$$download_type$$', '$$user_id$$', '$$status$$', '$$s3_zip_location$$', '$$s3_presigned_url$$', '$$created_timestamp$$', '$$updated_time_stamp$$')",
        "get_download_status_query": "SELECT * FROM $$schema$$.f_rpt_check_download_status WHERE user_id = '$$user_id$$' AND STATUS = 'completed' AND enrollment_scenario_id = '$$enrollment_scenario_id$$'",
        "insert_into_country_level_calculated": "insert into $$schema$$.f_rpt_user_project_country_level_calculated( scenario_id, enrollment_scenario_id, version, enrollment_scenario_name, enrollment_scenario_identifier, country_code, country_name, enrollment_date, active, screened, enrolled, completed, created_by, updated_by, created_timestamp, updated_timestamp, active_flag,region_code,region_name) values( '$$scenario_id$$', '$$enrollment_scenario_id$$', null, '$$enrollment_scenario_name$$', '$$enrollment_scenario_identifier$$', '$$country_code$$', '$$country_name$$', '$$enrollment_date$$', '$$active$$', null, '$$enrolled$$', null, '$$created_by$$', '$$updated_by$$', '$$created_timestamp$$', '$$updated_timestamp$$', True,'$$region_code$$', '$$region_name$$' ) ",
        "update_country_level_active_flag_false": "update $$schema$$.f_rpt_user_project_country_level_calculated set active_flag = False where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$'",
        "get_country_level_active": "SELECT enrollment_date ,region_name ,country_name ,active from $$schema$$.f_rpt_user_project_country_level_calculated where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and active_flag = True",
        "get_count_records_country_level_calculated": "select count(*) from $$schema$$.f_rpt_user_project_country_level_calculated where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and active_flag = True",
        "get_patients_enrolled_details": "select region_code ,region_name, country_code,country_name, enrollment_date, enrolled from $$schema$$.f_rpt_user_project_country_level_calculated where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and active_flag = True order by enrollment_date ",
        "get_patients_enrolled_region_graph": "select enrollment_date, region_name, round( cast(patients_count as numeric), 0) as patients_count from $$schema$$.f_rpt_aggregated_results_patients_enrolled where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' and active_flag = True and lower(graph_level) = 'region' and region_name is not null group by region_name, enrollment_date, patients_count order by enrollment_date",
        "get_patients_enrolled_country_graph": "select enrollment_date, country_name, round( cast(patients_count as numeric), 0) as patients_count from $$schema$$.f_rpt_aggregated_results_patients_enrolled where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' and active_flag = True and lower(graph_level) = 'country' and country_name is not null group by country_name, enrollment_date, patients_count order by enrollment_date",
        "get_sites_activated_graph_region": "SELECT region_name ,enrollment_date ,round(percentage_sites_activated, 0) AS percentage_sites_activated FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND lower(graph_level) = 'study' AND region_name is not null group by region_name ,enrollment_date ,percentage_sites_activated ORDER BY enrollment_date",
        "get_sites_activated_graph_country": "SELECT country_name ,enrollment_date ,round(percentage_sites_activated, 0) AS percentage_sites_activated FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND lower(graph_level) = 'country' AND country_name is not null group by country_name ,enrollment_date ,percentage_sites_activated ORDER BY enrollment_date",
        "get_distinct_enrollment_dates_patients_enrolled_region": "select distinct enrollment_date from $$schema$$.f_rpt_aggregated_results_patients_enrolled where scenario_id = '$$scenario_id$$' and enrollment_scenario_id = '$$enrollment_scenario_id$$' and enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' and active_flag = True and lower(graph_level) = 'region' and region_name is not null group by region_name, enrollment_date, patients_count order by enrollment_date",
        "get_distinct_enrollment_dates_sites_activated_region": "SELECT distinct enrollment_date FROM $$schema$$.f_rpt_aggregated_results_sites_activated WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND lower(graph_level) = 'study' AND region_name is not null group by region_name, enrollment_date, percentage_sites_activated ORDER BY enrollment_date",
        "get_presigned_download_status_query": "select * from $$schema$$.f_rpt_check_download_status where user_id = '$$user_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$'",
        "check_site_ramp_up_eaf_details": "SELECT count(*) FROM $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND country_code = '$$country_code$$'",
        "update_ramp_up_active_flag_false": "update $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf set active_flag = False WHERE scenario_id = '$$scenario_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND country_code = '$$country_code$$'",
        "insert_default_rampup_eaf_factor": "INSERT INTO $$schema$$.f_rpt_user_project_enrollment_ramp_up_eaf( scenario_id ,enrollment_scenario_id ,enrollment_scenario_identifier ,country_code ,default_percentage_enrollment_adjustment_factor ,default_percentage_site_ramp_up_factor ,month_sequence ,created_by ,updated_by ,active_flag ,created_timestamp ,updated_timestamp) VALUES ( '$$scenario_id$$' ,'$$enrollment_scenario_id$$' ,'$$enrollment_scenario_identifier$$' ,'$$country_code$$' ,'$$default_adjustment_factor$$' ,$$default_ramp_up_factor$$ ,'$$month_sequence$$' ,'$$userid$$' ,'$$userid$$' ,'True' ,'$$timestamp$$' ,'$$timestamp$$' )",
        "check_active_flag_na":" select distinct active_flag,active_flag_na from $$schema$$.f_rpt_user_project_enrollment_details  WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' ",
        "check_data_refresh_status": "SELECT count(*) FROM $$schema$$.f_rpt_user_project_enrollment_details where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'True'",
        "export_project_enrollment_survey": "SELECT country_name, region_name, round(no_of_sites, 0) as no_of_sites, round(no_of_sites_interested :: numeric, 0) as no_of_sites_interested, round(no_of_patients_committed, 0) as no_of_patients_committed, round(min_avialable_patients :: numeric, 0) as min_avialable_patients, round(max_avialable_patients :: numeric, 0) as max_avialable_patients, CASE WHEN round(planned_recruitment_duration :: numeric, 0) = 0 THEN 1 ELSE round(planned_recruitment_duration :: numeric, 0) END AS planned_recruitment_duration, round(enrolled_rate_psm :: numeric, 2) as enrolled_rate_psm, first_site_initiated, fifty_perc_site_initiated, all_sites_initiated, round( avg_time_from_site_initiation_to_fpi, 0) as avg_time_from_site_initiation_to_fpi, first_patient_in_date, last_patient_in_date, cost_per_patient, cost_per_site, total_cost FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_name = '$$enrollment_scenario_name$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND include_country_flag = True order by country_name",
        "export_project_enrollment_custom": "SELECT country_name, region_name, round(no_of_sites, 0) as no_of_sites, round(updated_sites_committed, 0) as updated_sites_committed, round(no_of_sites_interested :: numeric, 0) as no_of_sites_interested, round(no_of_patients_committed, 0) as no_of_patients_committed, round(updated_patients_committed, 0) as updated_patients_committed, round(min_avialable_patients :: numeric, 0) as min_avialable_patients, round(max_avialable_patients :: numeric, 0) as max_avialable_patients, CASE WHEN round(planned_recruitment_duration :: numeric, 0) = 0 THEN 1 ELSE round(planned_recruitment_duration :: numeric , 0) END AS planned_recruitment_duration, CASE WHEN round( projected_recruitment_duration :: numeric, 0) = 0 THEN 1 ELSE round( projected_recruitment_duration :: numeric, 0 ) END AS projected_recruitment_duration, round(enrolled_rate_psm :: numeric, 2) as enrolled_rate_psm, round(updated_recruitment_rate :: numeric, 2) as updated_recruitment_rate, first_site_initiated, fifty_perc_site_initiated, all_sites_initiated, round( avg_time_from_site_initiation_to_fpi, 0 ) as avg_time_from_site_initiation_to_fpi, first_patient_in_date, last_patient_in_date, projected_lpi, cost_per_patient, cost_per_site, total_cost FROM $$schema$$.f_rpt_user_project_enrollment_details WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$' AND enrollment_scenario_name = '$$enrollment_scenario_name$$' AND enrollment_scenario_identifier = '$$enrollment_scenario_identifier$$' AND active_flag = True AND include_country_flag = True order by country_name",
        "update_download_status_to_delete_query": "UPDATE $$schema$$.f_rpt_check_download_status set status = 'deleted', updated_timestamp = 'NOW()' where download_id in $$download_id$$ and user_id = '$$user_id$$' AND enrollment_scenario_id = '$$enrollment_scenario_id$$'"
      },
      "metric_data_upload": {
        "check_old_version_data": "SELECT max(version) AS version FROM $$schema$$.user_metrics_uploaded_metadata WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND rank_list_type = '$$rank_list_type$$'",
        "update_old_version_data": "UPDATE $$schema$$.user_metrics_uploaded_metadata SET active_flag = 'N', updated_by = '$$updated_by$$',  last_updated_time = '$$last_updated_time$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND rank_list_type = '$$rank_list_type$$'",
        "insert_country_meta_records": "INSERT INTO $$schema$$.user_metrics_uploaded_metadata (file_id, rank_list_type, version, scenario_id, theme_id, validation_status, ingestion_status, created_by,  created_time, updated_by, last_updated_time, s3_location, active_flag) VALUES ('$$file_id$$', '$$rank_list_type$$', $$version$$, '$$scenario_id$$', '$$theme_id$$', '$$validation_status$$', '$$ingestion_status$$', '$$created_by$$', '$$created_time$$', '$$updated_by$$', '$$last_updated_time$$', '$$s3_location$$', 'Y')",
        "update_validation_status": "UPDATE $$schema$$.user_metrics_uploaded_metadata SET validation_status = 'Completed', updated_by = '$$updated_by$$', last_updated_time = '$$last_updated_time$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND rank_list_type = '$$rank_list_type$$' AND file_id = '$$file_id$$'",
        "update_ingestion_status": "UPDATE $$schema$$.user_metrics_uploaded_metadata SET ingestion_status = 'Completed', s3_location = '$$s3_location$$', updated_by = '$$updated_by$$',  last_updated_time = '$$last_updated_time$$' WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND rank_list_type = '$$rank_list_type$$' AND file_id = '$$file_id$$'",
        "check_old_rpt_data": "select * from $$schema$$.user_metrics_uploaded_data where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND rank_list_type = '$$rank_list_type$$'",
		"update_old_rpt_data": "UPDATE $$schema$$.user_metrics_uploaded_data SET active_flag = 'N', updated_by = '$$updated_by$$', last_updated_time = '$$last_updated_time$$' where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'Y' AND rank_list_type = '$$rank_list_type$$'",
        "get_actual_version": "SELECT max(version) AS version FROM $$schema$$.user_metrics_uploaded_data WHERE scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND active_flag = 'N' AND rank_list_type = '$$rank_list_type$$'",
        "get_pre_signed_url": "SELECT distinct s3_location AS s3_metadata_file FROM $$schema$$.user_metrics_uploaded_metadata where scenario_id = '$$scenario_id$$' AND theme_id = '$$theme_id$$' AND rank_list_type = '$$rank_list_type$$' AND active_flag = 'Y'"
      }
    },
    "host_ip": "$$host_ip$$",
    "host_port": "$$host_port$$",
    "schema": "$$schema$$",
    "schema_reporting": "$$schema_reporting$$",
    "environment": "$$environment$$",
    "s3_target_file": "s3://$$bucket_name$$/clinical-data-lake/$$environment$$/",
    "frontend_url": "$$frontend_url$$",
    "client_name": "$$client_name$$",
    "db_connection_details": {
      "host": "$$host$$",
      "port": "$$port$$",
      "username": "$$username$$",
      "database_name": "$$database_name$$",
      "secret_name": "$$secret_name$$",
      "db_region_name": "$$db_region_name$$",
      "schema": "$$schema$$"
    },
    "s3_details": {
      "bucket_name": "$$bucket_name$$",
      "country_head_s3_path": "clinical-data-lake/uploads/country_head_details.csv",
      "export_qualtrics_response": "s3://$$bucket_name$$/clinical-data-lake/$$environment$$/applications/export_service/",
      "metric_data_country_file": "s3://$$bucket_name$$/clinical-data-lake/$$environment$$/applications/uploads/country_metric/user_id={user_id}/scenario_id={scenario_id}/time_stamp/",
	  "metric_data_site_file": "s3://$$bucket_name$$/clinical-data-lake/$$environment$$/applications/uploads/site_metric/user_id={user_id}/scenario_id={scenario_id}/time_stamp/",
      "EXPORT_PATH": "s3://$$bucket_name$$/clinical-data-lake/$$environment$$/applications/export_service/{file_name}",
      "EXPORT_ENROLLMENT_S3_PATH": "s3://$$bucket_name$$/temp/clinical-data-lake/applications/export_service/project_enrollment"
    },
    "smtp_details": {
      "smtp_server": "$$smtp_server$$",
      "smtp_port": "$$smtp_port$$"
    },
    "time_interval_in_days": 2,
    "user_roles_queries" : {
      "check_superuser" : "SELECT app_user_group FROM $$schema$$.f_rpt_user_details WHERE user_access_id  = '$$user_id$$' and active_flag = True",
      "get_user_group" : "SELECT user_group, write_access FROM $$schema$$.f_rpt_user_scenario_details WHERE user_access_id = '$$user_id$$' AND scenario_id = '$$scenario_id$$' AND active_flag = true",
      "check_if_authorized_to_edit_screen" :"SELECT COUNT(DISTINCT user_access_id) FROM $$schema$$.f_rpt_user_activity_scenario_details WHERE user_group in('gfl', 'superuser', 'mda') AND scenario_id = '$$scenario_id$$' AND user_active_flag = true AND is_locked = true ",
      "edit_lock_list_user": "SELECT DISTINCT user_access_id FROM $$schema$$.f_rpt_user_activity_scenario_details WHERE scenario_id = '$$scenario_id$$' AND user_active_flag = true AND is_locked = true",
      "update_user_session_time" : "UPDATE $$schema$$.f_rpt_user_session_activity_log SET session_end_timestamp = '$$updated_timestamp$$' WHERE user_id = '$$user_id$$' AND session_id = '$$session_id$$' "
    }
  }
}